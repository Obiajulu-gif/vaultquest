"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@cosmjs";
exports.ids = ["vendor-chunks/@cosmjs"];
exports.modules = {

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/addresses.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/addresses.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// See https://github.com/tendermint/tendermint/blob/f2ada0a604b4c0763bda2f64fac53d506d3beca7/docs/spec/blockchain/encoding.md#public-key-cryptography\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pubkeyToAddress = exports.pubkeyToRawAddress = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst encoding_2 = __webpack_require__(/*! ./encoding */ \"(ssr)/./node_modules/@cosmjs/amino/build/encoding.js\");\nconst pubkeys_1 = __webpack_require__(/*! ./pubkeys */ \"(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\");\nfunction rawEd25519PubkeyToRawAddress(pubkeyData) {\n    if (pubkeyData.length !== 32) {\n        throw new Error(`Invalid Ed25519 pubkey length: ${pubkeyData.length}`);\n    }\n    return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);\n}\nexports.rawEd25519PubkeyToRawAddress = rawEd25519PubkeyToRawAddress;\nfunction rawSecp256k1PubkeyToRawAddress(pubkeyData) {\n    if (pubkeyData.length !== 33) {\n        throw new Error(`Invalid Secp256k1 pubkey length (compressed): ${pubkeyData.length}`);\n    }\n    return (0, crypto_1.ripemd160)((0, crypto_1.sha256)(pubkeyData));\n}\nexports.rawSecp256k1PubkeyToRawAddress = rawSecp256k1PubkeyToRawAddress;\n// For secp256k1 this assumes we already have a compressed pubkey.\nfunction pubkeyToRawAddress(pubkey) {\n    if ((0, pubkeys_1.isSecp256k1Pubkey)(pubkey)) {\n        const pubkeyData = (0, encoding_1.fromBase64)(pubkey.value);\n        return rawSecp256k1PubkeyToRawAddress(pubkeyData);\n    }\n    else if ((0, pubkeys_1.isEd25519Pubkey)(pubkey)) {\n        const pubkeyData = (0, encoding_1.fromBase64)(pubkey.value);\n        return rawEd25519PubkeyToRawAddress(pubkeyData);\n    }\n    else if ((0, pubkeys_1.isMultisigThresholdPubkey)(pubkey)) {\n        // https://github.com/tendermint/tendermint/blob/38b401657e4ad7a7eeb3c30a3cbf512037df3740/crypto/multisig/threshold_pubkey.go#L71-L74\n        const pubkeyData = (0, encoding_2.encodeAminoPubkey)(pubkey);\n        return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);\n    }\n    else {\n        throw new Error(\"Unsupported public key type\");\n    }\n}\nexports.pubkeyToRawAddress = pubkeyToRawAddress;\nfunction pubkeyToAddress(pubkey, prefix) {\n    return (0, encoding_1.toBech32)(prefix, pubkeyToRawAddress(pubkey));\n}\nexports.pubkeyToAddress = pubkeyToAddress;\n//# sourceMappingURL=addresses.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9hZGRyZXNzZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRywwQkFBMEIsR0FBRyxzQ0FBc0MsR0FBRyxvQ0FBb0M7QUFDcEksaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QyxtQkFBbUIsbUJBQU8sQ0FBQyx3RUFBWTtBQUN2QyxrQkFBa0IsbUJBQU8sQ0FBQyxzRUFBVztBQUNyQztBQUNBO0FBQ0EsMERBQTBELGtCQUFrQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBLHlFQUF5RSxrQkFBa0I7QUFDM0Y7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcT25lRHJpdmVcXERlc2t0b3BcXHZhdWx0cXVlc3RcXG5vZGVfbW9kdWxlc1xcQGNvc21qc1xcYW1pbm9cXGJ1aWxkXFxhZGRyZXNzZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL2YyYWRhMGE2MDRiNGMwNzYzYmRhMmY2NGZhYzUzZDUwNmQzYmVjYTcvZG9jcy9zcGVjL2Jsb2NrY2hhaW4vZW5jb2RpbmcubWQjcHVibGljLWtleS1jcnlwdG9ncmFwaHlcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucHVia2V5VG9BZGRyZXNzID0gZXhwb3J0cy5wdWJrZXlUb1Jhd0FkZHJlc3MgPSBleHBvcnRzLnJhd1NlY3AyNTZrMVB1YmtleVRvUmF3QWRkcmVzcyA9IGV4cG9ydHMucmF3RWQyNTUxOVB1YmtleVRvUmF3QWRkcmVzcyA9IHZvaWQgMDtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBjb3NtanMvY3J5cHRvXCIpO1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2VuY29kaW5nXCIpO1xuY29uc3QgZW5jb2RpbmdfMiA9IHJlcXVpcmUoXCIuL2VuY29kaW5nXCIpO1xuY29uc3QgcHVia2V5c18xID0gcmVxdWlyZShcIi4vcHVia2V5c1wiKTtcbmZ1bmN0aW9uIHJhd0VkMjU1MTlQdWJrZXlUb1Jhd0FkZHJlc3MocHVia2V5RGF0YSkge1xuICAgIGlmIChwdWJrZXlEYXRhLmxlbmd0aCAhPT0gMzIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIEVkMjU1MTkgcHVia2V5IGxlbmd0aDogJHtwdWJrZXlEYXRhLmxlbmd0aH1gKTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBjcnlwdG9fMS5zaGEyNTYpKHB1YmtleURhdGEpLnNsaWNlKDAsIDIwKTtcbn1cbmV4cG9ydHMucmF3RWQyNTUxOVB1YmtleVRvUmF3QWRkcmVzcyA9IHJhd0VkMjU1MTlQdWJrZXlUb1Jhd0FkZHJlc3M7XG5mdW5jdGlvbiByYXdTZWNwMjU2azFQdWJrZXlUb1Jhd0FkZHJlc3MocHVia2V5RGF0YSkge1xuICAgIGlmIChwdWJrZXlEYXRhLmxlbmd0aCAhPT0gMzMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIFNlY3AyNTZrMSBwdWJrZXkgbGVuZ3RoIChjb21wcmVzc2VkKTogJHtwdWJrZXlEYXRhLmxlbmd0aH1gKTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBjcnlwdG9fMS5yaXBlbWQxNjApKCgwLCBjcnlwdG9fMS5zaGEyNTYpKHB1YmtleURhdGEpKTtcbn1cbmV4cG9ydHMucmF3U2VjcDI1NmsxUHVia2V5VG9SYXdBZGRyZXNzID0gcmF3U2VjcDI1NmsxUHVia2V5VG9SYXdBZGRyZXNzO1xuLy8gRm9yIHNlY3AyNTZrMSB0aGlzIGFzc3VtZXMgd2UgYWxyZWFkeSBoYXZlIGEgY29tcHJlc3NlZCBwdWJrZXkuXG5mdW5jdGlvbiBwdWJrZXlUb1Jhd0FkZHJlc3MocHVia2V5KSB7XG4gICAgaWYgKCgwLCBwdWJrZXlzXzEuaXNTZWNwMjU2azFQdWJrZXkpKHB1YmtleSkpIHtcbiAgICAgICAgY29uc3QgcHVia2V5RGF0YSA9ICgwLCBlbmNvZGluZ18xLmZyb21CYXNlNjQpKHB1YmtleS52YWx1ZSk7XG4gICAgICAgIHJldHVybiByYXdTZWNwMjU2azFQdWJrZXlUb1Jhd0FkZHJlc3MocHVia2V5RGF0YSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKCgwLCBwdWJrZXlzXzEuaXNFZDI1NTE5UHVia2V5KShwdWJrZXkpKSB7XG4gICAgICAgIGNvbnN0IHB1YmtleURhdGEgPSAoMCwgZW5jb2RpbmdfMS5mcm9tQmFzZTY0KShwdWJrZXkudmFsdWUpO1xuICAgICAgICByZXR1cm4gcmF3RWQyNTUxOVB1YmtleVRvUmF3QWRkcmVzcyhwdWJrZXlEYXRhKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoKDAsIHB1YmtleXNfMS5pc011bHRpc2lnVGhyZXNob2xkUHVia2V5KShwdWJrZXkpKSB7XG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvYmxvYi8zOGI0MDE2NTdlNGFkN2E3ZWViM2MzMGEzY2JmNTEyMDM3ZGYzNzQwL2NyeXB0by9tdWx0aXNpZy90aHJlc2hvbGRfcHVia2V5LmdvI0w3MS1MNzRcbiAgICAgICAgY29uc3QgcHVia2V5RGF0YSA9ICgwLCBlbmNvZGluZ18yLmVuY29kZUFtaW5vUHVia2V5KShwdWJrZXkpO1xuICAgICAgICByZXR1cm4gKDAsIGNyeXB0b18xLnNoYTI1NikocHVia2V5RGF0YSkuc2xpY2UoMCwgMjApO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgcHVibGljIGtleSB0eXBlXCIpO1xuICAgIH1cbn1cbmV4cG9ydHMucHVia2V5VG9SYXdBZGRyZXNzID0gcHVia2V5VG9SYXdBZGRyZXNzO1xuZnVuY3Rpb24gcHVia2V5VG9BZGRyZXNzKHB1YmtleSwgcHJlZml4KSB7XG4gICAgcmV0dXJuICgwLCBlbmNvZGluZ18xLnRvQmVjaDMyKShwcmVmaXgsIHB1YmtleVRvUmF3QWRkcmVzcyhwdWJrZXkpKTtcbn1cbmV4cG9ydHMucHVia2V5VG9BZGRyZXNzID0gcHVia2V5VG9BZGRyZXNzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkcmVzc2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/coins.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/coins.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.addCoins = exports.parseCoins = exports.coins = exports.coin = void 0;\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\n/**\n * Creates a coin.\n *\n * If your values do not exceed the safe integer range of JS numbers (53 bit),\n * you can use the number type here. This is the case for all typical Cosmos SDK\n * chains that use the default 6 decimals.\n *\n * In case you need to supportr larger values, use unsigned integer strings instead.\n */\nfunction coin(amount, denom) {\n    let outAmount;\n    if (typeof amount === \"number\") {\n        try {\n            outAmount = new math_1.Uint53(amount).toString();\n        }\n        catch (_err) {\n            throw new Error(\"Given amount is not a safe integer. Consider using a string instead to overcome the limitations of JS numbers.\");\n        }\n    }\n    else {\n        if (!amount.match(/^[0-9]+$/)) {\n            throw new Error(\"Invalid unsigned integer string format\");\n        }\n        outAmount = amount.replace(/^0*/, \"\") || \"0\";\n    }\n    return {\n        amount: outAmount,\n        denom: denom,\n    };\n}\nexports.coin = coin;\n/**\n * Creates a list of coins with one element.\n */\nfunction coins(amount, denom) {\n    return [coin(amount, denom)];\n}\nexports.coins = coins;\n/**\n * Takes a coins list like \"819966000ucosm,700000000ustake\" and parses it.\n *\n * Starting with CosmJS 0.32.3, the following imports are all synonym and support\n * a variety of denom types such as IBC denoms or tokenfactory. If you need to\n * restrict the denom to something very minimal, this needs to be implemented\n * separately in the caller.\n *\n * ```\n * import { parseCoins } from \"@cosmjs/proto-signing\";\n * // equals\n * import { parseCoins } from \"@cosmjs/stargate\";\n * // equals\n * import { parseCoins } from \"@cosmjs/amino\";\n * ```\n *\n * This function is not made for supporting decimal amounts and does not support\n * parsing gas prices.\n */\nfunction parseCoins(input) {\n    return input\n        .replace(/\\s/g, \"\")\n        .split(\",\")\n        .filter(Boolean)\n        .map((part) => {\n        // Denom regex from Stargate (https://github.com/cosmos/cosmos-sdk/blob/v0.42.7/types/coin.go#L599-L601)\n        const match = part.match(/^([0-9]+)([a-zA-Z][a-zA-Z0-9/]{2,127})$/);\n        if (!match)\n            throw new Error(\"Got an invalid coin string\");\n        return {\n            amount: match[1].replace(/^0+/, \"\") || \"0\",\n            denom: match[2],\n        };\n    });\n}\nexports.parseCoins = parseCoins;\n/**\n * Function to sum up coins with type Coin\n */\nfunction addCoins(lhs, rhs) {\n    if (lhs.denom !== rhs.denom)\n        throw new Error(\"Trying to add two coins with different denoms\");\n    return {\n        amount: math_1.Decimal.fromAtomics(lhs.amount, 0).plus(math_1.Decimal.fromAtomics(rhs.amount, 0)).atomics,\n        denom: lhs.denom,\n    };\n}\nexports.addCoins = addCoins;\n//# sourceMappingURL=coins.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9jb2lucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxrQkFBa0IsR0FBRyxhQUFhLEdBQUcsWUFBWTtBQUNwRSxlQUFlLG1CQUFPLENBQUMsc0VBQWM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLE1BQU07QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5cXE9uZURyaXZlXFxEZXNrdG9wXFx2YXVsdHF1ZXN0XFxub2RlX21vZHVsZXNcXEBjb3NtanNcXGFtaW5vXFxidWlsZFxcY29pbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFkZENvaW5zID0gZXhwb3J0cy5wYXJzZUNvaW5zID0gZXhwb3J0cy5jb2lucyA9IGV4cG9ydHMuY29pbiA9IHZvaWQgMDtcbmNvbnN0IG1hdGhfMSA9IHJlcXVpcmUoXCJAY29zbWpzL21hdGhcIik7XG4vKipcbiAqIENyZWF0ZXMgYSBjb2luLlxuICpcbiAqIElmIHlvdXIgdmFsdWVzIGRvIG5vdCBleGNlZWQgdGhlIHNhZmUgaW50ZWdlciByYW5nZSBvZiBKUyBudW1iZXJzICg1MyBiaXQpLFxuICogeW91IGNhbiB1c2UgdGhlIG51bWJlciB0eXBlIGhlcmUuIFRoaXMgaXMgdGhlIGNhc2UgZm9yIGFsbCB0eXBpY2FsIENvc21vcyBTREtcbiAqIGNoYWlucyB0aGF0IHVzZSB0aGUgZGVmYXVsdCA2IGRlY2ltYWxzLlxuICpcbiAqIEluIGNhc2UgeW91IG5lZWQgdG8gc3VwcG9ydHIgbGFyZ2VyIHZhbHVlcywgdXNlIHVuc2lnbmVkIGludGVnZXIgc3RyaW5ncyBpbnN0ZWFkLlxuICovXG5mdW5jdGlvbiBjb2luKGFtb3VudCwgZGVub20pIHtcbiAgICBsZXQgb3V0QW1vdW50O1xuICAgIGlmICh0eXBlb2YgYW1vdW50ID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBvdXRBbW91bnQgPSBuZXcgbWF0aF8xLlVpbnQ1MyhhbW91bnQpLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9lcnIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkdpdmVuIGFtb3VudCBpcyBub3QgYSBzYWZlIGludGVnZXIuIENvbnNpZGVyIHVzaW5nIGEgc3RyaW5nIGluc3RlYWQgdG8gb3ZlcmNvbWUgdGhlIGxpbWl0YXRpb25zIG9mIEpTIG51bWJlcnMuXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAoIWFtb3VudC5tYXRjaCgvXlswLTldKyQvKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB1bnNpZ25lZCBpbnRlZ2VyIHN0cmluZyBmb3JtYXRcIik7XG4gICAgICAgIH1cbiAgICAgICAgb3V0QW1vdW50ID0gYW1vdW50LnJlcGxhY2UoL14wKi8sIFwiXCIpIHx8IFwiMFwiO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBhbW91bnQ6IG91dEFtb3VudCxcbiAgICAgICAgZGVub206IGRlbm9tLFxuICAgIH07XG59XG5leHBvcnRzLmNvaW4gPSBjb2luO1xuLyoqXG4gKiBDcmVhdGVzIGEgbGlzdCBvZiBjb2lucyB3aXRoIG9uZSBlbGVtZW50LlxuICovXG5mdW5jdGlvbiBjb2lucyhhbW91bnQsIGRlbm9tKSB7XG4gICAgcmV0dXJuIFtjb2luKGFtb3VudCwgZGVub20pXTtcbn1cbmV4cG9ydHMuY29pbnMgPSBjb2lucztcbi8qKlxuICogVGFrZXMgYSBjb2lucyBsaXN0IGxpa2UgXCI4MTk5NjYwMDB1Y29zbSw3MDAwMDAwMDB1c3Rha2VcIiBhbmQgcGFyc2VzIGl0LlxuICpcbiAqIFN0YXJ0aW5nIHdpdGggQ29zbUpTIDAuMzIuMywgdGhlIGZvbGxvd2luZyBpbXBvcnRzIGFyZSBhbGwgc3lub255bSBhbmQgc3VwcG9ydFxuICogYSB2YXJpZXR5IG9mIGRlbm9tIHR5cGVzIHN1Y2ggYXMgSUJDIGRlbm9tcyBvciB0b2tlbmZhY3RvcnkuIElmIHlvdSBuZWVkIHRvXG4gKiByZXN0cmljdCB0aGUgZGVub20gdG8gc29tZXRoaW5nIHZlcnkgbWluaW1hbCwgdGhpcyBuZWVkcyB0byBiZSBpbXBsZW1lbnRlZFxuICogc2VwYXJhdGVseSBpbiB0aGUgY2FsbGVyLlxuICpcbiAqIGBgYFxuICogaW1wb3J0IHsgcGFyc2VDb2lucyB9IGZyb20gXCJAY29zbWpzL3Byb3RvLXNpZ25pbmdcIjtcbiAqIC8vIGVxdWFsc1xuICogaW1wb3J0IHsgcGFyc2VDb2lucyB9IGZyb20gXCJAY29zbWpzL3N0YXJnYXRlXCI7XG4gKiAvLyBlcXVhbHNcbiAqIGltcG9ydCB7IHBhcnNlQ29pbnMgfSBmcm9tIFwiQGNvc21qcy9hbWlub1wiO1xuICogYGBgXG4gKlxuICogVGhpcyBmdW5jdGlvbiBpcyBub3QgbWFkZSBmb3Igc3VwcG9ydGluZyBkZWNpbWFsIGFtb3VudHMgYW5kIGRvZXMgbm90IHN1cHBvcnRcbiAqIHBhcnNpbmcgZ2FzIHByaWNlcy5cbiAqL1xuZnVuY3Rpb24gcGFyc2VDb2lucyhpbnB1dCkge1xuICAgIHJldHVybiBpbnB1dFxuICAgICAgICAucmVwbGFjZSgvXFxzL2csIFwiXCIpXG4gICAgICAgIC5zcGxpdChcIixcIilcbiAgICAgICAgLmZpbHRlcihCb29sZWFuKVxuICAgICAgICAubWFwKChwYXJ0KSA9PiB7XG4gICAgICAgIC8vIERlbm9tIHJlZ2V4IGZyb20gU3RhcmdhdGUgKGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay9ibG9iL3YwLjQyLjcvdHlwZXMvY29pbi5nbyNMNTk5LUw2MDEpXG4gICAgICAgIGNvbnN0IG1hdGNoID0gcGFydC5tYXRjaCgvXihbMC05XSspKFthLXpBLVpdW2EtekEtWjAtOS9dezIsMTI3fSkkLyk7XG4gICAgICAgIGlmICghbWF0Y2gpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJHb3QgYW4gaW52YWxpZCBjb2luIHN0cmluZ1wiKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGFtb3VudDogbWF0Y2hbMV0ucmVwbGFjZSgvXjArLywgXCJcIikgfHwgXCIwXCIsXG4gICAgICAgICAgICBkZW5vbTogbWF0Y2hbMl0sXG4gICAgICAgIH07XG4gICAgfSk7XG59XG5leHBvcnRzLnBhcnNlQ29pbnMgPSBwYXJzZUNvaW5zO1xuLyoqXG4gKiBGdW5jdGlvbiB0byBzdW0gdXAgY29pbnMgd2l0aCB0eXBlIENvaW5cbiAqL1xuZnVuY3Rpb24gYWRkQ29pbnMobGhzLCByaHMpIHtcbiAgICBpZiAobGhzLmRlbm9tICE9PSByaHMuZGVub20pXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRyeWluZyB0byBhZGQgdHdvIGNvaW5zIHdpdGggZGlmZmVyZW50IGRlbm9tc1wiKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBhbW91bnQ6IG1hdGhfMS5EZWNpbWFsLmZyb21BdG9taWNzKGxocy5hbW91bnQsIDApLnBsdXMobWF0aF8xLkRlY2ltYWwuZnJvbUF0b21pY3MocmhzLmFtb3VudCwgMCkpLmF0b21pY3MsXG4gICAgICAgIGRlbm9tOiBsaHMuZGVub20sXG4gICAgfTtcbn1cbmV4cG9ydHMuYWRkQ29pbnMgPSBhZGRDb2lucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvaW5zLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/coins.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/encoding.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/encoding.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.encodeEd25519Pubkey = exports.encodeSecp256k1Pubkey = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst pubkeys_1 = __webpack_require__(/*! ./pubkeys */ \"(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\");\n/**\n * Takes a Secp256k1 public key as raw bytes and returns the Amino JSON\n * representation of it (the type/value wrapper object).\n */\nfunction encodeSecp256k1Pubkey(pubkey) {\n    if (pubkey.length !== 33 || (pubkey[0] !== 0x02 && pubkey[0] !== 0x03)) {\n        throw new Error(\"Public key must be compressed secp256k1, i.e. 33 bytes starting with 0x02 or 0x03\");\n    }\n    return {\n        type: pubkeys_1.pubkeyType.secp256k1,\n        value: (0, encoding_1.toBase64)(pubkey),\n    };\n}\nexports.encodeSecp256k1Pubkey = encodeSecp256k1Pubkey;\n/**\n * Takes an Edd25519 public key as raw bytes and returns the Amino JSON\n * representation of it (the type/value wrapper object).\n */\nfunction encodeEd25519Pubkey(pubkey) {\n    if (pubkey.length !== 32) {\n        throw new Error(\"Ed25519 public key must be 32 bytes long\");\n    }\n    return {\n        type: pubkeys_1.pubkeyType.ed25519,\n        value: (0, encoding_1.toBase64)(pubkey),\n    };\n}\nexports.encodeEd25519Pubkey = encodeEd25519Pubkey;\n// As discussed in https://github.com/binance-chain/javascript-sdk/issues/163\n// Prefixes listed here: https://github.com/tendermint/tendermint/blob/d419fffe18531317c28c29a292ad7d253f6cafdf/docs/spec/blockchain/encoding.md#public-key-cryptography\n// Last bytes is varint-encoded length prefix\nconst pubkeyAminoPrefixSecp256k1 = (0, encoding_1.fromHex)(\"eb5ae987\" + \"21\" /* fixed length */);\nconst pubkeyAminoPrefixEd25519 = (0, encoding_1.fromHex)(\"1624de64\" + \"20\" /* fixed length */);\nconst pubkeyAminoPrefixSr25519 = (0, encoding_1.fromHex)(\"0dfb1005\" + \"20\" /* fixed length */);\n/** See https://github.com/tendermint/tendermint/commit/38b401657e4ad7a7eeb3c30a3cbf512037df3740 */\nconst pubkeyAminoPrefixMultisigThreshold = (0, encoding_1.fromHex)(\"22c1f7e2\" /* variable length not included */);\n/**\n * Decodes a pubkey in the Amino binary format to a type/value object.\n */\nfunction decodeAminoPubkey(data) {\n    if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixSecp256k1)) {\n        const rest = data.slice(pubkeyAminoPrefixSecp256k1.length);\n        if (rest.length !== 33) {\n            throw new Error(\"Invalid rest data length. Expected 33 bytes (compressed secp256k1 pubkey).\");\n        }\n        return {\n            type: pubkeys_1.pubkeyType.secp256k1,\n            value: (0, encoding_1.toBase64)(rest),\n        };\n    }\n    else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixEd25519)) {\n        const rest = data.slice(pubkeyAminoPrefixEd25519.length);\n        if (rest.length !== 32) {\n            throw new Error(\"Invalid rest data length. Expected 32 bytes (Ed25519 pubkey).\");\n        }\n        return {\n            type: pubkeys_1.pubkeyType.ed25519,\n            value: (0, encoding_1.toBase64)(rest),\n        };\n    }\n    else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixSr25519)) {\n        const rest = data.slice(pubkeyAminoPrefixSr25519.length);\n        if (rest.length !== 32) {\n            throw new Error(\"Invalid rest data length. Expected 32 bytes (Sr25519 pubkey).\");\n        }\n        return {\n            type: pubkeys_1.pubkeyType.sr25519,\n            value: (0, encoding_1.toBase64)(rest),\n        };\n    }\n    else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixMultisigThreshold)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return decodeMultisigPubkey(data);\n    }\n    else {\n        throw new Error(\"Unsupported public key type. Amino data starts with: \" + (0, encoding_1.toHex)(data.slice(0, 5)));\n    }\n}\nexports.decodeAminoPubkey = decodeAminoPubkey;\n/**\n * Decodes a bech32 pubkey to Amino binary, which is then decoded to a type/value object.\n * The bech32 prefix is ignored and discareded.\n *\n * @param bechEncoded the bech32 encoded pubkey\n */\nfunction decodeBech32Pubkey(bechEncoded) {\n    const { data } = (0, encoding_1.fromBech32)(bechEncoded);\n    return decodeAminoPubkey(data);\n}\nexports.decodeBech32Pubkey = decodeBech32Pubkey;\n/**\n * Uvarint decoder for Amino.\n * @see https://github.com/tendermint/go-amino/blob/8e779b71f40d175/decoder.go#L64-76\n * @returns varint as number, and bytes count occupied by varaint\n */\nfunction decodeUvarint(reader) {\n    if (reader.length < 1) {\n        throw new Error(\"Can't decode varint. EOF\");\n    }\n    if (reader[0] > 127) {\n        throw new Error(\"Decoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.Varint implementation from the Go standard library and write some tests.\");\n    }\n    return [reader[0], 1];\n}\n/**\n * Decodes a multisig pubkey to type object.\n * Pubkey structure [ prefix + const + threshold + loop:(const + pubkeyLength + pubkey            ) ]\n *                  [   4b   + 1b    +  varint   + loop:(1b    +    varint    + pubkeyLength bytes) ]\n * @param data encoded pubkey\n */\nfunction decodeMultisigPubkey(data) {\n    const reader = Array.from(data);\n    // remove multisig amino prefix;\n    const prefixFromReader = reader.splice(0, pubkeyAminoPrefixMultisigThreshold.length);\n    if (!(0, utils_1.arrayContentStartsWith)(prefixFromReader, pubkeyAminoPrefixMultisigThreshold)) {\n        throw new Error(\"Invalid multisig prefix.\");\n    }\n    // remove 0x08 threshold prefix;\n    if (reader.shift() != 0x08) {\n        throw new Error(\"Invalid multisig data. Expecting 0x08 prefix before threshold.\");\n    }\n    // read threshold\n    const [threshold, thresholdBytesLength] = decodeUvarint(reader);\n    reader.splice(0, thresholdBytesLength);\n    // read participants pubkeys\n    const pubkeys = [];\n    while (reader.length > 0) {\n        // remove 0x12 threshold prefix;\n        if (reader.shift() != 0x12) {\n            throw new Error(\"Invalid multisig data. Expecting 0x12 prefix before participant pubkey length.\");\n        }\n        // read pubkey length\n        const [pubkeyLength, pubkeyLengthBytesSize] = decodeUvarint(reader);\n        reader.splice(0, pubkeyLengthBytesSize);\n        // verify that we can read pubkey\n        if (reader.length < pubkeyLength) {\n            throw new Error(\"Invalid multisig data length.\");\n        }\n        // read and decode participant pubkey\n        const encodedPubkey = reader.splice(0, pubkeyLength);\n        const pubkey = decodeAminoPubkey(Uint8Array.from(encodedPubkey));\n        pubkeys.push(pubkey);\n    }\n    return {\n        type: pubkeys_1.pubkeyType.multisigThreshold,\n        value: {\n            threshold: threshold.toString(),\n            pubkeys: pubkeys,\n        },\n    };\n}\n/**\n * Uvarint encoder for Amino. This is the same encoding as `binary.PutUvarint` from the Go\n * standard library.\n *\n * @see https://github.com/tendermint/go-amino/blob/8e779b71f40d175/encoder.go#L77-L85\n */\nfunction encodeUvarint(value) {\n    const checked = math_1.Uint53.fromString(value.toString()).toNumber();\n    if (checked > 127) {\n        throw new Error(\"Encoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.PutUvarint implementation from the Go standard library and write some tests.\");\n    }\n    return [checked];\n}\n/**\n * Encodes a public key to binary Amino.\n */\nfunction encodeAminoPubkey(pubkey) {\n    if ((0, pubkeys_1.isMultisigThresholdPubkey)(pubkey)) {\n        const out = Array.from(pubkeyAminoPrefixMultisigThreshold);\n        out.push(0x08); // TODO: What is this?\n        out.push(...encodeUvarint(pubkey.value.threshold));\n        for (const pubkeyData of pubkey.value.pubkeys.map((p) => encodeAminoPubkey(p))) {\n            out.push(0x12); // TODO: What is this?\n            out.push(...encodeUvarint(pubkeyData.length));\n            out.push(...pubkeyData);\n        }\n        return new Uint8Array(out);\n    }\n    else if ((0, pubkeys_1.isEd25519Pubkey)(pubkey)) {\n        return new Uint8Array([...pubkeyAminoPrefixEd25519, ...(0, encoding_1.fromBase64)(pubkey.value)]);\n    }\n    else if ((0, pubkeys_1.isSecp256k1Pubkey)(pubkey)) {\n        return new Uint8Array([...pubkeyAminoPrefixSecp256k1, ...(0, encoding_1.fromBase64)(pubkey.value)]);\n    }\n    else {\n        throw new Error(\"Unsupported pubkey type\");\n    }\n}\nexports.encodeAminoPubkey = encodeAminoPubkey;\n/**\n * Encodes a public key to binary Amino and then to bech32.\n *\n * @param pubkey the public key to encode\n * @param prefix the bech32 prefix (human readable part)\n */\nfunction encodeBech32Pubkey(pubkey, prefix) {\n    return (0, encoding_1.toBech32)(prefix, encodeAminoPubkey(pubkey));\n}\nexports.encodeBech32Pubkey = encodeBech32Pubkey;\n//# sourceMappingURL=encoding.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/encoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.executeKdf = exports.makeStdTx = exports.isStdTx = exports.serializeSignDoc = exports.makeSignDoc = exports.encodeSecp256k1Signature = exports.decodeSignature = exports.Secp256k1Wallet = exports.Secp256k1HdWallet = exports.extractKdfConfiguration = exports.pubkeyType = exports.isSinglePubkey = exports.isSecp256k1Pubkey = exports.isMultisigThresholdPubkey = exports.isEd25519Pubkey = exports.makeCosmoshubPath = exports.omitDefault = exports.createMultisigThresholdPubkey = exports.encodeSecp256k1Pubkey = exports.encodeEd25519Pubkey = exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.parseCoins = exports.coins = exports.coin = exports.addCoins = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = exports.pubkeyToRawAddress = exports.pubkeyToAddress = void 0;\nvar addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\");\nObject.defineProperty(exports, \"pubkeyToAddress\", ({ enumerable: true, get: function () { return addresses_1.pubkeyToAddress; } }));\nObject.defineProperty(exports, \"pubkeyToRawAddress\", ({ enumerable: true, get: function () { return addresses_1.pubkeyToRawAddress; } }));\nObject.defineProperty(exports, \"rawEd25519PubkeyToRawAddress\", ({ enumerable: true, get: function () { return addresses_1.rawEd25519PubkeyToRawAddress; } }));\nObject.defineProperty(exports, \"rawSecp256k1PubkeyToRawAddress\", ({ enumerable: true, get: function () { return addresses_1.rawSecp256k1PubkeyToRawAddress; } }));\nvar coins_1 = __webpack_require__(/*! ./coins */ \"(ssr)/./node_modules/@cosmjs/amino/build/coins.js\");\nObject.defineProperty(exports, \"addCoins\", ({ enumerable: true, get: function () { return coins_1.addCoins; } }));\nObject.defineProperty(exports, \"coin\", ({ enumerable: true, get: function () { return coins_1.coin; } }));\nObject.defineProperty(exports, \"coins\", ({ enumerable: true, get: function () { return coins_1.coins; } }));\nObject.defineProperty(exports, \"parseCoins\", ({ enumerable: true, get: function () { return coins_1.parseCoins; } }));\nvar encoding_1 = __webpack_require__(/*! ./encoding */ \"(ssr)/./node_modules/@cosmjs/amino/build/encoding.js\");\nObject.defineProperty(exports, \"decodeAminoPubkey\", ({ enumerable: true, get: function () { return encoding_1.decodeAminoPubkey; } }));\nObject.defineProperty(exports, \"decodeBech32Pubkey\", ({ enumerable: true, get: function () { return encoding_1.decodeBech32Pubkey; } }));\nObject.defineProperty(exports, \"encodeAminoPubkey\", ({ enumerable: true, get: function () { return encoding_1.encodeAminoPubkey; } }));\nObject.defineProperty(exports, \"encodeBech32Pubkey\", ({ enumerable: true, get: function () { return encoding_1.encodeBech32Pubkey; } }));\nObject.defineProperty(exports, \"encodeEd25519Pubkey\", ({ enumerable: true, get: function () { return encoding_1.encodeEd25519Pubkey; } }));\nObject.defineProperty(exports, \"encodeSecp256k1Pubkey\", ({ enumerable: true, get: function () { return encoding_1.encodeSecp256k1Pubkey; } }));\nvar multisig_1 = __webpack_require__(/*! ./multisig */ \"(ssr)/./node_modules/@cosmjs/amino/build/multisig.js\");\nObject.defineProperty(exports, \"createMultisigThresholdPubkey\", ({ enumerable: true, get: function () { return multisig_1.createMultisigThresholdPubkey; } }));\nvar omitdefault_1 = __webpack_require__(/*! ./omitdefault */ \"(ssr)/./node_modules/@cosmjs/amino/build/omitdefault.js\");\nObject.defineProperty(exports, \"omitDefault\", ({ enumerable: true, get: function () { return omitdefault_1.omitDefault; } }));\nvar paths_1 = __webpack_require__(/*! ./paths */ \"(ssr)/./node_modules/@cosmjs/amino/build/paths.js\");\nObject.defineProperty(exports, \"makeCosmoshubPath\", ({ enumerable: true, get: function () { return paths_1.makeCosmoshubPath; } }));\nvar pubkeys_1 = __webpack_require__(/*! ./pubkeys */ \"(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\");\nObject.defineProperty(exports, \"isEd25519Pubkey\", ({ enumerable: true, get: function () { return pubkeys_1.isEd25519Pubkey; } }));\nObject.defineProperty(exports, \"isMultisigThresholdPubkey\", ({ enumerable: true, get: function () { return pubkeys_1.isMultisigThresholdPubkey; } }));\nObject.defineProperty(exports, \"isSecp256k1Pubkey\", ({ enumerable: true, get: function () { return pubkeys_1.isSecp256k1Pubkey; } }));\nObject.defineProperty(exports, \"isSinglePubkey\", ({ enumerable: true, get: function () { return pubkeys_1.isSinglePubkey; } }));\nObject.defineProperty(exports, \"pubkeyType\", ({ enumerable: true, get: function () { return pubkeys_1.pubkeyType; } }));\nvar secp256k1hdwallet_1 = __webpack_require__(/*! ./secp256k1hdwallet */ \"(ssr)/./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js\");\nObject.defineProperty(exports, \"extractKdfConfiguration\", ({ enumerable: true, get: function () { return secp256k1hdwallet_1.extractKdfConfiguration; } }));\nObject.defineProperty(exports, \"Secp256k1HdWallet\", ({ enumerable: true, get: function () { return secp256k1hdwallet_1.Secp256k1HdWallet; } }));\nvar secp256k1wallet_1 = __webpack_require__(/*! ./secp256k1wallet */ \"(ssr)/./node_modules/@cosmjs/amino/build/secp256k1wallet.js\");\nObject.defineProperty(exports, \"Secp256k1Wallet\", ({ enumerable: true, get: function () { return secp256k1wallet_1.Secp256k1Wallet; } }));\nvar signature_1 = __webpack_require__(/*! ./signature */ \"(ssr)/./node_modules/@cosmjs/amino/build/signature.js\");\nObject.defineProperty(exports, \"decodeSignature\", ({ enumerable: true, get: function () { return signature_1.decodeSignature; } }));\nObject.defineProperty(exports, \"encodeSecp256k1Signature\", ({ enumerable: true, get: function () { return signature_1.encodeSecp256k1Signature; } }));\nvar signdoc_1 = __webpack_require__(/*! ./signdoc */ \"(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js\");\nObject.defineProperty(exports, \"makeSignDoc\", ({ enumerable: true, get: function () { return signdoc_1.makeSignDoc; } }));\nObject.defineProperty(exports, \"serializeSignDoc\", ({ enumerable: true, get: function () { return signdoc_1.serializeSignDoc; } }));\nvar stdtx_1 = __webpack_require__(/*! ./stdtx */ \"(ssr)/./node_modules/@cosmjs/amino/build/stdtx.js\");\nObject.defineProperty(exports, \"isStdTx\", ({ enumerable: true, get: function () { return stdtx_1.isStdTx; } }));\nObject.defineProperty(exports, \"makeStdTx\", ({ enumerable: true, get: function () { return stdtx_1.makeStdTx; } }));\nvar wallet_1 = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@cosmjs/amino/build/wallet.js\");\nObject.defineProperty(exports, \"executeKdf\", ({ enumerable: true, get: function () { return wallet_1.executeKdf; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/multisig.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/multisig.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createMultisigThresholdPubkey = exports.compareArrays = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\");\n/**\n * Compare arrays lexicographically.\n *\n * Returns value < 0 if `a < b`.\n * Returns value > 0 if `a > b`.\n * Returns 0 if `a === b`.\n */\nfunction compareArrays(a, b) {\n    const aHex = (0, encoding_1.toHex)(a);\n    const bHex = (0, encoding_1.toHex)(b);\n    return aHex === bHex ? 0 : aHex < bHex ? -1 : 1;\n}\nexports.compareArrays = compareArrays;\nfunction createMultisigThresholdPubkey(pubkeys, threshold, nosort = false) {\n    const uintThreshold = new math_1.Uint53(threshold);\n    if (uintThreshold.toNumber() > pubkeys.length) {\n        throw new Error(`Threshold k = ${uintThreshold.toNumber()} exceeds number of keys n = ${pubkeys.length}`);\n    }\n    const outPubkeys = nosort\n        ? pubkeys\n        : Array.from(pubkeys).sort((lhs, rhs) => {\n            // https://github.com/cosmos/cosmos-sdk/blob/v0.42.2/client/keys/add.go#L172-L174\n            const addressLhs = (0, addresses_1.pubkeyToRawAddress)(lhs);\n            const addressRhs = (0, addresses_1.pubkeyToRawAddress)(rhs);\n            return compareArrays(addressLhs, addressRhs);\n        });\n    return {\n        type: \"tendermint/PubKeyMultisigThreshold\",\n        value: {\n            threshold: uintThreshold.toString(),\n            pubkeys: outPubkeys,\n        },\n    };\n}\nexports.createMultisigThresholdPubkey = createMultisigThresholdPubkey;\n//# sourceMappingURL=multisig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9tdWx0aXNpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQ0FBcUMsR0FBRyxxQkFBcUI7QUFDN0QsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWtCO0FBQzdDLGVBQWUsbUJBQU8sQ0FBQyxzRUFBYztBQUNyQyxvQkFBb0IsbUJBQU8sQ0FBQywwRUFBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLDBCQUEwQiw2QkFBNkIsZUFBZTtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHFDQUFxQztBQUNyQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcT25lRHJpdmVcXERlc2t0b3BcXHZhdWx0cXVlc3RcXG5vZGVfbW9kdWxlc1xcQGNvc21qc1xcYW1pbm9cXGJ1aWxkXFxtdWx0aXNpZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlTXVsdGlzaWdUaHJlc2hvbGRQdWJrZXkgPSBleHBvcnRzLmNvbXBhcmVBcnJheXMgPSB2b2lkIDA7XG5jb25zdCBlbmNvZGluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvZW5jb2RpbmdcIik7XG5jb25zdCBtYXRoXzEgPSByZXF1aXJlKFwiQGNvc21qcy9tYXRoXCIpO1xuY29uc3QgYWRkcmVzc2VzXzEgPSByZXF1aXJlKFwiLi9hZGRyZXNzZXNcIik7XG4vKipcbiAqIENvbXBhcmUgYXJyYXlzIGxleGljb2dyYXBoaWNhbGx5LlxuICpcbiAqIFJldHVybnMgdmFsdWUgPCAwIGlmIGBhIDwgYmAuXG4gKiBSZXR1cm5zIHZhbHVlID4gMCBpZiBgYSA+IGJgLlxuICogUmV0dXJucyAwIGlmIGBhID09PSBiYC5cbiAqL1xuZnVuY3Rpb24gY29tcGFyZUFycmF5cyhhLCBiKSB7XG4gICAgY29uc3QgYUhleCA9ICgwLCBlbmNvZGluZ18xLnRvSGV4KShhKTtcbiAgICBjb25zdCBiSGV4ID0gKDAsIGVuY29kaW5nXzEudG9IZXgpKGIpO1xuICAgIHJldHVybiBhSGV4ID09PSBiSGV4ID8gMCA6IGFIZXggPCBiSGV4ID8gLTEgOiAxO1xufVxuZXhwb3J0cy5jb21wYXJlQXJyYXlzID0gY29tcGFyZUFycmF5cztcbmZ1bmN0aW9uIGNyZWF0ZU11bHRpc2lnVGhyZXNob2xkUHVia2V5KHB1YmtleXMsIHRocmVzaG9sZCwgbm9zb3J0ID0gZmFsc2UpIHtcbiAgICBjb25zdCB1aW50VGhyZXNob2xkID0gbmV3IG1hdGhfMS5VaW50NTModGhyZXNob2xkKTtcbiAgICBpZiAodWludFRocmVzaG9sZC50b051bWJlcigpID4gcHVia2V5cy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaHJlc2hvbGQgayA9ICR7dWludFRocmVzaG9sZC50b051bWJlcigpfSBleGNlZWRzIG51bWJlciBvZiBrZXlzIG4gPSAke3B1YmtleXMubGVuZ3RofWApO1xuICAgIH1cbiAgICBjb25zdCBvdXRQdWJrZXlzID0gbm9zb3J0XG4gICAgICAgID8gcHVia2V5c1xuICAgICAgICA6IEFycmF5LmZyb20ocHVia2V5cykuc29ydCgobGhzLCByaHMpID0+IHtcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay9ibG9iL3YwLjQyLjIvY2xpZW50L2tleXMvYWRkLmdvI0wxNzItTDE3NFxuICAgICAgICAgICAgY29uc3QgYWRkcmVzc0xocyA9ICgwLCBhZGRyZXNzZXNfMS5wdWJrZXlUb1Jhd0FkZHJlc3MpKGxocyk7XG4gICAgICAgICAgICBjb25zdCBhZGRyZXNzUmhzID0gKDAsIGFkZHJlc3Nlc18xLnB1YmtleVRvUmF3QWRkcmVzcykocmhzKTtcbiAgICAgICAgICAgIHJldHVybiBjb21wYXJlQXJyYXlzKGFkZHJlc3NMaHMsIGFkZHJlc3NSaHMpO1xuICAgICAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcInRlbmRlcm1pbnQvUHViS2V5TXVsdGlzaWdUaHJlc2hvbGRcIixcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgIHRocmVzaG9sZDogdWludFRocmVzaG9sZC50b1N0cmluZygpLFxuICAgICAgICAgICAgcHVia2V5czogb3V0UHVia2V5cyxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0cy5jcmVhdGVNdWx0aXNpZ1RocmVzaG9sZFB1YmtleSA9IGNyZWF0ZU11bHRpc2lnVGhyZXNob2xkUHVia2V5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXVsdGlzaWcuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/multisig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/omitdefault.js":
/*!*********************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/omitdefault.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.omitDefault = void 0;\n/**\n * Returns the given input. If the input is the default value\n * of protobuf, undefined is retunred. Use this when creating Amino JSON converters.\n */\nfunction omitDefault(input) {\n    switch (typeof input) {\n        case \"string\":\n            return input === \"\" ? undefined : input;\n        case \"number\":\n            return input === 0 ? undefined : input;\n        case \"bigint\":\n            return input === BigInt(0) ? undefined : input;\n        case \"boolean\":\n            return !input ? undefined : input;\n        default:\n            throw new Error(`Got unsupported type '${typeof input}'`);\n    }\n}\nexports.omitDefault = omitDefault;\n//# sourceMappingURL=omitdefault.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9vbWl0ZGVmYXVsdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELGFBQWE7QUFDbEU7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcT25lRHJpdmVcXERlc2t0b3BcXHZhdWx0cXVlc3RcXG5vZGVfbW9kdWxlc1xcQGNvc21qc1xcYW1pbm9cXGJ1aWxkXFxvbWl0ZGVmYXVsdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMub21pdERlZmF1bHQgPSB2b2lkIDA7XG4vKipcbiAqIFJldHVybnMgdGhlIGdpdmVuIGlucHV0LiBJZiB0aGUgaW5wdXQgaXMgdGhlIGRlZmF1bHQgdmFsdWVcbiAqIG9mIHByb3RvYnVmLCB1bmRlZmluZWQgaXMgcmV0dW5yZWQuIFVzZSB0aGlzIHdoZW4gY3JlYXRpbmcgQW1pbm8gSlNPTiBjb252ZXJ0ZXJzLlxuICovXG5mdW5jdGlvbiBvbWl0RGVmYXVsdChpbnB1dCkge1xuICAgIHN3aXRjaCAodHlwZW9mIGlucHV0KSB7XG4gICAgICAgIGNhc2UgXCJzdHJpbmdcIjpcbiAgICAgICAgICAgIHJldHVybiBpbnB1dCA9PT0gXCJcIiA/IHVuZGVmaW5lZCA6IGlucHV0O1xuICAgICAgICBjYXNlIFwibnVtYmVyXCI6XG4gICAgICAgICAgICByZXR1cm4gaW5wdXQgPT09IDAgPyB1bmRlZmluZWQgOiBpbnB1dDtcbiAgICAgICAgY2FzZSBcImJpZ2ludFwiOlxuICAgICAgICAgICAgcmV0dXJuIGlucHV0ID09PSBCaWdJbnQoMCkgPyB1bmRlZmluZWQgOiBpbnB1dDtcbiAgICAgICAgY2FzZSBcImJvb2xlYW5cIjpcbiAgICAgICAgICAgIHJldHVybiAhaW5wdXQgPyB1bmRlZmluZWQgOiBpbnB1dDtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgR290IHVuc3VwcG9ydGVkIHR5cGUgJyR7dHlwZW9mIGlucHV0fSdgKTtcbiAgICB9XG59XG5leHBvcnRzLm9taXREZWZhdWx0ID0gb21pdERlZmF1bHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vbWl0ZGVmYXVsdC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/omitdefault.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/paths.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/paths.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeCosmoshubPath = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\n/**\n * The Cosmos Hub derivation path in the form `m/44'/118'/0'/0/a`\n * with 0-based account index `a`.\n */\nfunction makeCosmoshubPath(a) {\n    return [\n        crypto_1.Slip10RawIndex.hardened(44),\n        crypto_1.Slip10RawIndex.hardened(118),\n        crypto_1.Slip10RawIndex.hardened(0),\n        crypto_1.Slip10RawIndex.normal(0),\n        crypto_1.Slip10RawIndex.normal(a),\n    ];\n}\nexports.makeCosmoshubPath = makeCosmoshubPath;\n//# sourceMappingURL=paths.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9wYXRocy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIsaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxhbWlub1xcYnVpbGRcXHBhdGhzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tYWtlQ29zbW9zaHViUGF0aCA9IHZvaWQgMDtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBjb3NtanMvY3J5cHRvXCIpO1xuLyoqXG4gKiBUaGUgQ29zbW9zIEh1YiBkZXJpdmF0aW9uIHBhdGggaW4gdGhlIGZvcm0gYG0vNDQnLzExOCcvMCcvMC9hYFxuICogd2l0aCAwLWJhc2VkIGFjY291bnQgaW5kZXggYGFgLlxuICovXG5mdW5jdGlvbiBtYWtlQ29zbW9zaHViUGF0aChhKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgY3J5cHRvXzEuU2xpcDEwUmF3SW5kZXguaGFyZGVuZWQoNDQpLFxuICAgICAgICBjcnlwdG9fMS5TbGlwMTBSYXdJbmRleC5oYXJkZW5lZCgxMTgpLFxuICAgICAgICBjcnlwdG9fMS5TbGlwMTBSYXdJbmRleC5oYXJkZW5lZCgwKSxcbiAgICAgICAgY3J5cHRvXzEuU2xpcDEwUmF3SW5kZXgubm9ybWFsKDApLFxuICAgICAgICBjcnlwdG9fMS5TbGlwMTBSYXdJbmRleC5ub3JtYWwoYSksXG4gICAgXTtcbn1cbmV4cG9ydHMubWFrZUNvc21vc2h1YlBhdGggPSBtYWtlQ29zbW9zaHViUGF0aDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGhzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/paths.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/pubkeys.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMultisigThresholdPubkey = exports.isSinglePubkey = exports.pubkeyType = exports.isSecp256k1Pubkey = exports.isEd25519Pubkey = void 0;\nfunction isEd25519Pubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeyEd25519\";\n}\nexports.isEd25519Pubkey = isEd25519Pubkey;\nfunction isSecp256k1Pubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeySecp256k1\";\n}\nexports.isSecp256k1Pubkey = isSecp256k1Pubkey;\nexports.pubkeyType = {\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/ed25519/ed25519.go#L22 */\n    secp256k1: \"tendermint/PubKeySecp256k1\",\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/secp256k1/secp256k1.go#L23 */\n    ed25519: \"tendermint/PubKeyEd25519\",\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/sr25519/codec.go#L12 */\n    sr25519: \"tendermint/PubKeySr25519\",\n    multisigThreshold: \"tendermint/PubKeyMultisigThreshold\",\n};\nfunction isSinglePubkey(pubkey) {\n    const singPubkeyTypes = [exports.pubkeyType.ed25519, exports.pubkeyType.secp256k1, exports.pubkeyType.sr25519];\n    return singPubkeyTypes.includes(pubkey.type);\n}\nexports.isSinglePubkey = isSinglePubkey;\nfunction isMultisigThresholdPubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeyMultisigThreshold\";\n}\nexports.isMultisigThresholdPubkey = isMultisigThresholdPubkey;\n//# sourceMappingURL=pubkeys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9wdWJrZXlzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQyxHQUFHLHNCQUFzQixHQUFHLGtCQUFrQixHQUFHLHlCQUF5QixHQUFHLHVCQUF1QjtBQUNySTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxhbWlub1xcYnVpbGRcXHB1YmtleXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzTXVsdGlzaWdUaHJlc2hvbGRQdWJrZXkgPSBleHBvcnRzLmlzU2luZ2xlUHVia2V5ID0gZXhwb3J0cy5wdWJrZXlUeXBlID0gZXhwb3J0cy5pc1NlY3AyNTZrMVB1YmtleSA9IGV4cG9ydHMuaXNFZDI1NTE5UHVia2V5ID0gdm9pZCAwO1xuZnVuY3Rpb24gaXNFZDI1NTE5UHVia2V5KHB1YmtleSkge1xuICAgIHJldHVybiBwdWJrZXkudHlwZSA9PT0gXCJ0ZW5kZXJtaW50L1B1YktleUVkMjU1MTlcIjtcbn1cbmV4cG9ydHMuaXNFZDI1NTE5UHVia2V5ID0gaXNFZDI1NTE5UHVia2V5O1xuZnVuY3Rpb24gaXNTZWNwMjU2azFQdWJrZXkocHVia2V5KSB7XG4gICAgcmV0dXJuIHB1YmtleS50eXBlID09PSBcInRlbmRlcm1pbnQvUHViS2V5U2VjcDI1NmsxXCI7XG59XG5leHBvcnRzLmlzU2VjcDI1NmsxUHVia2V5ID0gaXNTZWNwMjU2azFQdWJrZXk7XG5leHBvcnRzLnB1YmtleVR5cGUgPSB7XG4gICAgLyoqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL3YwLjMzLjAvY3J5cHRvL2VkMjU1MTkvZWQyNTUxOS5nbyNMMjIgKi9cbiAgICBzZWNwMjU2azE6IFwidGVuZGVybWludC9QdWJLZXlTZWNwMjU2azFcIixcbiAgICAvKiogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Jsb2IvdjAuMzMuMC9jcnlwdG8vc2VjcDI1NmsxL3NlY3AyNTZrMS5nbyNMMjMgKi9cbiAgICBlZDI1NTE5OiBcInRlbmRlcm1pbnQvUHViS2V5RWQyNTUxOVwiLFxuICAgIC8qKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvYmxvYi92MC4zMy4wL2NyeXB0by9zcjI1NTE5L2NvZGVjLmdvI0wxMiAqL1xuICAgIHNyMjU1MTk6IFwidGVuZGVybWludC9QdWJLZXlTcjI1NTE5XCIsXG4gICAgbXVsdGlzaWdUaHJlc2hvbGQ6IFwidGVuZGVybWludC9QdWJLZXlNdWx0aXNpZ1RocmVzaG9sZFwiLFxufTtcbmZ1bmN0aW9uIGlzU2luZ2xlUHVia2V5KHB1YmtleSkge1xuICAgIGNvbnN0IHNpbmdQdWJrZXlUeXBlcyA9IFtleHBvcnRzLnB1YmtleVR5cGUuZWQyNTUxOSwgZXhwb3J0cy5wdWJrZXlUeXBlLnNlY3AyNTZrMSwgZXhwb3J0cy5wdWJrZXlUeXBlLnNyMjU1MTldO1xuICAgIHJldHVybiBzaW5nUHVia2V5VHlwZXMuaW5jbHVkZXMocHVia2V5LnR5cGUpO1xufVxuZXhwb3J0cy5pc1NpbmdsZVB1YmtleSA9IGlzU2luZ2xlUHVia2V5O1xuZnVuY3Rpb24gaXNNdWx0aXNpZ1RocmVzaG9sZFB1YmtleShwdWJrZXkpIHtcbiAgICByZXR1cm4gcHVia2V5LnR5cGUgPT09IFwidGVuZGVybWludC9QdWJLZXlNdWx0aXNpZ1RocmVzaG9sZFwiO1xufVxuZXhwb3J0cy5pc011bHRpc2lnVGhyZXNob2xkUHVia2V5ID0gaXNNdWx0aXNpZ1RocmVzaG9sZFB1YmtleTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXB1YmtleXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js":
/*!***************************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Secp256k1HdWallet = exports.extractKdfConfiguration = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\");\nconst paths_1 = __webpack_require__(/*! ./paths */ \"(ssr)/./node_modules/@cosmjs/amino/build/paths.js\");\nconst signature_1 = __webpack_require__(/*! ./signature */ \"(ssr)/./node_modules/@cosmjs/amino/build/signature.js\");\nconst signdoc_1 = __webpack_require__(/*! ./signdoc */ \"(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js\");\nconst wallet_1 = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@cosmjs/amino/build/wallet.js\");\nconst serializationTypeV1 = \"secp256k1wallet-v1\";\n/**\n * A KDF configuration that is not very strong but can be used on the main thread.\n * It takes about 1 second in Node.js 16.0.0 and should have similar runtimes in other modern Wasm hosts.\n */\nconst basicPasswordHashingOptions = {\n    algorithm: \"argon2id\",\n    params: {\n        outputLength: 32,\n        opsLimit: 24,\n        memLimitKib: 12 * 1024,\n    },\n};\nfunction isDerivationJson(thing) {\n    if (!(0, utils_1.isNonNullObject)(thing))\n        return false;\n    if (typeof thing.hdPath !== \"string\")\n        return false;\n    if (typeof thing.prefix !== \"string\")\n        return false;\n    return true;\n}\nfunction extractKdfConfigurationV1(doc) {\n    return doc.kdf;\n}\nfunction extractKdfConfiguration(serialization) {\n    const root = JSON.parse(serialization);\n    if (!(0, utils_1.isNonNullObject)(root))\n        throw new Error(\"Root document is not an object.\");\n    switch (root.type) {\n        case serializationTypeV1:\n            return extractKdfConfigurationV1(root);\n        default:\n            throw new Error(\"Unsupported serialization type\");\n    }\n}\nexports.extractKdfConfiguration = extractKdfConfiguration;\nconst defaultOptions = {\n    bip39Password: \"\",\n    hdPaths: [(0, paths_1.makeCosmoshubPath)(0)],\n    prefix: \"cosmos\",\n};\nclass Secp256k1HdWallet {\n    /**\n     * Restores a wallet from the given BIP39 mnemonic.\n     *\n     * @param mnemonic Any valid English mnemonic.\n     * @param options An optional `Secp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.\n     */\n    static async fromMnemonic(mnemonic, options = {}) {\n        const mnemonicChecked = new crypto_1.EnglishMnemonic(mnemonic);\n        const seed = await crypto_1.Bip39.mnemonicToSeed(mnemonicChecked, options.bip39Password);\n        return new Secp256k1HdWallet(mnemonicChecked, {\n            ...options,\n            seed: seed,\n        });\n    }\n    /**\n     * Generates a new wallet with a BIP39 mnemonic of the given length.\n     *\n     * @param length The number of words in the mnemonic (12, 15, 18, 21 or 24).\n     * @param options An optional `Secp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.\n     */\n    static async generate(length = 12, options = {}) {\n        const entropyLength = 4 * Math.floor((11 * length) / 33);\n        const entropy = crypto_1.Random.getBytes(entropyLength);\n        const mnemonic = crypto_1.Bip39.encode(entropy);\n        return Secp256k1HdWallet.fromMnemonic(mnemonic.toString(), options);\n    }\n    /**\n     * Restores a wallet from an encrypted serialization.\n     *\n     * @param password The user provided password used to generate an encryption key via a KDF.\n     *                 This is not normalized internally (see \"Unicode normalization\" to learn more).\n     */\n    static async deserialize(serialization, password) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        switch (root.type) {\n            case serializationTypeV1:\n                return Secp256k1HdWallet.deserializeTypeV1(serialization, password);\n            default:\n                throw new Error(\"Unsupported serialization type\");\n        }\n    }\n    /**\n     * Restores a wallet from an encrypted serialization.\n     *\n     * This is an advanced alternative to calling `deserialize(serialization, password)` directly, which allows\n     * you to offload the KDF execution to a non-UI thread (e.g. in a WebWorker).\n     *\n     * The caller is responsible for ensuring the key was derived with the given KDF configuration. This can be\n     * done using `extractKdfConfiguration(serialization)` and `executeKdf(password, kdfConfiguration)` from this package.\n     */\n    static async deserializeWithEncryptionKey(serialization, encryptionKey) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        const untypedRoot = root;\n        switch (untypedRoot.type) {\n            case serializationTypeV1: {\n                const decryptedBytes = await (0, wallet_1.decrypt)((0, encoding_1.fromBase64)(untypedRoot.data), encryptionKey, untypedRoot.encryption);\n                const decryptedDocument = JSON.parse((0, encoding_1.fromUtf8)(decryptedBytes));\n                const { mnemonic, accounts } = decryptedDocument;\n                (0, utils_1.assert)(typeof mnemonic === \"string\");\n                if (!Array.isArray(accounts))\n                    throw new Error(\"Property 'accounts' is not an array\");\n                if (!accounts.every((account) => isDerivationJson(account))) {\n                    throw new Error(\"Account is not in the correct format.\");\n                }\n                const firstPrefix = accounts[0].prefix;\n                if (!accounts.every(({ prefix }) => prefix === firstPrefix)) {\n                    throw new Error(\"Accounts do not all have the same prefix\");\n                }\n                const hdPaths = accounts.map(({ hdPath }) => (0, crypto_1.stringToPath)(hdPath));\n                return Secp256k1HdWallet.fromMnemonic(mnemonic, {\n                    hdPaths: hdPaths,\n                    prefix: firstPrefix,\n                });\n            }\n            default:\n                throw new Error(\"Unsupported serialization type\");\n        }\n    }\n    static async deserializeTypeV1(serialization, password) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        const encryptionKey = await (0, wallet_1.executeKdf)(password, root.kdf);\n        return Secp256k1HdWallet.deserializeWithEncryptionKey(serialization, encryptionKey);\n    }\n    constructor(mnemonic, options) {\n        const hdPaths = options.hdPaths ?? defaultOptions.hdPaths;\n        const prefix = options.prefix ?? defaultOptions.prefix;\n        this.secret = mnemonic;\n        this.seed = options.seed;\n        this.accounts = hdPaths.map((hdPath) => ({\n            hdPath: hdPath,\n            prefix,\n        }));\n    }\n    get mnemonic() {\n        return this.secret.toString();\n    }\n    async getAccounts() {\n        const accountsWithPrivkeys = await this.getAccountsWithPrivkeys();\n        return accountsWithPrivkeys.map(({ algo, pubkey, address }) => ({\n            algo: algo,\n            pubkey: pubkey,\n            address: address,\n        }));\n    }\n    async signAmino(signerAddress, signDoc) {\n        const accounts = await this.getAccountsWithPrivkeys();\n        const account = accounts.find(({ address }) => address === signerAddress);\n        if (account === undefined) {\n            throw new Error(`Address ${signerAddress} not found in wallet`);\n        }\n        const { privkey, pubkey } = account;\n        const message = (0, crypto_1.sha256)((0, signdoc_1.serializeSignDoc)(signDoc));\n        const signature = await crypto_1.Secp256k1.createSignature(message, privkey);\n        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);\n        return {\n            signed: signDoc,\n            signature: (0, signature_1.encodeSecp256k1Signature)(pubkey, signatureBytes),\n        };\n    }\n    /**\n     * Generates an encrypted serialization of this wallet.\n     *\n     * @param password The user provided password used to generate an encryption key via a KDF.\n     *                 This is not normalized internally (see \"Unicode normalization\" to learn more).\n     */\n    async serialize(password) {\n        const kdfConfiguration = basicPasswordHashingOptions;\n        const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);\n        return this.serializeWithEncryptionKey(encryptionKey, kdfConfiguration);\n    }\n    /**\n     * Generates an encrypted serialization of this wallet.\n     *\n     * This is an advanced alternative to calling `serialize(password)` directly, which allows you to\n     * offload the KDF execution to a non-UI thread (e.g. in a WebWorker).\n     *\n     * The caller is responsible for ensuring the key was derived with the given KDF options. If this\n     * is not the case, the wallet cannot be restored with the original password.\n     */\n    async serializeWithEncryptionKey(encryptionKey, kdfConfiguration) {\n        const dataToEncrypt = {\n            mnemonic: this.mnemonic,\n            accounts: this.accounts.map(({ hdPath, prefix }) => ({\n                hdPath: (0, crypto_1.pathToString)(hdPath),\n                prefix: prefix,\n            })),\n        };\n        const dataToEncryptRaw = (0, encoding_1.toUtf8)(JSON.stringify(dataToEncrypt));\n        const encryptionConfiguration = {\n            algorithm: wallet_1.supportedAlgorithms.xchacha20poly1305Ietf,\n        };\n        const encryptedData = await (0, wallet_1.encrypt)(dataToEncryptRaw, encryptionKey, encryptionConfiguration);\n        const out = {\n            type: serializationTypeV1,\n            kdf: kdfConfiguration,\n            encryption: encryptionConfiguration,\n            data: (0, encoding_1.toBase64)(encryptedData),\n        };\n        return JSON.stringify(out);\n    }\n    async getKeyPair(hdPath) {\n        const { privkey } = crypto_1.Slip10.derivePath(crypto_1.Slip10Curve.Secp256k1, this.seed, hdPath);\n        const { pubkey } = await crypto_1.Secp256k1.makeKeypair(privkey);\n        return {\n            privkey: privkey,\n            pubkey: crypto_1.Secp256k1.compressPubkey(pubkey),\n        };\n    }\n    async getAccountsWithPrivkeys() {\n        return Promise.all(this.accounts.map(async ({ hdPath, prefix }) => {\n            const { privkey, pubkey } = await this.getKeyPair(hdPath);\n            const address = (0, encoding_1.toBech32)(prefix, (0, addresses_1.rawSecp256k1PubkeyToRawAddress)(pubkey));\n            return {\n                algo: \"secp256k1\",\n                privkey: privkey,\n                pubkey: pubkey,\n                address: address,\n            };\n        }));\n    }\n}\nexports.Secp256k1HdWallet = Secp256k1HdWallet;\n//# sourceMappingURL=secp256k1hdwallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/secp256k1wallet.js":
/*!*************************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/secp256k1wallet.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Secp256k1Wallet = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\");\nconst signature_1 = __webpack_require__(/*! ./signature */ \"(ssr)/./node_modules/@cosmjs/amino/build/signature.js\");\nconst signdoc_1 = __webpack_require__(/*! ./signdoc */ \"(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js\");\n/**\n * A wallet that holds a single secp256k1 keypair.\n *\n * If you want to work with BIP39 mnemonics and multiple accounts, use Secp256k1HdWallet.\n */\nclass Secp256k1Wallet {\n    /**\n     * Creates a Secp256k1Wallet from the given private key\n     *\n     * @param privkey The private key.\n     * @param prefix The bech32 address prefix (human readable part). Defaults to \"cosmos\".\n     */\n    static async fromKey(privkey, prefix = \"cosmos\") {\n        const uncompressed = (await crypto_1.Secp256k1.makeKeypair(privkey)).pubkey;\n        return new Secp256k1Wallet(privkey, crypto_1.Secp256k1.compressPubkey(uncompressed), prefix);\n    }\n    constructor(privkey, pubkey, prefix) {\n        this.privkey = privkey;\n        this.pubkey = pubkey;\n        this.prefix = prefix;\n    }\n    get address() {\n        return (0, encoding_1.toBech32)(this.prefix, (0, addresses_1.rawSecp256k1PubkeyToRawAddress)(this.pubkey));\n    }\n    async getAccounts() {\n        return [\n            {\n                algo: \"secp256k1\",\n                address: this.address,\n                pubkey: this.pubkey,\n            },\n        ];\n    }\n    async signAmino(signerAddress, signDoc) {\n        if (signerAddress !== this.address) {\n            throw new Error(`Address ${signerAddress} not found in wallet`);\n        }\n        const message = new crypto_1.Sha256((0, signdoc_1.serializeSignDoc)(signDoc)).digest();\n        const signature = await crypto_1.Secp256k1.createSignature(message, this.privkey);\n        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);\n        return {\n            signed: signDoc,\n            signature: (0, signature_1.encodeSecp256k1Signature)(this.pubkey, signatureBytes),\n        };\n    }\n}\nexports.Secp256k1Wallet = Secp256k1Wallet;\n//# sourceMappingURL=secp256k1wallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zZWNwMjU2azF3YWxsZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGlCQUFpQixtQkFBTyxDQUFDLDBFQUFnQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyw4RUFBa0I7QUFDN0Msb0JBQW9CLG1CQUFPLENBQUMsMEVBQWE7QUFDekMsb0JBQW9CLG1CQUFPLENBQUMsMEVBQWE7QUFDekMsa0JBQWtCLG1CQUFPLENBQUMsc0VBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGVBQWU7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5cXE9uZURyaXZlXFxEZXNrdG9wXFx2YXVsdHF1ZXN0XFxub2RlX21vZHVsZXNcXEBjb3NtanNcXGFtaW5vXFxidWlsZFxcc2VjcDI1Nmsxd2FsbGV0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TZWNwMjU2azFXYWxsZXQgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAY29zbWpzL2NyeXB0b1wiKTtcbmNvbnN0IGVuY29kaW5nXzEgPSByZXF1aXJlKFwiQGNvc21qcy9lbmNvZGluZ1wiKTtcbmNvbnN0IGFkZHJlc3Nlc18xID0gcmVxdWlyZShcIi4vYWRkcmVzc2VzXCIpO1xuY29uc3Qgc2lnbmF0dXJlXzEgPSByZXF1aXJlKFwiLi9zaWduYXR1cmVcIik7XG5jb25zdCBzaWduZG9jXzEgPSByZXF1aXJlKFwiLi9zaWduZG9jXCIpO1xuLyoqXG4gKiBBIHdhbGxldCB0aGF0IGhvbGRzIGEgc2luZ2xlIHNlY3AyNTZrMSBrZXlwYWlyLlxuICpcbiAqIElmIHlvdSB3YW50IHRvIHdvcmsgd2l0aCBCSVAzOSBtbmVtb25pY3MgYW5kIG11bHRpcGxlIGFjY291bnRzLCB1c2UgU2VjcDI1NmsxSGRXYWxsZXQuXG4gKi9cbmNsYXNzIFNlY3AyNTZrMVdhbGxldCB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIFNlY3AyNTZrMVdhbGxldCBmcm9tIHRoZSBnaXZlbiBwcml2YXRlIGtleVxuICAgICAqXG4gICAgICogQHBhcmFtIHByaXZrZXkgVGhlIHByaXZhdGUga2V5LlxuICAgICAqIEBwYXJhbSBwcmVmaXggVGhlIGJlY2gzMiBhZGRyZXNzIHByZWZpeCAoaHVtYW4gcmVhZGFibGUgcGFydCkuIERlZmF1bHRzIHRvIFwiY29zbW9zXCIuXG4gICAgICovXG4gICAgc3RhdGljIGFzeW5jIGZyb21LZXkocHJpdmtleSwgcHJlZml4ID0gXCJjb3Ntb3NcIikge1xuICAgICAgICBjb25zdCB1bmNvbXByZXNzZWQgPSAoYXdhaXQgY3J5cHRvXzEuU2VjcDI1NmsxLm1ha2VLZXlwYWlyKHByaXZrZXkpKS5wdWJrZXk7XG4gICAgICAgIHJldHVybiBuZXcgU2VjcDI1NmsxV2FsbGV0KHByaXZrZXksIGNyeXB0b18xLlNlY3AyNTZrMS5jb21wcmVzc1B1YmtleSh1bmNvbXByZXNzZWQpLCBwcmVmaXgpO1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcihwcml2a2V5LCBwdWJrZXksIHByZWZpeCkge1xuICAgICAgICB0aGlzLnByaXZrZXkgPSBwcml2a2V5O1xuICAgICAgICB0aGlzLnB1YmtleSA9IHB1YmtleTtcbiAgICAgICAgdGhpcy5wcmVmaXggPSBwcmVmaXg7XG4gICAgfVxuICAgIGdldCBhZGRyZXNzKCkge1xuICAgICAgICByZXR1cm4gKDAsIGVuY29kaW5nXzEudG9CZWNoMzIpKHRoaXMucHJlZml4LCAoMCwgYWRkcmVzc2VzXzEucmF3U2VjcDI1NmsxUHVia2V5VG9SYXdBZGRyZXNzKSh0aGlzLnB1YmtleSkpO1xuICAgIH1cbiAgICBhc3luYyBnZXRBY2NvdW50cygpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBhbGdvOiBcInNlY3AyNTZrMVwiLFxuICAgICAgICAgICAgICAgIGFkZHJlc3M6IHRoaXMuYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBwdWJrZXk6IHRoaXMucHVia2V5LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXTtcbiAgICB9XG4gICAgYXN5bmMgc2lnbkFtaW5vKHNpZ25lckFkZHJlc3MsIHNpZ25Eb2MpIHtcbiAgICAgICAgaWYgKHNpZ25lckFkZHJlc3MgIT09IHRoaXMuYWRkcmVzcykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBZGRyZXNzICR7c2lnbmVyQWRkcmVzc30gbm90IGZvdW5kIGluIHdhbGxldGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBuZXcgY3J5cHRvXzEuU2hhMjU2KCgwLCBzaWduZG9jXzEuc2VyaWFsaXplU2lnbkRvYykoc2lnbkRvYykpLmRpZ2VzdCgpO1xuICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBhd2FpdCBjcnlwdG9fMS5TZWNwMjU2azEuY3JlYXRlU2lnbmF0dXJlKG1lc3NhZ2UsIHRoaXMucHJpdmtleSk7XG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZUJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoWy4uLnNpZ25hdHVyZS5yKDMyKSwgLi4uc2lnbmF0dXJlLnMoMzIpXSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzaWduZWQ6IHNpZ25Eb2MsXG4gICAgICAgICAgICBzaWduYXR1cmU6ICgwLCBzaWduYXR1cmVfMS5lbmNvZGVTZWNwMjU2azFTaWduYXR1cmUpKHRoaXMucHVia2V5LCBzaWduYXR1cmVCeXRlcyksXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0cy5TZWNwMjU2azFXYWxsZXQgPSBTZWNwMjU2azFXYWxsZXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWNwMjU2azF3YWxsZXQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/secp256k1wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/signature.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/signature.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeSignature = exports.encodeSecp256k1Signature = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst encoding_2 = __webpack_require__(/*! ./encoding */ \"(ssr)/./node_modules/@cosmjs/amino/build/encoding.js\");\nconst pubkeys_1 = __webpack_require__(/*! ./pubkeys */ \"(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\");\n/**\n * Takes a binary pubkey and signature to create a signature object\n *\n * @param pubkey a compressed secp256k1 public key\n * @param signature a 64 byte fixed length representation of secp256k1 signature components r and s\n */\nfunction encodeSecp256k1Signature(pubkey, signature) {\n    if (signature.length !== 64) {\n        throw new Error(\"Signature must be 64 bytes long. Cosmos SDK uses a 2x32 byte fixed length encoding for the secp256k1 signature integers r and s.\");\n    }\n    return {\n        pub_key: (0, encoding_2.encodeSecp256k1Pubkey)(pubkey),\n        signature: (0, encoding_1.toBase64)(signature),\n    };\n}\nexports.encodeSecp256k1Signature = encodeSecp256k1Signature;\nfunction decodeSignature(signature) {\n    switch (signature.pub_key.type) {\n        // Note: please don't add cases here without writing additional unit tests\n        case pubkeys_1.pubkeyType.secp256k1:\n            return {\n                pubkey: (0, encoding_1.fromBase64)(signature.pub_key.value),\n                signature: (0, encoding_1.fromBase64)(signature.signature),\n            };\n        default:\n            throw new Error(\"Unsupported pubkey type\");\n    }\n}\nexports.decodeSignature = decodeSignature;\n//# sourceMappingURL=signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zaWduYXR1cmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCLEdBQUcsZ0NBQWdDO0FBQzFEO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWtCO0FBQzdDLG1CQUFtQixtQkFBTyxDQUFDLHdFQUFZO0FBQ3ZDLGtCQUFrQixtQkFBTyxDQUFDLHNFQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5cXE9uZURyaXZlXFxEZXNrdG9wXFx2YXVsdHF1ZXN0XFxub2RlX21vZHVsZXNcXEBjb3NtanNcXGFtaW5vXFxidWlsZFxcc2lnbmF0dXJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGVTaWduYXR1cmUgPSBleHBvcnRzLmVuY29kZVNlY3AyNTZrMVNpZ25hdHVyZSA9IHZvaWQgMDtcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvbiAqL1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2VuY29kaW5nXCIpO1xuY29uc3QgZW5jb2RpbmdfMiA9IHJlcXVpcmUoXCIuL2VuY29kaW5nXCIpO1xuY29uc3QgcHVia2V5c18xID0gcmVxdWlyZShcIi4vcHVia2V5c1wiKTtcbi8qKlxuICogVGFrZXMgYSBiaW5hcnkgcHVia2V5IGFuZCBzaWduYXR1cmUgdG8gY3JlYXRlIGEgc2lnbmF0dXJlIG9iamVjdFxuICpcbiAqIEBwYXJhbSBwdWJrZXkgYSBjb21wcmVzc2VkIHNlY3AyNTZrMSBwdWJsaWMga2V5XG4gKiBAcGFyYW0gc2lnbmF0dXJlIGEgNjQgYnl0ZSBmaXhlZCBsZW5ndGggcmVwcmVzZW50YXRpb24gb2Ygc2VjcDI1NmsxIHNpZ25hdHVyZSBjb21wb25lbnRzIHIgYW5kIHNcbiAqL1xuZnVuY3Rpb24gZW5jb2RlU2VjcDI1NmsxU2lnbmF0dXJlKHB1YmtleSwgc2lnbmF0dXJlKSB7XG4gICAgaWYgKHNpZ25hdHVyZS5sZW5ndGggIT09IDY0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNpZ25hdHVyZSBtdXN0IGJlIDY0IGJ5dGVzIGxvbmcuIENvc21vcyBTREsgdXNlcyBhIDJ4MzIgYnl0ZSBmaXhlZCBsZW5ndGggZW5jb2RpbmcgZm9yIHRoZSBzZWNwMjU2azEgc2lnbmF0dXJlIGludGVnZXJzIHIgYW5kIHMuXCIpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBwdWJfa2V5OiAoMCwgZW5jb2RpbmdfMi5lbmNvZGVTZWNwMjU2azFQdWJrZXkpKHB1YmtleSksXG4gICAgICAgIHNpZ25hdHVyZTogKDAsIGVuY29kaW5nXzEudG9CYXNlNjQpKHNpZ25hdHVyZSksXG4gICAgfTtcbn1cbmV4cG9ydHMuZW5jb2RlU2VjcDI1NmsxU2lnbmF0dXJlID0gZW5jb2RlU2VjcDI1NmsxU2lnbmF0dXJlO1xuZnVuY3Rpb24gZGVjb2RlU2lnbmF0dXJlKHNpZ25hdHVyZSkge1xuICAgIHN3aXRjaCAoc2lnbmF0dXJlLnB1Yl9rZXkudHlwZSkge1xuICAgICAgICAvLyBOb3RlOiBwbGVhc2UgZG9uJ3QgYWRkIGNhc2VzIGhlcmUgd2l0aG91dCB3cml0aW5nIGFkZGl0aW9uYWwgdW5pdCB0ZXN0c1xuICAgICAgICBjYXNlIHB1YmtleXNfMS5wdWJrZXlUeXBlLnNlY3AyNTZrMTpcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcHVia2V5OiAoMCwgZW5jb2RpbmdfMS5mcm9tQmFzZTY0KShzaWduYXR1cmUucHViX2tleS52YWx1ZSksXG4gICAgICAgICAgICAgICAgc2lnbmF0dXJlOiAoMCwgZW5jb2RpbmdfMS5mcm9tQmFzZTY0KShzaWduYXR1cmUuc2lnbmF0dXJlKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBwdWJrZXkgdHlwZVwiKTtcbiAgICB9XG59XG5leHBvcnRzLmRlY29kZVNpZ25hdHVyZSA9IGRlY29kZVNpZ25hdHVyZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25hdHVyZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/signature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/signdoc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.serializeSignDoc = exports.escapeCharacters = exports.makeSignDoc = exports.sortedJsonStringify = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nfunction sortedObject(obj) {\n    if (typeof obj !== \"object\" || obj === null) {\n        return obj;\n    }\n    if (Array.isArray(obj)) {\n        return obj.map(sortedObject);\n    }\n    const sortedKeys = Object.keys(obj).sort();\n    const result = {};\n    // NOTE: Use forEach instead of reduce for performance with large objects eg Wasm code\n    sortedKeys.forEach((key) => {\n        result[key] = sortedObject(obj[key]);\n    });\n    return result;\n}\n/** Returns a JSON string with objects sorted by key */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction sortedJsonStringify(obj) {\n    return JSON.stringify(sortedObject(obj));\n}\nexports.sortedJsonStringify = sortedJsonStringify;\nfunction makeSignDoc(msgs, fee, chainId, memo, accountNumber, sequence, timeout_height) {\n    return {\n        chain_id: chainId,\n        account_number: math_1.Uint53.fromString(accountNumber.toString()).toString(),\n        sequence: math_1.Uint53.fromString(sequence.toString()).toString(),\n        fee: fee,\n        msgs: msgs,\n        memo: memo || \"\",\n        ...(timeout_height && { timeout_height: timeout_height.toString() }),\n    };\n}\nexports.makeSignDoc = makeSignDoc;\n/**\n * Takes a valid JSON document and performs the following escapings in string values:\n *\n * `&` -> `\\u0026`\n * `<` -> `\\u003c`\n * `>` -> `\\u003e`\n *\n * Since those characters do not occur in other places of the JSON document, only\n * string values are affected.\n *\n * If the input is invalid JSON, the behaviour is undefined.\n */\nfunction escapeCharacters(input) {\n    // When we migrate to target es2021 or above, we can use replaceAll instead of global patterns.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll\n    const amp = /&/g;\n    const lt = /</g;\n    const gt = />/g;\n    return input.replace(amp, \"\\\\u0026\").replace(lt, \"\\\\u003c\").replace(gt, \"\\\\u003e\");\n}\nexports.escapeCharacters = escapeCharacters;\nfunction serializeSignDoc(signDoc) {\n    const serialized = escapeCharacters(sortedJsonStringify(signDoc));\n    return (0, encoding_1.toUtf8)(serialized);\n}\nexports.serializeSignDoc = serializeSignDoc;\n//# sourceMappingURL=signdoc.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zaWduZG9jLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLHdCQUF3QixHQUFHLG1CQUFtQixHQUFHLDJCQUEyQjtBQUN2RztBQUNBLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsc0VBQWM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsMkNBQTJDO0FBQzNFO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcT25lRHJpdmVcXERlc2t0b3BcXHZhdWx0cXVlc3RcXG5vZGVfbW9kdWxlc1xcQGNvc21qc1xcYW1pbm9cXGJ1aWxkXFxzaWduZG9jLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zZXJpYWxpemVTaWduRG9jID0gZXhwb3J0cy5lc2NhcGVDaGFyYWN0ZXJzID0gZXhwb3J0cy5tYWtlU2lnbkRvYyA9IGV4cG9ydHMuc29ydGVkSnNvblN0cmluZ2lmeSA9IHZvaWQgMDtcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvbiAqL1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2VuY29kaW5nXCIpO1xuY29uc3QgbWF0aF8xID0gcmVxdWlyZShcIkBjb3NtanMvbWF0aFwiKTtcbmZ1bmN0aW9uIHNvcnRlZE9iamVjdChvYmopIHtcbiAgICBpZiAodHlwZW9mIG9iaiAhPT0gXCJvYmplY3RcIiB8fCBvYmogPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgICAgICByZXR1cm4gb2JqLm1hcChzb3J0ZWRPYmplY3QpO1xuICAgIH1cbiAgICBjb25zdCBzb3J0ZWRLZXlzID0gT2JqZWN0LmtleXMob2JqKS5zb3J0KCk7XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgLy8gTk9URTogVXNlIGZvckVhY2ggaW5zdGVhZCBvZiByZWR1Y2UgZm9yIHBlcmZvcm1hbmNlIHdpdGggbGFyZ2Ugb2JqZWN0cyBlZyBXYXNtIGNvZGVcbiAgICBzb3J0ZWRLZXlzLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICByZXN1bHRba2V5XSA9IHNvcnRlZE9iamVjdChvYmpba2V5XSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKiBSZXR1cm5zIGEgSlNPTiBzdHJpbmcgd2l0aCBvYmplY3RzIHNvcnRlZCBieSBrZXkgKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvZXhwbGljaXQtbW9kdWxlLWJvdW5kYXJ5LXR5cGVzXG5mdW5jdGlvbiBzb3J0ZWRKc29uU3RyaW5naWZ5KG9iaikge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShzb3J0ZWRPYmplY3Qob2JqKSk7XG59XG5leHBvcnRzLnNvcnRlZEpzb25TdHJpbmdpZnkgPSBzb3J0ZWRKc29uU3RyaW5naWZ5O1xuZnVuY3Rpb24gbWFrZVNpZ25Eb2MobXNncywgZmVlLCBjaGFpbklkLCBtZW1vLCBhY2NvdW50TnVtYmVyLCBzZXF1ZW5jZSwgdGltZW91dF9oZWlnaHQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBjaGFpbl9pZDogY2hhaW5JZCxcbiAgICAgICAgYWNjb3VudF9udW1iZXI6IG1hdGhfMS5VaW50NTMuZnJvbVN0cmluZyhhY2NvdW50TnVtYmVyLnRvU3RyaW5nKCkpLnRvU3RyaW5nKCksXG4gICAgICAgIHNlcXVlbmNlOiBtYXRoXzEuVWludDUzLmZyb21TdHJpbmcoc2VxdWVuY2UudG9TdHJpbmcoKSkudG9TdHJpbmcoKSxcbiAgICAgICAgZmVlOiBmZWUsXG4gICAgICAgIG1zZ3M6IG1zZ3MsXG4gICAgICAgIG1lbW86IG1lbW8gfHwgXCJcIixcbiAgICAgICAgLi4uKHRpbWVvdXRfaGVpZ2h0ICYmIHsgdGltZW91dF9oZWlnaHQ6IHRpbWVvdXRfaGVpZ2h0LnRvU3RyaW5nKCkgfSksXG4gICAgfTtcbn1cbmV4cG9ydHMubWFrZVNpZ25Eb2MgPSBtYWtlU2lnbkRvYztcbi8qKlxuICogVGFrZXMgYSB2YWxpZCBKU09OIGRvY3VtZW50IGFuZCBwZXJmb3JtcyB0aGUgZm9sbG93aW5nIGVzY2FwaW5ncyBpbiBzdHJpbmcgdmFsdWVzOlxuICpcbiAqIGAmYCAtPiBgXFx1MDAyNmBcbiAqIGA8YCAtPiBgXFx1MDAzY2BcbiAqIGA+YCAtPiBgXFx1MDAzZWBcbiAqXG4gKiBTaW5jZSB0aG9zZSBjaGFyYWN0ZXJzIGRvIG5vdCBvY2N1ciBpbiBvdGhlciBwbGFjZXMgb2YgdGhlIEpTT04gZG9jdW1lbnQsIG9ubHlcbiAqIHN0cmluZyB2YWx1ZXMgYXJlIGFmZmVjdGVkLlxuICpcbiAqIElmIHRoZSBpbnB1dCBpcyBpbnZhbGlkIEpTT04sIHRoZSBiZWhhdmlvdXIgaXMgdW5kZWZpbmVkLlxuICovXG5mdW5jdGlvbiBlc2NhcGVDaGFyYWN0ZXJzKGlucHV0KSB7XG4gICAgLy8gV2hlbiB3ZSBtaWdyYXRlIHRvIHRhcmdldCBlczIwMjEgb3IgYWJvdmUsIHdlIGNhbiB1c2UgcmVwbGFjZUFsbCBpbnN0ZWFkIG9mIGdsb2JhbCBwYXR0ZXJucy5cbiAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9TdHJpbmcvcmVwbGFjZUFsbFxuICAgIGNvbnN0IGFtcCA9IC8mL2c7XG4gICAgY29uc3QgbHQgPSAvPC9nO1xuICAgIGNvbnN0IGd0ID0gLz4vZztcbiAgICByZXR1cm4gaW5wdXQucmVwbGFjZShhbXAsIFwiXFxcXHUwMDI2XCIpLnJlcGxhY2UobHQsIFwiXFxcXHUwMDNjXCIpLnJlcGxhY2UoZ3QsIFwiXFxcXHUwMDNlXCIpO1xufVxuZXhwb3J0cy5lc2NhcGVDaGFyYWN0ZXJzID0gZXNjYXBlQ2hhcmFjdGVycztcbmZ1bmN0aW9uIHNlcmlhbGl6ZVNpZ25Eb2Moc2lnbkRvYykge1xuICAgIGNvbnN0IHNlcmlhbGl6ZWQgPSBlc2NhcGVDaGFyYWN0ZXJzKHNvcnRlZEpzb25TdHJpbmdpZnkoc2lnbkRvYykpO1xuICAgIHJldHVybiAoMCwgZW5jb2RpbmdfMS50b1V0ZjgpKHNlcmlhbGl6ZWQpO1xufVxuZXhwb3J0cy5zZXJpYWxpemVTaWduRG9jID0gc2VyaWFsaXplU2lnbkRvYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25kb2MuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/stdtx.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/stdtx.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeStdTx = exports.isStdTx = void 0;\nfunction isStdTx(txValue) {\n    const { memo, msg, fee, signatures } = txValue;\n    return (typeof memo === \"string\" && Array.isArray(msg) && typeof fee === \"object\" && Array.isArray(signatures));\n}\nexports.isStdTx = isStdTx;\nfunction makeStdTx(content, signatures) {\n    return {\n        msg: content.msgs,\n        fee: content.fee,\n        memo: content.memo,\n        signatures: Array.isArray(signatures) ? signatures : [signatures],\n    };\n}\nexports.makeStdTx = makeStdTx;\n//# sourceMappingURL=stdtx.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zdGR0eC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxlQUFlO0FBQ25DO0FBQ0EsWUFBWSw2QkFBNkI7QUFDekM7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxhbWlub1xcYnVpbGRcXHN0ZHR4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tYWtlU3RkVHggPSBleHBvcnRzLmlzU3RkVHggPSB2b2lkIDA7XG5mdW5jdGlvbiBpc1N0ZFR4KHR4VmFsdWUpIHtcbiAgICBjb25zdCB7IG1lbW8sIG1zZywgZmVlLCBzaWduYXR1cmVzIH0gPSB0eFZhbHVlO1xuICAgIHJldHVybiAodHlwZW9mIG1lbW8gPT09IFwic3RyaW5nXCIgJiYgQXJyYXkuaXNBcnJheShtc2cpICYmIHR5cGVvZiBmZWUgPT09IFwib2JqZWN0XCIgJiYgQXJyYXkuaXNBcnJheShzaWduYXR1cmVzKSk7XG59XG5leHBvcnRzLmlzU3RkVHggPSBpc1N0ZFR4O1xuZnVuY3Rpb24gbWFrZVN0ZFR4KGNvbnRlbnQsIHNpZ25hdHVyZXMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBtc2c6IGNvbnRlbnQubXNncyxcbiAgICAgICAgZmVlOiBjb250ZW50LmZlZSxcbiAgICAgICAgbWVtbzogY29udGVudC5tZW1vLFxuICAgICAgICBzaWduYXR1cmVzOiBBcnJheS5pc0FycmF5KHNpZ25hdHVyZXMpID8gc2lnbmF0dXJlcyA6IFtzaWduYXR1cmVzXSxcbiAgICB9O1xufVxuZXhwb3J0cy5tYWtlU3RkVHggPSBtYWtlU3RkVHg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGR0eC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/stdtx.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/wallet.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/wallet.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decrypt = exports.encrypt = exports.supportedAlgorithms = exports.executeKdf = exports.cosmjsSalt = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\n/**\n * A fixed salt is chosen to archive a deterministic password to key derivation.\n * This reduces the scope of a potential rainbow attack to all CosmJS users.\n * Must be 16 bytes due to implementation limitations.\n */\nexports.cosmjsSalt = (0, encoding_1.toAscii)(\"The CosmJS salt.\");\nasync function executeKdf(password, configuration) {\n    switch (configuration.algorithm) {\n        case \"argon2id\": {\n            const options = configuration.params;\n            if (!(0, crypto_1.isArgon2idOptions)(options))\n                throw new Error(\"Invalid format of argon2id params\");\n            return crypto_1.Argon2id.execute(password, exports.cosmjsSalt, options);\n        }\n        default:\n            throw new Error(\"Unsupported KDF algorithm\");\n    }\n}\nexports.executeKdf = executeKdf;\nexports.supportedAlgorithms = {\n    xchacha20poly1305Ietf: \"xchacha20poly1305-ietf\",\n};\nasync function encrypt(plaintext, encryptionKey, config) {\n    switch (config.algorithm) {\n        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {\n            const nonce = crypto_1.Random.getBytes(crypto_1.xchacha20NonceLength);\n            // Prepend fixed-length nonce to ciphertext as suggested in the example from https://github.com/jedisct1/libsodium.js#api\n            return new Uint8Array([\n                ...nonce,\n                ...(await crypto_1.Xchacha20poly1305Ietf.encrypt(plaintext, encryptionKey, nonce)),\n            ]);\n        }\n        default:\n            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);\n    }\n}\nexports.encrypt = encrypt;\nasync function decrypt(ciphertext, encryptionKey, config) {\n    switch (config.algorithm) {\n        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {\n            const nonce = ciphertext.slice(0, crypto_1.xchacha20NonceLength);\n            return crypto_1.Xchacha20poly1305Ietf.decrypt(ciphertext.slice(crypto_1.xchacha20NonceLength), encryptionKey, nonce);\n        }\n        default:\n            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);\n    }\n}\nexports.decrypt = decrypt;\n//# sourceMappingURL=wallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC93YWxsZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZSxHQUFHLGVBQWUsR0FBRywyQkFBMkIsR0FBRyxrQkFBa0IsR0FBRyxrQkFBa0I7QUFDekcsaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsaUJBQWlCO0FBQ25GO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsaUJBQWlCO0FBQ25GO0FBQ0E7QUFDQSxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5cXE9uZURyaXZlXFxEZXNrdG9wXFx2YXVsdHF1ZXN0XFxub2RlX21vZHVsZXNcXEBjb3NtanNcXGFtaW5vXFxidWlsZFxcd2FsbGV0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNyeXB0ID0gZXhwb3J0cy5lbmNyeXB0ID0gZXhwb3J0cy5zdXBwb3J0ZWRBbGdvcml0aG1zID0gZXhwb3J0cy5leGVjdXRlS2RmID0gZXhwb3J0cy5jb3NtanNTYWx0ID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQGNvc21qcy9jcnlwdG9cIik7XG5jb25zdCBlbmNvZGluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvZW5jb2RpbmdcIik7XG4vKipcbiAqIEEgZml4ZWQgc2FsdCBpcyBjaG9zZW4gdG8gYXJjaGl2ZSBhIGRldGVybWluaXN0aWMgcGFzc3dvcmQgdG8ga2V5IGRlcml2YXRpb24uXG4gKiBUaGlzIHJlZHVjZXMgdGhlIHNjb3BlIG9mIGEgcG90ZW50aWFsIHJhaW5ib3cgYXR0YWNrIHRvIGFsbCBDb3NtSlMgdXNlcnMuXG4gKiBNdXN0IGJlIDE2IGJ5dGVzIGR1ZSB0byBpbXBsZW1lbnRhdGlvbiBsaW1pdGF0aW9ucy5cbiAqL1xuZXhwb3J0cy5jb3NtanNTYWx0ID0gKDAsIGVuY29kaW5nXzEudG9Bc2NpaSkoXCJUaGUgQ29zbUpTIHNhbHQuXCIpO1xuYXN5bmMgZnVuY3Rpb24gZXhlY3V0ZUtkZihwYXNzd29yZCwgY29uZmlndXJhdGlvbikge1xuICAgIHN3aXRjaCAoY29uZmlndXJhdGlvbi5hbGdvcml0aG0pIHtcbiAgICAgICAgY2FzZSBcImFyZ29uMmlkXCI6IHtcbiAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSBjb25maWd1cmF0aW9uLnBhcmFtcztcbiAgICAgICAgICAgIGlmICghKDAsIGNyeXB0b18xLmlzQXJnb24yaWRPcHRpb25zKShvcHRpb25zKSlcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGZvcm1hdCBvZiBhcmdvbjJpZCBwYXJhbXNcIik7XG4gICAgICAgICAgICByZXR1cm4gY3J5cHRvXzEuQXJnb24yaWQuZXhlY3V0ZShwYXNzd29yZCwgZXhwb3J0cy5jb3NtanNTYWx0LCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgS0RGIGFsZ29yaXRobVwiKTtcbiAgICB9XG59XG5leHBvcnRzLmV4ZWN1dGVLZGYgPSBleGVjdXRlS2RmO1xuZXhwb3J0cy5zdXBwb3J0ZWRBbGdvcml0aG1zID0ge1xuICAgIHhjaGFjaGEyMHBvbHkxMzA1SWV0ZjogXCJ4Y2hhY2hhMjBwb2x5MTMwNS1pZXRmXCIsXG59O1xuYXN5bmMgZnVuY3Rpb24gZW5jcnlwdChwbGFpbnRleHQsIGVuY3J5cHRpb25LZXksIGNvbmZpZykge1xuICAgIHN3aXRjaCAoY29uZmlnLmFsZ29yaXRobSkge1xuICAgICAgICBjYXNlIGV4cG9ydHMuc3VwcG9ydGVkQWxnb3JpdGhtcy54Y2hhY2hhMjBwb2x5MTMwNUlldGY6IHtcbiAgICAgICAgICAgIGNvbnN0IG5vbmNlID0gY3J5cHRvXzEuUmFuZG9tLmdldEJ5dGVzKGNyeXB0b18xLnhjaGFjaGEyME5vbmNlTGVuZ3RoKTtcbiAgICAgICAgICAgIC8vIFByZXBlbmQgZml4ZWQtbGVuZ3RoIG5vbmNlIHRvIGNpcGhlcnRleHQgYXMgc3VnZ2VzdGVkIGluIHRoZSBleGFtcGxlIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2plZGlzY3QxL2xpYnNvZGl1bS5qcyNhcGlcbiAgICAgICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShbXG4gICAgICAgICAgICAgICAgLi4ubm9uY2UsXG4gICAgICAgICAgICAgICAgLi4uKGF3YWl0IGNyeXB0b18xLlhjaGFjaGEyMHBvbHkxMzA1SWV0Zi5lbmNyeXB0KHBsYWludGV4dCwgZW5jcnlwdGlvbktleSwgbm9uY2UpKSxcbiAgICAgICAgICAgIF0pO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY3J5cHRpb24gYWxnb3JpdGhtOiAnJHtjb25maWcuYWxnb3JpdGhtfSdgKTtcbiAgICB9XG59XG5leHBvcnRzLmVuY3J5cHQgPSBlbmNyeXB0O1xuYXN5bmMgZnVuY3Rpb24gZGVjcnlwdChjaXBoZXJ0ZXh0LCBlbmNyeXB0aW9uS2V5LCBjb25maWcpIHtcbiAgICBzd2l0Y2ggKGNvbmZpZy5hbGdvcml0aG0pIHtcbiAgICAgICAgY2FzZSBleHBvcnRzLnN1cHBvcnRlZEFsZ29yaXRobXMueGNoYWNoYTIwcG9seTEzMDVJZXRmOiB7XG4gICAgICAgICAgICBjb25zdCBub25jZSA9IGNpcGhlcnRleHQuc2xpY2UoMCwgY3J5cHRvXzEueGNoYWNoYTIwTm9uY2VMZW5ndGgpO1xuICAgICAgICAgICAgcmV0dXJuIGNyeXB0b18xLlhjaGFjaGEyMHBvbHkxMzA1SWV0Zi5kZWNyeXB0KGNpcGhlcnRleHQuc2xpY2UoY3J5cHRvXzEueGNoYWNoYTIwTm9uY2VMZW5ndGgpLCBlbmNyeXB0aW9uS2V5LCBub25jZSk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgZW5jcnlwdGlvbiBhbGdvcml0aG06ICcke2NvbmZpZy5hbGdvcml0aG19J2ApO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVjcnlwdCA9IGRlY3J5cHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YWxsZXQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/bip39.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/bip39.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Bip39 = exports.EnglishMnemonic = exports.mnemonicToEntropy = exports.entropyToMnemonic = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst pbkdf2_1 = __webpack_require__(/*! ./pbkdf2 */ \"(ssr)/./node_modules/@cosmjs/crypto/build/pbkdf2.js\");\nconst sha_1 = __webpack_require__(/*! ./sha */ \"(ssr)/./node_modules/@cosmjs/crypto/build/sha.js\");\nconst wordlist = [\n    \"abandon\",\n    \"ability\",\n    \"able\",\n    \"about\",\n    \"above\",\n    \"absent\",\n    \"absorb\",\n    \"abstract\",\n    \"absurd\",\n    \"abuse\",\n    \"access\",\n    \"accident\",\n    \"account\",\n    \"accuse\",\n    \"achieve\",\n    \"acid\",\n    \"acoustic\",\n    \"acquire\",\n    \"across\",\n    \"act\",\n    \"action\",\n    \"actor\",\n    \"actress\",\n    \"actual\",\n    \"adapt\",\n    \"add\",\n    \"addict\",\n    \"address\",\n    \"adjust\",\n    \"admit\",\n    \"adult\",\n    \"advance\",\n    \"advice\",\n    \"aerobic\",\n    \"affair\",\n    \"afford\",\n    \"afraid\",\n    \"again\",\n    \"age\",\n    \"agent\",\n    \"agree\",\n    \"ahead\",\n    \"aim\",\n    \"air\",\n    \"airport\",\n    \"aisle\",\n    \"alarm\",\n    \"album\",\n    \"alcohol\",\n    \"alert\",\n    \"alien\",\n    \"all\",\n    \"alley\",\n    \"allow\",\n    \"almost\",\n    \"alone\",\n    \"alpha\",\n    \"already\",\n    \"also\",\n    \"alter\",\n    \"always\",\n    \"amateur\",\n    \"amazing\",\n    \"among\",\n    \"amount\",\n    \"amused\",\n    \"analyst\",\n    \"anchor\",\n    \"ancient\",\n    \"anger\",\n    \"angle\",\n    \"angry\",\n    \"animal\",\n    \"ankle\",\n    \"announce\",\n    \"annual\",\n    \"another\",\n    \"answer\",\n    \"antenna\",\n    \"antique\",\n    \"anxiety\",\n    \"any\",\n    \"apart\",\n    \"apology\",\n    \"appear\",\n    \"apple\",\n    \"approve\",\n    \"april\",\n    \"arch\",\n    \"arctic\",\n    \"area\",\n    \"arena\",\n    \"argue\",\n    \"arm\",\n    \"armed\",\n    \"armor\",\n    \"army\",\n    \"around\",\n    \"arrange\",\n    \"arrest\",\n    \"arrive\",\n    \"arrow\",\n    \"art\",\n    \"artefact\",\n    \"artist\",\n    \"artwork\",\n    \"ask\",\n    \"aspect\",\n    \"assault\",\n    \"asset\",\n    \"assist\",\n    \"assume\",\n    \"asthma\",\n    \"athlete\",\n    \"atom\",\n    \"attack\",\n    \"attend\",\n    \"attitude\",\n    \"attract\",\n    \"auction\",\n    \"audit\",\n    \"august\",\n    \"aunt\",\n    \"author\",\n    \"auto\",\n    \"autumn\",\n    \"average\",\n    \"avocado\",\n    \"avoid\",\n    \"awake\",\n    \"aware\",\n    \"away\",\n    \"awesome\",\n    \"awful\",\n    \"awkward\",\n    \"axis\",\n    \"baby\",\n    \"bachelor\",\n    \"bacon\",\n    \"badge\",\n    \"bag\",\n    \"balance\",\n    \"balcony\",\n    \"ball\",\n    \"bamboo\",\n    \"banana\",\n    \"banner\",\n    \"bar\",\n    \"barely\",\n    \"bargain\",\n    \"barrel\",\n    \"base\",\n    \"basic\",\n    \"basket\",\n    \"battle\",\n    \"beach\",\n    \"bean\",\n    \"beauty\",\n    \"because\",\n    \"become\",\n    \"beef\",\n    \"before\",\n    \"begin\",\n    \"behave\",\n    \"behind\",\n    \"believe\",\n    \"below\",\n    \"belt\",\n    \"bench\",\n    \"benefit\",\n    \"best\",\n    \"betray\",\n    \"better\",\n    \"between\",\n    \"beyond\",\n    \"bicycle\",\n    \"bid\",\n    \"bike\",\n    \"bind\",\n    \"biology\",\n    \"bird\",\n    \"birth\",\n    \"bitter\",\n    \"black\",\n    \"blade\",\n    \"blame\",\n    \"blanket\",\n    \"blast\",\n    \"bleak\",\n    \"bless\",\n    \"blind\",\n    \"blood\",\n    \"blossom\",\n    \"blouse\",\n    \"blue\",\n    \"blur\",\n    \"blush\",\n    \"board\",\n    \"boat\",\n    \"body\",\n    \"boil\",\n    \"bomb\",\n    \"bone\",\n    \"bonus\",\n    \"book\",\n    \"boost\",\n    \"border\",\n    \"boring\",\n    \"borrow\",\n    \"boss\",\n    \"bottom\",\n    \"bounce\",\n    \"box\",\n    \"boy\",\n    \"bracket\",\n    \"brain\",\n    \"brand\",\n    \"brass\",\n    \"brave\",\n    \"bread\",\n    \"breeze\",\n    \"brick\",\n    \"bridge\",\n    \"brief\",\n    \"bright\",\n    \"bring\",\n    \"brisk\",\n    \"broccoli\",\n    \"broken\",\n    \"bronze\",\n    \"broom\",\n    \"brother\",\n    \"brown\",\n    \"brush\",\n    \"bubble\",\n    \"buddy\",\n    \"budget\",\n    \"buffalo\",\n    \"build\",\n    \"bulb\",\n    \"bulk\",\n    \"bullet\",\n    \"bundle\",\n    \"bunker\",\n    \"burden\",\n    \"burger\",\n    \"burst\",\n    \"bus\",\n    \"business\",\n    \"busy\",\n    \"butter\",\n    \"buyer\",\n    \"buzz\",\n    \"cabbage\",\n    \"cabin\",\n    \"cable\",\n    \"cactus\",\n    \"cage\",\n    \"cake\",\n    \"call\",\n    \"calm\",\n    \"camera\",\n    \"camp\",\n    \"can\",\n    \"canal\",\n    \"cancel\",\n    \"candy\",\n    \"cannon\",\n    \"canoe\",\n    \"canvas\",\n    \"canyon\",\n    \"capable\",\n    \"capital\",\n    \"captain\",\n    \"car\",\n    \"carbon\",\n    \"card\",\n    \"cargo\",\n    \"carpet\",\n    \"carry\",\n    \"cart\",\n    \"case\",\n    \"cash\",\n    \"casino\",\n    \"castle\",\n    \"casual\",\n    \"cat\",\n    \"catalog\",\n    \"catch\",\n    \"category\",\n    \"cattle\",\n    \"caught\",\n    \"cause\",\n    \"caution\",\n    \"cave\",\n    \"ceiling\",\n    \"celery\",\n    \"cement\",\n    \"census\",\n    \"century\",\n    \"cereal\",\n    \"certain\",\n    \"chair\",\n    \"chalk\",\n    \"champion\",\n    \"change\",\n    \"chaos\",\n    \"chapter\",\n    \"charge\",\n    \"chase\",\n    \"chat\",\n    \"cheap\",\n    \"check\",\n    \"cheese\",\n    \"chef\",\n    \"cherry\",\n    \"chest\",\n    \"chicken\",\n    \"chief\",\n    \"child\",\n    \"chimney\",\n    \"choice\",\n    \"choose\",\n    \"chronic\",\n    \"chuckle\",\n    \"chunk\",\n    \"churn\",\n    \"cigar\",\n    \"cinnamon\",\n    \"circle\",\n    \"citizen\",\n    \"city\",\n    \"civil\",\n    \"claim\",\n    \"clap\",\n    \"clarify\",\n    \"claw\",\n    \"clay\",\n    \"clean\",\n    \"clerk\",\n    \"clever\",\n    \"click\",\n    \"client\",\n    \"cliff\",\n    \"climb\",\n    \"clinic\",\n    \"clip\",\n    \"clock\",\n    \"clog\",\n    \"close\",\n    \"cloth\",\n    \"cloud\",\n    \"clown\",\n    \"club\",\n    \"clump\",\n    \"cluster\",\n    \"clutch\",\n    \"coach\",\n    \"coast\",\n    \"coconut\",\n    \"code\",\n    \"coffee\",\n    \"coil\",\n    \"coin\",\n    \"collect\",\n    \"color\",\n    \"column\",\n    \"combine\",\n    \"come\",\n    \"comfort\",\n    \"comic\",\n    \"common\",\n    \"company\",\n    \"concert\",\n    \"conduct\",\n    \"confirm\",\n    \"congress\",\n    \"connect\",\n    \"consider\",\n    \"control\",\n    \"convince\",\n    \"cook\",\n    \"cool\",\n    \"copper\",\n    \"copy\",\n    \"coral\",\n    \"core\",\n    \"corn\",\n    \"correct\",\n    \"cost\",\n    \"cotton\",\n    \"couch\",\n    \"country\",\n    \"couple\",\n    \"course\",\n    \"cousin\",\n    \"cover\",\n    \"coyote\",\n    \"crack\",\n    \"cradle\",\n    \"craft\",\n    \"cram\",\n    \"crane\",\n    \"crash\",\n    \"crater\",\n    \"crawl\",\n    \"crazy\",\n    \"cream\",\n    \"credit\",\n    \"creek\",\n    \"crew\",\n    \"cricket\",\n    \"crime\",\n    \"crisp\",\n    \"critic\",\n    \"crop\",\n    \"cross\",\n    \"crouch\",\n    \"crowd\",\n    \"crucial\",\n    \"cruel\",\n    \"cruise\",\n    \"crumble\",\n    \"crunch\",\n    \"crush\",\n    \"cry\",\n    \"crystal\",\n    \"cube\",\n    \"culture\",\n    \"cup\",\n    \"cupboard\",\n    \"curious\",\n    \"current\",\n    \"curtain\",\n    \"curve\",\n    \"cushion\",\n    \"custom\",\n    \"cute\",\n    \"cycle\",\n    \"dad\",\n    \"damage\",\n    \"damp\",\n    \"dance\",\n    \"danger\",\n    \"daring\",\n    \"dash\",\n    \"daughter\",\n    \"dawn\",\n    \"day\",\n    \"deal\",\n    \"debate\",\n    \"debris\",\n    \"decade\",\n    \"december\",\n    \"decide\",\n    \"decline\",\n    \"decorate\",\n    \"decrease\",\n    \"deer\",\n    \"defense\",\n    \"define\",\n    \"defy\",\n    \"degree\",\n    \"delay\",\n    \"deliver\",\n    \"demand\",\n    \"demise\",\n    \"denial\",\n    \"dentist\",\n    \"deny\",\n    \"depart\",\n    \"depend\",\n    \"deposit\",\n    \"depth\",\n    \"deputy\",\n    \"derive\",\n    \"describe\",\n    \"desert\",\n    \"design\",\n    \"desk\",\n    \"despair\",\n    \"destroy\",\n    \"detail\",\n    \"detect\",\n    \"develop\",\n    \"device\",\n    \"devote\",\n    \"diagram\",\n    \"dial\",\n    \"diamond\",\n    \"diary\",\n    \"dice\",\n    \"diesel\",\n    \"diet\",\n    \"differ\",\n    \"digital\",\n    \"dignity\",\n    \"dilemma\",\n    \"dinner\",\n    \"dinosaur\",\n    \"direct\",\n    \"dirt\",\n    \"disagree\",\n    \"discover\",\n    \"disease\",\n    \"dish\",\n    \"dismiss\",\n    \"disorder\",\n    \"display\",\n    \"distance\",\n    \"divert\",\n    \"divide\",\n    \"divorce\",\n    \"dizzy\",\n    \"doctor\",\n    \"document\",\n    \"dog\",\n    \"doll\",\n    \"dolphin\",\n    \"domain\",\n    \"donate\",\n    \"donkey\",\n    \"donor\",\n    \"door\",\n    \"dose\",\n    \"double\",\n    \"dove\",\n    \"draft\",\n    \"dragon\",\n    \"drama\",\n    \"drastic\",\n    \"draw\",\n    \"dream\",\n    \"dress\",\n    \"drift\",\n    \"drill\",\n    \"drink\",\n    \"drip\",\n    \"drive\",\n    \"drop\",\n    \"drum\",\n    \"dry\",\n    \"duck\",\n    \"dumb\",\n    \"dune\",\n    \"during\",\n    \"dust\",\n    \"dutch\",\n    \"duty\",\n    \"dwarf\",\n    \"dynamic\",\n    \"eager\",\n    \"eagle\",\n    \"early\",\n    \"earn\",\n    \"earth\",\n    \"easily\",\n    \"east\",\n    \"easy\",\n    \"echo\",\n    \"ecology\",\n    \"economy\",\n    \"edge\",\n    \"edit\",\n    \"educate\",\n    \"effort\",\n    \"egg\",\n    \"eight\",\n    \"either\",\n    \"elbow\",\n    \"elder\",\n    \"electric\",\n    \"elegant\",\n    \"element\",\n    \"elephant\",\n    \"elevator\",\n    \"elite\",\n    \"else\",\n    \"embark\",\n    \"embody\",\n    \"embrace\",\n    \"emerge\",\n    \"emotion\",\n    \"employ\",\n    \"empower\",\n    \"empty\",\n    \"enable\",\n    \"enact\",\n    \"end\",\n    \"endless\",\n    \"endorse\",\n    \"enemy\",\n    \"energy\",\n    \"enforce\",\n    \"engage\",\n    \"engine\",\n    \"enhance\",\n    \"enjoy\",\n    \"enlist\",\n    \"enough\",\n    \"enrich\",\n    \"enroll\",\n    \"ensure\",\n    \"enter\",\n    \"entire\",\n    \"entry\",\n    \"envelope\",\n    \"episode\",\n    \"equal\",\n    \"equip\",\n    \"era\",\n    \"erase\",\n    \"erode\",\n    \"erosion\",\n    \"error\",\n    \"erupt\",\n    \"escape\",\n    \"essay\",\n    \"essence\",\n    \"estate\",\n    \"eternal\",\n    \"ethics\",\n    \"evidence\",\n    \"evil\",\n    \"evoke\",\n    \"evolve\",\n    \"exact\",\n    \"example\",\n    \"excess\",\n    \"exchange\",\n    \"excite\",\n    \"exclude\",\n    \"excuse\",\n    \"execute\",\n    \"exercise\",\n    \"exhaust\",\n    \"exhibit\",\n    \"exile\",\n    \"exist\",\n    \"exit\",\n    \"exotic\",\n    \"expand\",\n    \"expect\",\n    \"expire\",\n    \"explain\",\n    \"expose\",\n    \"express\",\n    \"extend\",\n    \"extra\",\n    \"eye\",\n    \"eyebrow\",\n    \"fabric\",\n    \"face\",\n    \"faculty\",\n    \"fade\",\n    \"faint\",\n    \"faith\",\n    \"fall\",\n    \"false\",\n    \"fame\",\n    \"family\",\n    \"famous\",\n    \"fan\",\n    \"fancy\",\n    \"fantasy\",\n    \"farm\",\n    \"fashion\",\n    \"fat\",\n    \"fatal\",\n    \"father\",\n    \"fatigue\",\n    \"fault\",\n    \"favorite\",\n    \"feature\",\n    \"february\",\n    \"federal\",\n    \"fee\",\n    \"feed\",\n    \"feel\",\n    \"female\",\n    \"fence\",\n    \"festival\",\n    \"fetch\",\n    \"fever\",\n    \"few\",\n    \"fiber\",\n    \"fiction\",\n    \"field\",\n    \"figure\",\n    \"file\",\n    \"film\",\n    \"filter\",\n    \"final\",\n    \"find\",\n    \"fine\",\n    \"finger\",\n    \"finish\",\n    \"fire\",\n    \"firm\",\n    \"first\",\n    \"fiscal\",\n    \"fish\",\n    \"fit\",\n    \"fitness\",\n    \"fix\",\n    \"flag\",\n    \"flame\",\n    \"flash\",\n    \"flat\",\n    \"flavor\",\n    \"flee\",\n    \"flight\",\n    \"flip\",\n    \"float\",\n    \"flock\",\n    \"floor\",\n    \"flower\",\n    \"fluid\",\n    \"flush\",\n    \"fly\",\n    \"foam\",\n    \"focus\",\n    \"fog\",\n    \"foil\",\n    \"fold\",\n    \"follow\",\n    \"food\",\n    \"foot\",\n    \"force\",\n    \"forest\",\n    \"forget\",\n    \"fork\",\n    \"fortune\",\n    \"forum\",\n    \"forward\",\n    \"fossil\",\n    \"foster\",\n    \"found\",\n    \"fox\",\n    \"fragile\",\n    \"frame\",\n    \"frequent\",\n    \"fresh\",\n    \"friend\",\n    \"fringe\",\n    \"frog\",\n    \"front\",\n    \"frost\",\n    \"frown\",\n    \"frozen\",\n    \"fruit\",\n    \"fuel\",\n    \"fun\",\n    \"funny\",\n    \"furnace\",\n    \"fury\",\n    \"future\",\n    \"gadget\",\n    \"gain\",\n    \"galaxy\",\n    \"gallery\",\n    \"game\",\n    \"gap\",\n    \"garage\",\n    \"garbage\",\n    \"garden\",\n    \"garlic\",\n    \"garment\",\n    \"gas\",\n    \"gasp\",\n    \"gate\",\n    \"gather\",\n    \"gauge\",\n    \"gaze\",\n    \"general\",\n    \"genius\",\n    \"genre\",\n    \"gentle\",\n    \"genuine\",\n    \"gesture\",\n    \"ghost\",\n    \"giant\",\n    \"gift\",\n    \"giggle\",\n    \"ginger\",\n    \"giraffe\",\n    \"girl\",\n    \"give\",\n    \"glad\",\n    \"glance\",\n    \"glare\",\n    \"glass\",\n    \"glide\",\n    \"glimpse\",\n    \"globe\",\n    \"gloom\",\n    \"glory\",\n    \"glove\",\n    \"glow\",\n    \"glue\",\n    \"goat\",\n    \"goddess\",\n    \"gold\",\n    \"good\",\n    \"goose\",\n    \"gorilla\",\n    \"gospel\",\n    \"gossip\",\n    \"govern\",\n    \"gown\",\n    \"grab\",\n    \"grace\",\n    \"grain\",\n    \"grant\",\n    \"grape\",\n    \"grass\",\n    \"gravity\",\n    \"great\",\n    \"green\",\n    \"grid\",\n    \"grief\",\n    \"grit\",\n    \"grocery\",\n    \"group\",\n    \"grow\",\n    \"grunt\",\n    \"guard\",\n    \"guess\",\n    \"guide\",\n    \"guilt\",\n    \"guitar\",\n    \"gun\",\n    \"gym\",\n    \"habit\",\n    \"hair\",\n    \"half\",\n    \"hammer\",\n    \"hamster\",\n    \"hand\",\n    \"happy\",\n    \"harbor\",\n    \"hard\",\n    \"harsh\",\n    \"harvest\",\n    \"hat\",\n    \"have\",\n    \"hawk\",\n    \"hazard\",\n    \"head\",\n    \"health\",\n    \"heart\",\n    \"heavy\",\n    \"hedgehog\",\n    \"height\",\n    \"hello\",\n    \"helmet\",\n    \"help\",\n    \"hen\",\n    \"hero\",\n    \"hidden\",\n    \"high\",\n    \"hill\",\n    \"hint\",\n    \"hip\",\n    \"hire\",\n    \"history\",\n    \"hobby\",\n    \"hockey\",\n    \"hold\",\n    \"hole\",\n    \"holiday\",\n    \"hollow\",\n    \"home\",\n    \"honey\",\n    \"hood\",\n    \"hope\",\n    \"horn\",\n    \"horror\",\n    \"horse\",\n    \"hospital\",\n    \"host\",\n    \"hotel\",\n    \"hour\",\n    \"hover\",\n    \"hub\",\n    \"huge\",\n    \"human\",\n    \"humble\",\n    \"humor\",\n    \"hundred\",\n    \"hungry\",\n    \"hunt\",\n    \"hurdle\",\n    \"hurry\",\n    \"hurt\",\n    \"husband\",\n    \"hybrid\",\n    \"ice\",\n    \"icon\",\n    \"idea\",\n    \"identify\",\n    \"idle\",\n    \"ignore\",\n    \"ill\",\n    \"illegal\",\n    \"illness\",\n    \"image\",\n    \"imitate\",\n    \"immense\",\n    \"immune\",\n    \"impact\",\n    \"impose\",\n    \"improve\",\n    \"impulse\",\n    \"inch\",\n    \"include\",\n    \"income\",\n    \"increase\",\n    \"index\",\n    \"indicate\",\n    \"indoor\",\n    \"industry\",\n    \"infant\",\n    \"inflict\",\n    \"inform\",\n    \"inhale\",\n    \"inherit\",\n    \"initial\",\n    \"inject\",\n    \"injury\",\n    \"inmate\",\n    \"inner\",\n    \"innocent\",\n    \"input\",\n    \"inquiry\",\n    \"insane\",\n    \"insect\",\n    \"inside\",\n    \"inspire\",\n    \"install\",\n    \"intact\",\n    \"interest\",\n    \"into\",\n    \"invest\",\n    \"invite\",\n    \"involve\",\n    \"iron\",\n    \"island\",\n    \"isolate\",\n    \"issue\",\n    \"item\",\n    \"ivory\",\n    \"jacket\",\n    \"jaguar\",\n    \"jar\",\n    \"jazz\",\n    \"jealous\",\n    \"jeans\",\n    \"jelly\",\n    \"jewel\",\n    \"job\",\n    \"join\",\n    \"joke\",\n    \"journey\",\n    \"joy\",\n    \"judge\",\n    \"juice\",\n    \"jump\",\n    \"jungle\",\n    \"junior\",\n    \"junk\",\n    \"just\",\n    \"kangaroo\",\n    \"keen\",\n    \"keep\",\n    \"ketchup\",\n    \"key\",\n    \"kick\",\n    \"kid\",\n    \"kidney\",\n    \"kind\",\n    \"kingdom\",\n    \"kiss\",\n    \"kit\",\n    \"kitchen\",\n    \"kite\",\n    \"kitten\",\n    \"kiwi\",\n    \"knee\",\n    \"knife\",\n    \"knock\",\n    \"know\",\n    \"lab\",\n    \"label\",\n    \"labor\",\n    \"ladder\",\n    \"lady\",\n    \"lake\",\n    \"lamp\",\n    \"language\",\n    \"laptop\",\n    \"large\",\n    \"later\",\n    \"latin\",\n    \"laugh\",\n    \"laundry\",\n    \"lava\",\n    \"law\",\n    \"lawn\",\n    \"lawsuit\",\n    \"layer\",\n    \"lazy\",\n    \"leader\",\n    \"leaf\",\n    \"learn\",\n    \"leave\",\n    \"lecture\",\n    \"left\",\n    \"leg\",\n    \"legal\",\n    \"legend\",\n    \"leisure\",\n    \"lemon\",\n    \"lend\",\n    \"length\",\n    \"lens\",\n    \"leopard\",\n    \"lesson\",\n    \"letter\",\n    \"level\",\n    \"liar\",\n    \"liberty\",\n    \"library\",\n    \"license\",\n    \"life\",\n    \"lift\",\n    \"light\",\n    \"like\",\n    \"limb\",\n    \"limit\",\n    \"link\",\n    \"lion\",\n    \"liquid\",\n    \"list\",\n    \"little\",\n    \"live\",\n    \"lizard\",\n    \"load\",\n    \"loan\",\n    \"lobster\",\n    \"local\",\n    \"lock\",\n    \"logic\",\n    \"lonely\",\n    \"long\",\n    \"loop\",\n    \"lottery\",\n    \"loud\",\n    \"lounge\",\n    \"love\",\n    \"loyal\",\n    \"lucky\",\n    \"luggage\",\n    \"lumber\",\n    \"lunar\",\n    \"lunch\",\n    \"luxury\",\n    \"lyrics\",\n    \"machine\",\n    \"mad\",\n    \"magic\",\n    \"magnet\",\n    \"maid\",\n    \"mail\",\n    \"main\",\n    \"major\",\n    \"make\",\n    \"mammal\",\n    \"man\",\n    \"manage\",\n    \"mandate\",\n    \"mango\",\n    \"mansion\",\n    \"manual\",\n    \"maple\",\n    \"marble\",\n    \"march\",\n    \"margin\",\n    \"marine\",\n    \"market\",\n    \"marriage\",\n    \"mask\",\n    \"mass\",\n    \"master\",\n    \"match\",\n    \"material\",\n    \"math\",\n    \"matrix\",\n    \"matter\",\n    \"maximum\",\n    \"maze\",\n    \"meadow\",\n    \"mean\",\n    \"measure\",\n    \"meat\",\n    \"mechanic\",\n    \"medal\",\n    \"media\",\n    \"melody\",\n    \"melt\",\n    \"member\",\n    \"memory\",\n    \"mention\",\n    \"menu\",\n    \"mercy\",\n    \"merge\",\n    \"merit\",\n    \"merry\",\n    \"mesh\",\n    \"message\",\n    \"metal\",\n    \"method\",\n    \"middle\",\n    \"midnight\",\n    \"milk\",\n    \"million\",\n    \"mimic\",\n    \"mind\",\n    \"minimum\",\n    \"minor\",\n    \"minute\",\n    \"miracle\",\n    \"mirror\",\n    \"misery\",\n    \"miss\",\n    \"mistake\",\n    \"mix\",\n    \"mixed\",\n    \"mixture\",\n    \"mobile\",\n    \"model\",\n    \"modify\",\n    \"mom\",\n    \"moment\",\n    \"monitor\",\n    \"monkey\",\n    \"monster\",\n    \"month\",\n    \"moon\",\n    \"moral\",\n    \"more\",\n    \"morning\",\n    \"mosquito\",\n    \"mother\",\n    \"motion\",\n    \"motor\",\n    \"mountain\",\n    \"mouse\",\n    \"move\",\n    \"movie\",\n    \"much\",\n    \"muffin\",\n    \"mule\",\n    \"multiply\",\n    \"muscle\",\n    \"museum\",\n    \"mushroom\",\n    \"music\",\n    \"must\",\n    \"mutual\",\n    \"myself\",\n    \"mystery\",\n    \"myth\",\n    \"naive\",\n    \"name\",\n    \"napkin\",\n    \"narrow\",\n    \"nasty\",\n    \"nation\",\n    \"nature\",\n    \"near\",\n    \"neck\",\n    \"need\",\n    \"negative\",\n    \"neglect\",\n    \"neither\",\n    \"nephew\",\n    \"nerve\",\n    \"nest\",\n    \"net\",\n    \"network\",\n    \"neutral\",\n    \"never\",\n    \"news\",\n    \"next\",\n    \"nice\",\n    \"night\",\n    \"noble\",\n    \"noise\",\n    \"nominee\",\n    \"noodle\",\n    \"normal\",\n    \"north\",\n    \"nose\",\n    \"notable\",\n    \"note\",\n    \"nothing\",\n    \"notice\",\n    \"novel\",\n    \"now\",\n    \"nuclear\",\n    \"number\",\n    \"nurse\",\n    \"nut\",\n    \"oak\",\n    \"obey\",\n    \"object\",\n    \"oblige\",\n    \"obscure\",\n    \"observe\",\n    \"obtain\",\n    \"obvious\",\n    \"occur\",\n    \"ocean\",\n    \"october\",\n    \"odor\",\n    \"off\",\n    \"offer\",\n    \"office\",\n    \"often\",\n    \"oil\",\n    \"okay\",\n    \"old\",\n    \"olive\",\n    \"olympic\",\n    \"omit\",\n    \"once\",\n    \"one\",\n    \"onion\",\n    \"online\",\n    \"only\",\n    \"open\",\n    \"opera\",\n    \"opinion\",\n    \"oppose\",\n    \"option\",\n    \"orange\",\n    \"orbit\",\n    \"orchard\",\n    \"order\",\n    \"ordinary\",\n    \"organ\",\n    \"orient\",\n    \"original\",\n    \"orphan\",\n    \"ostrich\",\n    \"other\",\n    \"outdoor\",\n    \"outer\",\n    \"output\",\n    \"outside\",\n    \"oval\",\n    \"oven\",\n    \"over\",\n    \"own\",\n    \"owner\",\n    \"oxygen\",\n    \"oyster\",\n    \"ozone\",\n    \"pact\",\n    \"paddle\",\n    \"page\",\n    \"pair\",\n    \"palace\",\n    \"palm\",\n    \"panda\",\n    \"panel\",\n    \"panic\",\n    \"panther\",\n    \"paper\",\n    \"parade\",\n    \"parent\",\n    \"park\",\n    \"parrot\",\n    \"party\",\n    \"pass\",\n    \"patch\",\n    \"path\",\n    \"patient\",\n    \"patrol\",\n    \"pattern\",\n    \"pause\",\n    \"pave\",\n    \"payment\",\n    \"peace\",\n    \"peanut\",\n    \"pear\",\n    \"peasant\",\n    \"pelican\",\n    \"pen\",\n    \"penalty\",\n    \"pencil\",\n    \"people\",\n    \"pepper\",\n    \"perfect\",\n    \"permit\",\n    \"person\",\n    \"pet\",\n    \"phone\",\n    \"photo\",\n    \"phrase\",\n    \"physical\",\n    \"piano\",\n    \"picnic\",\n    \"picture\",\n    \"piece\",\n    \"pig\",\n    \"pigeon\",\n    \"pill\",\n    \"pilot\",\n    \"pink\",\n    \"pioneer\",\n    \"pipe\",\n    \"pistol\",\n    \"pitch\",\n    \"pizza\",\n    \"place\",\n    \"planet\",\n    \"plastic\",\n    \"plate\",\n    \"play\",\n    \"please\",\n    \"pledge\",\n    \"pluck\",\n    \"plug\",\n    \"plunge\",\n    \"poem\",\n    \"poet\",\n    \"point\",\n    \"polar\",\n    \"pole\",\n    \"police\",\n    \"pond\",\n    \"pony\",\n    \"pool\",\n    \"popular\",\n    \"portion\",\n    \"position\",\n    \"possible\",\n    \"post\",\n    \"potato\",\n    \"pottery\",\n    \"poverty\",\n    \"powder\",\n    \"power\",\n    \"practice\",\n    \"praise\",\n    \"predict\",\n    \"prefer\",\n    \"prepare\",\n    \"present\",\n    \"pretty\",\n    \"prevent\",\n    \"price\",\n    \"pride\",\n    \"primary\",\n    \"print\",\n    \"priority\",\n    \"prison\",\n    \"private\",\n    \"prize\",\n    \"problem\",\n    \"process\",\n    \"produce\",\n    \"profit\",\n    \"program\",\n    \"project\",\n    \"promote\",\n    \"proof\",\n    \"property\",\n    \"prosper\",\n    \"protect\",\n    \"proud\",\n    \"provide\",\n    \"public\",\n    \"pudding\",\n    \"pull\",\n    \"pulp\",\n    \"pulse\",\n    \"pumpkin\",\n    \"punch\",\n    \"pupil\",\n    \"puppy\",\n    \"purchase\",\n    \"purity\",\n    \"purpose\",\n    \"purse\",\n    \"push\",\n    \"put\",\n    \"puzzle\",\n    \"pyramid\",\n    \"quality\",\n    \"quantum\",\n    \"quarter\",\n    \"question\",\n    \"quick\",\n    \"quit\",\n    \"quiz\",\n    \"quote\",\n    \"rabbit\",\n    \"raccoon\",\n    \"race\",\n    \"rack\",\n    \"radar\",\n    \"radio\",\n    \"rail\",\n    \"rain\",\n    \"raise\",\n    \"rally\",\n    \"ramp\",\n    \"ranch\",\n    \"random\",\n    \"range\",\n    \"rapid\",\n    \"rare\",\n    \"rate\",\n    \"rather\",\n    \"raven\",\n    \"raw\",\n    \"razor\",\n    \"ready\",\n    \"real\",\n    \"reason\",\n    \"rebel\",\n    \"rebuild\",\n    \"recall\",\n    \"receive\",\n    \"recipe\",\n    \"record\",\n    \"recycle\",\n    \"reduce\",\n    \"reflect\",\n    \"reform\",\n    \"refuse\",\n    \"region\",\n    \"regret\",\n    \"regular\",\n    \"reject\",\n    \"relax\",\n    \"release\",\n    \"relief\",\n    \"rely\",\n    \"remain\",\n    \"remember\",\n    \"remind\",\n    \"remove\",\n    \"render\",\n    \"renew\",\n    \"rent\",\n    \"reopen\",\n    \"repair\",\n    \"repeat\",\n    \"replace\",\n    \"report\",\n    \"require\",\n    \"rescue\",\n    \"resemble\",\n    \"resist\",\n    \"resource\",\n    \"response\",\n    \"result\",\n    \"retire\",\n    \"retreat\",\n    \"return\",\n    \"reunion\",\n    \"reveal\",\n    \"review\",\n    \"reward\",\n    \"rhythm\",\n    \"rib\",\n    \"ribbon\",\n    \"rice\",\n    \"rich\",\n    \"ride\",\n    \"ridge\",\n    \"rifle\",\n    \"right\",\n    \"rigid\",\n    \"ring\",\n    \"riot\",\n    \"ripple\",\n    \"risk\",\n    \"ritual\",\n    \"rival\",\n    \"river\",\n    \"road\",\n    \"roast\",\n    \"robot\",\n    \"robust\",\n    \"rocket\",\n    \"romance\",\n    \"roof\",\n    \"rookie\",\n    \"room\",\n    \"rose\",\n    \"rotate\",\n    \"rough\",\n    \"round\",\n    \"route\",\n    \"royal\",\n    \"rubber\",\n    \"rude\",\n    \"rug\",\n    \"rule\",\n    \"run\",\n    \"runway\",\n    \"rural\",\n    \"sad\",\n    \"saddle\",\n    \"sadness\",\n    \"safe\",\n    \"sail\",\n    \"salad\",\n    \"salmon\",\n    \"salon\",\n    \"salt\",\n    \"salute\",\n    \"same\",\n    \"sample\",\n    \"sand\",\n    \"satisfy\",\n    \"satoshi\",\n    \"sauce\",\n    \"sausage\",\n    \"save\",\n    \"say\",\n    \"scale\",\n    \"scan\",\n    \"scare\",\n    \"scatter\",\n    \"scene\",\n    \"scheme\",\n    \"school\",\n    \"science\",\n    \"scissors\",\n    \"scorpion\",\n    \"scout\",\n    \"scrap\",\n    \"screen\",\n    \"script\",\n    \"scrub\",\n    \"sea\",\n    \"search\",\n    \"season\",\n    \"seat\",\n    \"second\",\n    \"secret\",\n    \"section\",\n    \"security\",\n    \"seed\",\n    \"seek\",\n    \"segment\",\n    \"select\",\n    \"sell\",\n    \"seminar\",\n    \"senior\",\n    \"sense\",\n    \"sentence\",\n    \"series\",\n    \"service\",\n    \"session\",\n    \"settle\",\n    \"setup\",\n    \"seven\",\n    \"shadow\",\n    \"shaft\",\n    \"shallow\",\n    \"share\",\n    \"shed\",\n    \"shell\",\n    \"sheriff\",\n    \"shield\",\n    \"shift\",\n    \"shine\",\n    \"ship\",\n    \"shiver\",\n    \"shock\",\n    \"shoe\",\n    \"shoot\",\n    \"shop\",\n    \"short\",\n    \"shoulder\",\n    \"shove\",\n    \"shrimp\",\n    \"shrug\",\n    \"shuffle\",\n    \"shy\",\n    \"sibling\",\n    \"sick\",\n    \"side\",\n    \"siege\",\n    \"sight\",\n    \"sign\",\n    \"silent\",\n    \"silk\",\n    \"silly\",\n    \"silver\",\n    \"similar\",\n    \"simple\",\n    \"since\",\n    \"sing\",\n    \"siren\",\n    \"sister\",\n    \"situate\",\n    \"six\",\n    \"size\",\n    \"skate\",\n    \"sketch\",\n    \"ski\",\n    \"skill\",\n    \"skin\",\n    \"skirt\",\n    \"skull\",\n    \"slab\",\n    \"slam\",\n    \"sleep\",\n    \"slender\",\n    \"slice\",\n    \"slide\",\n    \"slight\",\n    \"slim\",\n    \"slogan\",\n    \"slot\",\n    \"slow\",\n    \"slush\",\n    \"small\",\n    \"smart\",\n    \"smile\",\n    \"smoke\",\n    \"smooth\",\n    \"snack\",\n    \"snake\",\n    \"snap\",\n    \"sniff\",\n    \"snow\",\n    \"soap\",\n    \"soccer\",\n    \"social\",\n    \"sock\",\n    \"soda\",\n    \"soft\",\n    \"solar\",\n    \"soldier\",\n    \"solid\",\n    \"solution\",\n    \"solve\",\n    \"someone\",\n    \"song\",\n    \"soon\",\n    \"sorry\",\n    \"sort\",\n    \"soul\",\n    \"sound\",\n    \"soup\",\n    \"source\",\n    \"south\",\n    \"space\",\n    \"spare\",\n    \"spatial\",\n    \"spawn\",\n    \"speak\",\n    \"special\",\n    \"speed\",\n    \"spell\",\n    \"spend\",\n    \"sphere\",\n    \"spice\",\n    \"spider\",\n    \"spike\",\n    \"spin\",\n    \"spirit\",\n    \"split\",\n    \"spoil\",\n    \"sponsor\",\n    \"spoon\",\n    \"sport\",\n    \"spot\",\n    \"spray\",\n    \"spread\",\n    \"spring\",\n    \"spy\",\n    \"square\",\n    \"squeeze\",\n    \"squirrel\",\n    \"stable\",\n    \"stadium\",\n    \"staff\",\n    \"stage\",\n    \"stairs\",\n    \"stamp\",\n    \"stand\",\n    \"start\",\n    \"state\",\n    \"stay\",\n    \"steak\",\n    \"steel\",\n    \"stem\",\n    \"step\",\n    \"stereo\",\n    \"stick\",\n    \"still\",\n    \"sting\",\n    \"stock\",\n    \"stomach\",\n    \"stone\",\n    \"stool\",\n    \"story\",\n    \"stove\",\n    \"strategy\",\n    \"street\",\n    \"strike\",\n    \"strong\",\n    \"struggle\",\n    \"student\",\n    \"stuff\",\n    \"stumble\",\n    \"style\",\n    \"subject\",\n    \"submit\",\n    \"subway\",\n    \"success\",\n    \"such\",\n    \"sudden\",\n    \"suffer\",\n    \"sugar\",\n    \"suggest\",\n    \"suit\",\n    \"summer\",\n    \"sun\",\n    \"sunny\",\n    \"sunset\",\n    \"super\",\n    \"supply\",\n    \"supreme\",\n    \"sure\",\n    \"surface\",\n    \"surge\",\n    \"surprise\",\n    \"surround\",\n    \"survey\",\n    \"suspect\",\n    \"sustain\",\n    \"swallow\",\n    \"swamp\",\n    \"swap\",\n    \"swarm\",\n    \"swear\",\n    \"sweet\",\n    \"swift\",\n    \"swim\",\n    \"swing\",\n    \"switch\",\n    \"sword\",\n    \"symbol\",\n    \"symptom\",\n    \"syrup\",\n    \"system\",\n    \"table\",\n    \"tackle\",\n    \"tag\",\n    \"tail\",\n    \"talent\",\n    \"talk\",\n    \"tank\",\n    \"tape\",\n    \"target\",\n    \"task\",\n    \"taste\",\n    \"tattoo\",\n    \"taxi\",\n    \"teach\",\n    \"team\",\n    \"tell\",\n    \"ten\",\n    \"tenant\",\n    \"tennis\",\n    \"tent\",\n    \"term\",\n    \"test\",\n    \"text\",\n    \"thank\",\n    \"that\",\n    \"theme\",\n    \"then\",\n    \"theory\",\n    \"there\",\n    \"they\",\n    \"thing\",\n    \"this\",\n    \"thought\",\n    \"three\",\n    \"thrive\",\n    \"throw\",\n    \"thumb\",\n    \"thunder\",\n    \"ticket\",\n    \"tide\",\n    \"tiger\",\n    \"tilt\",\n    \"timber\",\n    \"time\",\n    \"tiny\",\n    \"tip\",\n    \"tired\",\n    \"tissue\",\n    \"title\",\n    \"toast\",\n    \"tobacco\",\n    \"today\",\n    \"toddler\",\n    \"toe\",\n    \"together\",\n    \"toilet\",\n    \"token\",\n    \"tomato\",\n    \"tomorrow\",\n    \"tone\",\n    \"tongue\",\n    \"tonight\",\n    \"tool\",\n    \"tooth\",\n    \"top\",\n    \"topic\",\n    \"topple\",\n    \"torch\",\n    \"tornado\",\n    \"tortoise\",\n    \"toss\",\n    \"total\",\n    \"tourist\",\n    \"toward\",\n    \"tower\",\n    \"town\",\n    \"toy\",\n    \"track\",\n    \"trade\",\n    \"traffic\",\n    \"tragic\",\n    \"train\",\n    \"transfer\",\n    \"trap\",\n    \"trash\",\n    \"travel\",\n    \"tray\",\n    \"treat\",\n    \"tree\",\n    \"trend\",\n    \"trial\",\n    \"tribe\",\n    \"trick\",\n    \"trigger\",\n    \"trim\",\n    \"trip\",\n    \"trophy\",\n    \"trouble\",\n    \"truck\",\n    \"true\",\n    \"truly\",\n    \"trumpet\",\n    \"trust\",\n    \"truth\",\n    \"try\",\n    \"tube\",\n    \"tuition\",\n    \"tumble\",\n    \"tuna\",\n    \"tunnel\",\n    \"turkey\",\n    \"turn\",\n    \"turtle\",\n    \"twelve\",\n    \"twenty\",\n    \"twice\",\n    \"twin\",\n    \"twist\",\n    \"two\",\n    \"type\",\n    \"typical\",\n    \"ugly\",\n    \"umbrella\",\n    \"unable\",\n    \"unaware\",\n    \"uncle\",\n    \"uncover\",\n    \"under\",\n    \"undo\",\n    \"unfair\",\n    \"unfold\",\n    \"unhappy\",\n    \"uniform\",\n    \"unique\",\n    \"unit\",\n    \"universe\",\n    \"unknown\",\n    \"unlock\",\n    \"until\",\n    \"unusual\",\n    \"unveil\",\n    \"update\",\n    \"upgrade\",\n    \"uphold\",\n    \"upon\",\n    \"upper\",\n    \"upset\",\n    \"urban\",\n    \"urge\",\n    \"usage\",\n    \"use\",\n    \"used\",\n    \"useful\",\n    \"useless\",\n    \"usual\",\n    \"utility\",\n    \"vacant\",\n    \"vacuum\",\n    \"vague\",\n    \"valid\",\n    \"valley\",\n    \"valve\",\n    \"van\",\n    \"vanish\",\n    \"vapor\",\n    \"various\",\n    \"vast\",\n    \"vault\",\n    \"vehicle\",\n    \"velvet\",\n    \"vendor\",\n    \"venture\",\n    \"venue\",\n    \"verb\",\n    \"verify\",\n    \"version\",\n    \"very\",\n    \"vessel\",\n    \"veteran\",\n    \"viable\",\n    \"vibrant\",\n    \"vicious\",\n    \"victory\",\n    \"video\",\n    \"view\",\n    \"village\",\n    \"vintage\",\n    \"violin\",\n    \"virtual\",\n    \"virus\",\n    \"visa\",\n    \"visit\",\n    \"visual\",\n    \"vital\",\n    \"vivid\",\n    \"vocal\",\n    \"voice\",\n    \"void\",\n    \"volcano\",\n    \"volume\",\n    \"vote\",\n    \"voyage\",\n    \"wage\",\n    \"wagon\",\n    \"wait\",\n    \"walk\",\n    \"wall\",\n    \"walnut\",\n    \"want\",\n    \"warfare\",\n    \"warm\",\n    \"warrior\",\n    \"wash\",\n    \"wasp\",\n    \"waste\",\n    \"water\",\n    \"wave\",\n    \"way\",\n    \"wealth\",\n    \"weapon\",\n    \"wear\",\n    \"weasel\",\n    \"weather\",\n    \"web\",\n    \"wedding\",\n    \"weekend\",\n    \"weird\",\n    \"welcome\",\n    \"west\",\n    \"wet\",\n    \"whale\",\n    \"what\",\n    \"wheat\",\n    \"wheel\",\n    \"when\",\n    \"where\",\n    \"whip\",\n    \"whisper\",\n    \"wide\",\n    \"width\",\n    \"wife\",\n    \"wild\",\n    \"will\",\n    \"win\",\n    \"window\",\n    \"wine\",\n    \"wing\",\n    \"wink\",\n    \"winner\",\n    \"winter\",\n    \"wire\",\n    \"wisdom\",\n    \"wise\",\n    \"wish\",\n    \"witness\",\n    \"wolf\",\n    \"woman\",\n    \"wonder\",\n    \"wood\",\n    \"wool\",\n    \"word\",\n    \"work\",\n    \"world\",\n    \"worry\",\n    \"worth\",\n    \"wrap\",\n    \"wreck\",\n    \"wrestle\",\n    \"wrist\",\n    \"write\",\n    \"wrong\",\n    \"yard\",\n    \"year\",\n    \"yellow\",\n    \"you\",\n    \"young\",\n    \"youth\",\n    \"zebra\",\n    \"zero\",\n    \"zone\",\n    \"zoo\",\n];\nfunction bytesToBitstring(bytes) {\n    return Array.from(bytes)\n        .map((byte) => byte.toString(2).padStart(8, \"0\"))\n        .join(\"\");\n}\nfunction deriveChecksumBits(entropy) {\n    const entropyLengthBits = entropy.length * 8; // \"ENT\" (in bits)\n    const checksumLengthBits = entropyLengthBits / 32; // \"CS\" (in bits)\n    const hash = (0, sha_1.sha256)(entropy);\n    return bytesToBitstring(hash).slice(0, checksumLengthBits);\n}\nfunction bitstringToByte(bin) {\n    return parseInt(bin, 2);\n}\nconst allowedEntropyLengths = [16, 20, 24, 28, 32];\nconst allowedWordLengths = [12, 15, 18, 21, 24];\nfunction entropyToMnemonic(entropy) {\n    if (allowedEntropyLengths.indexOf(entropy.length) === -1) {\n        throw new Error(\"invalid input length\");\n    }\n    const entropyBits = bytesToBitstring(entropy);\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const chunks = bits.match(/(.{11})/g);\n    const words = chunks.map((binary) => {\n        const index = bitstringToByte(binary);\n        return wordlist[index];\n    });\n    return words.join(\" \");\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nconst invalidNumberOfWorks = \"Invalid number of words\";\nconst wordNotInWordlist = \"Found word that is not in the wordlist\";\nconst invalidEntropy = \"Invalid entropy\";\nconst invalidChecksum = \"Invalid mnemonic checksum\";\nfunction normalize(str) {\n    return str.normalize(\"NFKD\");\n}\nfunction mnemonicToEntropy(mnemonic) {\n    const words = normalize(mnemonic).split(\" \");\n    if (!allowedWordLengths.includes(words.length)) {\n        throw new Error(invalidNumberOfWorks);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(wordNotInWordlist);\n        }\n        return index.toString(2).padStart(11, \"0\");\n    })\n        .join(\"\");\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(bitstringToByte);\n    if (entropyBytes.length < 16 || entropyBytes.length > 32 || entropyBytes.length % 4 !== 0) {\n        throw new Error(invalidEntropy);\n    }\n    const entropy = Uint8Array.from(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits) {\n        throw new Error(invalidChecksum);\n    }\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nclass EnglishMnemonic {\n    constructor(mnemonic) {\n        if (!EnglishMnemonic.mnemonicMatcher.test(mnemonic)) {\n            throw new Error(\"Invalid mnemonic format\");\n        }\n        const words = mnemonic.split(\" \");\n        const allowedWordsLengths = [12, 15, 18, 21, 24];\n        if (allowedWordsLengths.indexOf(words.length) === -1) {\n            throw new Error(`Invalid word count in mnemonic (allowed: ${allowedWordsLengths} got: ${words.length})`);\n        }\n        for (const word of words) {\n            if (EnglishMnemonic.wordlist.indexOf(word) === -1) {\n                throw new Error(\"Mnemonic contains invalid word\");\n            }\n        }\n        // Throws with informative error message if mnemonic is not valid\n        mnemonicToEntropy(mnemonic);\n        this.data = mnemonic;\n    }\n    toString() {\n        return this.data;\n    }\n}\nexports.EnglishMnemonic = EnglishMnemonic;\nEnglishMnemonic.wordlist = wordlist;\n// list of space separated lower case words (1 or more)\nEnglishMnemonic.mnemonicMatcher = /^[a-z]+( [a-z]+)*$/;\nclass Bip39 {\n    /**\n     * Encodes raw entropy of length 16, 20, 24, 28 or 32 bytes as an English mnemonic between 12 and 24 words.\n     *\n     * | Entropy            | Words |\n     * |--------------------|-------|\n     * | 128 bit (16 bytes) |    12 |\n     * | 160 bit (20 bytes) |    15 |\n     * | 192 bit (24 bytes) |    18 |\n     * | 224 bit (28 bytes) |    21 |\n     * | 256 bit (32 bytes) |    24 |\n     *\n     *\n     * @see https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki#generating-the-mnemonic\n     * @param entropy The entropy to be encoded. This must be cryptographically secure.\n     */\n    static encode(entropy) {\n        return new EnglishMnemonic(entropyToMnemonic(entropy));\n    }\n    static decode(mnemonic) {\n        return mnemonicToEntropy(mnemonic.toString());\n    }\n    static async mnemonicToSeed(mnemonic, password) {\n        const mnemonicBytes = (0, encoding_1.toUtf8)(normalize(mnemonic.toString()));\n        const salt = \"mnemonic\" + (password ? normalize(password) : \"\");\n        const saltBytes = (0, encoding_1.toUtf8)(salt);\n        return (0, pbkdf2_1.pbkdf2Sha512)(mnemonicBytes, saltBytes, 2048, 64);\n    }\n}\nexports.Bip39 = Bip39;\n//# sourceMappingURL=bip39.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/bip39.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/hmac.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/hmac.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hmac = void 0;\nclass Hmac {\n    constructor(hashFunctionConstructor, originalKey) {\n        // This implementation is based on https://en.wikipedia.org/wiki/HMAC#Implementation\n        // with the addition of incremental hashing support. Thus part of the algorithm\n        // is in the constructor and the rest in digest().\n        const blockSize = new hashFunctionConstructor().blockSize;\n        this.hash = (data) => new hashFunctionConstructor().update(data).digest();\n        let key = originalKey;\n        if (key.length > blockSize) {\n            key = this.hash(key);\n        }\n        if (key.length < blockSize) {\n            const zeroPadding = new Uint8Array(blockSize - key.length);\n            key = new Uint8Array([...key, ...zeroPadding]);\n        }\n        // eslint-disable-next-line no-bitwise\n        this.oKeyPad = key.map((keyByte) => keyByte ^ 0x5c);\n        // eslint-disable-next-line no-bitwise\n        this.iKeyPad = key.map((keyByte) => keyByte ^ 0x36);\n        this.messageHasher = new hashFunctionConstructor();\n        this.blockSize = blockSize;\n        this.update(this.iKeyPad);\n    }\n    update(data) {\n        this.messageHasher.update(data);\n        return this;\n    }\n    digest() {\n        const innerHash = this.messageHasher.digest();\n        return this.hash(new Uint8Array([...this.oKeyPad, ...innerHash]));\n    }\n}\nexports.Hmac = Hmac;\n//# sourceMappingURL=hmac.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvaG1hYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcT25lRHJpdmVcXERlc2t0b3BcXHZhdWx0cXVlc3RcXG5vZGVfbW9kdWxlc1xcQGNvc21qc1xcY3J5cHRvXFxidWlsZFxcaG1hYy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSG1hYyA9IHZvaWQgMDtcbmNsYXNzIEhtYWMge1xuICAgIGNvbnN0cnVjdG9yKGhhc2hGdW5jdGlvbkNvbnN0cnVjdG9yLCBvcmlnaW5hbEtleSkge1xuICAgICAgICAvLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIG9uIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0hNQUMjSW1wbGVtZW50YXRpb25cbiAgICAgICAgLy8gd2l0aCB0aGUgYWRkaXRpb24gb2YgaW5jcmVtZW50YWwgaGFzaGluZyBzdXBwb3J0LiBUaHVzIHBhcnQgb2YgdGhlIGFsZ29yaXRobVxuICAgICAgICAvLyBpcyBpbiB0aGUgY29uc3RydWN0b3IgYW5kIHRoZSByZXN0IGluIGRpZ2VzdCgpLlxuICAgICAgICBjb25zdCBibG9ja1NpemUgPSBuZXcgaGFzaEZ1bmN0aW9uQ29uc3RydWN0b3IoKS5ibG9ja1NpemU7XG4gICAgICAgIHRoaXMuaGFzaCA9IChkYXRhKSA9PiBuZXcgaGFzaEZ1bmN0aW9uQ29uc3RydWN0b3IoKS51cGRhdGUoZGF0YSkuZGlnZXN0KCk7XG4gICAgICAgIGxldCBrZXkgPSBvcmlnaW5hbEtleTtcbiAgICAgICAgaWYgKGtleS5sZW5ndGggPiBibG9ja1NpemUpIHtcbiAgICAgICAgICAgIGtleSA9IHRoaXMuaGFzaChrZXkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChrZXkubGVuZ3RoIDwgYmxvY2tTaXplKSB7XG4gICAgICAgICAgICBjb25zdCB6ZXJvUGFkZGluZyA9IG5ldyBVaW50OEFycmF5KGJsb2NrU2l6ZSAtIGtleS5sZW5ndGgpO1xuICAgICAgICAgICAga2V5ID0gbmV3IFVpbnQ4QXJyYXkoWy4uLmtleSwgLi4uemVyb1BhZGRpbmddKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tYml0d2lzZVxuICAgICAgICB0aGlzLm9LZXlQYWQgPSBrZXkubWFwKChrZXlCeXRlKSA9PiBrZXlCeXRlIF4gMHg1Yyk7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1iaXR3aXNlXG4gICAgICAgIHRoaXMuaUtleVBhZCA9IGtleS5tYXAoKGtleUJ5dGUpID0+IGtleUJ5dGUgXiAweDM2KTtcbiAgICAgICAgdGhpcy5tZXNzYWdlSGFzaGVyID0gbmV3IGhhc2hGdW5jdGlvbkNvbnN0cnVjdG9yKCk7XG4gICAgICAgIHRoaXMuYmxvY2tTaXplID0gYmxvY2tTaXplO1xuICAgICAgICB0aGlzLnVwZGF0ZSh0aGlzLmlLZXlQYWQpO1xuICAgIH1cbiAgICB1cGRhdGUoZGF0YSkge1xuICAgICAgICB0aGlzLm1lc3NhZ2VIYXNoZXIudXBkYXRlKGRhdGEpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGlnZXN0KCkge1xuICAgICAgICBjb25zdCBpbm5lckhhc2ggPSB0aGlzLm1lc3NhZ2VIYXNoZXIuZGlnZXN0KCk7XG4gICAgICAgIHJldHVybiB0aGlzLmhhc2gobmV3IFVpbnQ4QXJyYXkoWy4uLnRoaXMub0tleVBhZCwgLi4uaW5uZXJIYXNoXSkpO1xuICAgIH1cbn1cbmV4cG9ydHMuSG1hYyA9IEhtYWM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1obWFjLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/hmac.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.stringToPath = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = exports.Slip10 = exports.pathToString = exports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = exports.Secp256k1Signature = exports.ExtendedSecp256k1Signature = exports.Secp256k1 = exports.ripemd160 = exports.Ripemd160 = exports.Random = exports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.isArgon2idOptions = exports.Ed25519Keypair = exports.Ed25519 = exports.Argon2id = exports.keccak256 = exports.Keccak256 = exports.Hmac = exports.EnglishMnemonic = exports.Bip39 = void 0;\nvar bip39_1 = __webpack_require__(/*! ./bip39 */ \"(ssr)/./node_modules/@cosmjs/crypto/build/bip39.js\");\nObject.defineProperty(exports, \"Bip39\", ({ enumerable: true, get: function () { return bip39_1.Bip39; } }));\nObject.defineProperty(exports, \"EnglishMnemonic\", ({ enumerable: true, get: function () { return bip39_1.EnglishMnemonic; } }));\nvar hmac_1 = __webpack_require__(/*! ./hmac */ \"(ssr)/./node_modules/@cosmjs/crypto/build/hmac.js\");\nObject.defineProperty(exports, \"Hmac\", ({ enumerable: true, get: function () { return hmac_1.Hmac; } }));\nvar keccak_1 = __webpack_require__(/*! ./keccak */ \"(ssr)/./node_modules/@cosmjs/crypto/build/keccak.js\");\nObject.defineProperty(exports, \"Keccak256\", ({ enumerable: true, get: function () { return keccak_1.Keccak256; } }));\nObject.defineProperty(exports, \"keccak256\", ({ enumerable: true, get: function () { return keccak_1.keccak256; } }));\nvar libsodium_1 = __webpack_require__(/*! ./libsodium */ \"(ssr)/./node_modules/@cosmjs/crypto/build/libsodium.js\");\nObject.defineProperty(exports, \"Argon2id\", ({ enumerable: true, get: function () { return libsodium_1.Argon2id; } }));\nObject.defineProperty(exports, \"Ed25519\", ({ enumerable: true, get: function () { return libsodium_1.Ed25519; } }));\nObject.defineProperty(exports, \"Ed25519Keypair\", ({ enumerable: true, get: function () { return libsodium_1.Ed25519Keypair; } }));\nObject.defineProperty(exports, \"isArgon2idOptions\", ({ enumerable: true, get: function () { return libsodium_1.isArgon2idOptions; } }));\nObject.defineProperty(exports, \"xchacha20NonceLength\", ({ enumerable: true, get: function () { return libsodium_1.xchacha20NonceLength; } }));\nObject.defineProperty(exports, \"Xchacha20poly1305Ietf\", ({ enumerable: true, get: function () { return libsodium_1.Xchacha20poly1305Ietf; } }));\nvar random_1 = __webpack_require__(/*! ./random */ \"(ssr)/./node_modules/@cosmjs/crypto/build/random.js\");\nObject.defineProperty(exports, \"Random\", ({ enumerable: true, get: function () { return random_1.Random; } }));\nvar ripemd_1 = __webpack_require__(/*! ./ripemd */ \"(ssr)/./node_modules/@cosmjs/crypto/build/ripemd.js\");\nObject.defineProperty(exports, \"Ripemd160\", ({ enumerable: true, get: function () { return ripemd_1.Ripemd160; } }));\nObject.defineProperty(exports, \"ripemd160\", ({ enumerable: true, get: function () { return ripemd_1.ripemd160; } }));\nvar secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ \"(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1.js\");\nObject.defineProperty(exports, \"Secp256k1\", ({ enumerable: true, get: function () { return secp256k1_1.Secp256k1; } }));\nvar secp256k1signature_1 = __webpack_require__(/*! ./secp256k1signature */ \"(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1signature.js\");\nObject.defineProperty(exports, \"ExtendedSecp256k1Signature\", ({ enumerable: true, get: function () { return secp256k1signature_1.ExtendedSecp256k1Signature; } }));\nObject.defineProperty(exports, \"Secp256k1Signature\", ({ enumerable: true, get: function () { return secp256k1signature_1.Secp256k1Signature; } }));\nvar sha_1 = __webpack_require__(/*! ./sha */ \"(ssr)/./node_modules/@cosmjs/crypto/build/sha.js\");\nObject.defineProperty(exports, \"Sha256\", ({ enumerable: true, get: function () { return sha_1.Sha256; } }));\nObject.defineProperty(exports, \"sha256\", ({ enumerable: true, get: function () { return sha_1.sha256; } }));\nObject.defineProperty(exports, \"Sha512\", ({ enumerable: true, get: function () { return sha_1.Sha512; } }));\nObject.defineProperty(exports, \"sha512\", ({ enumerable: true, get: function () { return sha_1.sha512; } }));\nvar slip10_1 = __webpack_require__(/*! ./slip10 */ \"(ssr)/./node_modules/@cosmjs/crypto/build/slip10.js\");\nObject.defineProperty(exports, \"pathToString\", ({ enumerable: true, get: function () { return slip10_1.pathToString; } }));\nObject.defineProperty(exports, \"Slip10\", ({ enumerable: true, get: function () { return slip10_1.Slip10; } }));\nObject.defineProperty(exports, \"Slip10Curve\", ({ enumerable: true, get: function () { return slip10_1.Slip10Curve; } }));\nObject.defineProperty(exports, \"slip10CurveFromString\", ({ enumerable: true, get: function () { return slip10_1.slip10CurveFromString; } }));\nObject.defineProperty(exports, \"Slip10RawIndex\", ({ enumerable: true, get: function () { return slip10_1.Slip10RawIndex; } }));\nObject.defineProperty(exports, \"stringToPath\", ({ enumerable: true, get: function () { return slip10_1.stringToPath; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/keccak.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/keccak.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.keccak256 = exports.Keccak256 = void 0;\nconst sha3_1 = __webpack_require__(/*! @noble/hashes/sha3 */ \"(ssr)/./node_modules/@noble/hashes/sha3.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@cosmjs/crypto/build/utils.js\");\nclass Keccak256 {\n    constructor(firstData) {\n        this.blockSize = 512 / 8;\n        this.impl = sha3_1.keccak_256.create();\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update((0, utils_1.toRealUint8Array)(data));\n        return this;\n    }\n    digest() {\n        return this.impl.digest();\n    }\n}\nexports.Keccak256 = Keccak256;\n/** Convenience function equivalent to `new Keccak256(data).digest()` */\nfunction keccak256(data) {\n    return new Keccak256(data).digest();\n}\nexports.keccak256 = keccak256;\n//# sourceMappingURL=keccak.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQva2VjY2FrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLGlCQUFpQjtBQUNyQyxlQUFlLG1CQUFPLENBQUMsc0VBQW9CO0FBQzNDLGdCQUFnQixtQkFBTyxDQUFDLG1FQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxjcnlwdG9cXGJ1aWxkXFxrZWNjYWsuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmtlY2NhazI1NiA9IGV4cG9ydHMuS2VjY2FrMjU2ID0gdm9pZCAwO1xuY29uc3Qgc2hhM18xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhM1wiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNsYXNzIEtlY2NhazI1NiB7XG4gICAgY29uc3RydWN0b3IoZmlyc3REYXRhKSB7XG4gICAgICAgIHRoaXMuYmxvY2tTaXplID0gNTEyIC8gODtcbiAgICAgICAgdGhpcy5pbXBsID0gc2hhM18xLmtlY2Nha18yNTYuY3JlYXRlKCk7XG4gICAgICAgIGlmIChmaXJzdERhdGEpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlKGZpcnN0RGF0YSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdXBkYXRlKGRhdGEpIHtcbiAgICAgICAgdGhpcy5pbXBsLnVwZGF0ZSgoMCwgdXRpbHNfMS50b1JlYWxVaW50OEFycmF5KShkYXRhKSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkaWdlc3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmltcGwuZGlnZXN0KCk7XG4gICAgfVxufVxuZXhwb3J0cy5LZWNjYWsyNTYgPSBLZWNjYWsyNTY7XG4vKiogQ29udmVuaWVuY2UgZnVuY3Rpb24gZXF1aXZhbGVudCB0byBgbmV3IEtlY2NhazI1NihkYXRhKS5kaWdlc3QoKWAgKi9cbmZ1bmN0aW9uIGtlY2NhazI1NihkYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBLZWNjYWsyNTYoZGF0YSkuZGlnZXN0KCk7XG59XG5leHBvcnRzLmtlY2NhazI1NiA9IGtlY2NhazI1Njtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtlY2Nhay5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/keccak.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/libsodium.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/libsodium.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Keep all classes requiring libsodium-js in one file as having multiple\n// requiring of the libsodium-wrappers module currently crashes browsers\n//\n// libsodium.js API: https://gist.github.com/webmaster128/b2dbe6d54d36dd168c9fabf441b9b09c\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.Ed25519 = exports.Ed25519Keypair = exports.Argon2id = exports.isArgon2idOptions = void 0;\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\n// Using crypto_pwhash requires sumo. Once we migrate to a standalone\n// Argon2 implementation, we can use the normal libsodium-wrappers\n// again: https://github.com/cosmos/cosmjs/issues/1031\nconst libsodium_wrappers_sumo_1 = __importDefault(__webpack_require__(/*! libsodium-wrappers-sumo */ \"(ssr)/./node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js\"));\nfunction isArgon2idOptions(thing) {\n    if (!(0, utils_1.isNonNullObject)(thing))\n        return false;\n    if (typeof thing.outputLength !== \"number\")\n        return false;\n    if (typeof thing.opsLimit !== \"number\")\n        return false;\n    if (typeof thing.memLimitKib !== \"number\")\n        return false;\n    return true;\n}\nexports.isArgon2idOptions = isArgon2idOptions;\nclass Argon2id {\n    static async execute(password, salt, options) {\n        await libsodium_wrappers_sumo_1.default.ready;\n        return libsodium_wrappers_sumo_1.default.crypto_pwhash(options.outputLength, password, salt, // libsodium only supports 16 byte salts and will throw when you don't respect that\n        options.opsLimit, options.memLimitKib * 1024, libsodium_wrappers_sumo_1.default.crypto_pwhash_ALG_ARGON2ID13);\n    }\n}\nexports.Argon2id = Argon2id;\nclass Ed25519Keypair {\n    // a libsodium privkey has the format `<ed25519 privkey> + <ed25519 pubkey>`\n    static fromLibsodiumPrivkey(libsodiumPrivkey) {\n        if (libsodiumPrivkey.length !== 64) {\n            throw new Error(`Unexpected key length ${libsodiumPrivkey.length}. Must be 64.`);\n        }\n        return new Ed25519Keypair(libsodiumPrivkey.slice(0, 32), libsodiumPrivkey.slice(32, 64));\n    }\n    constructor(privkey, pubkey) {\n        this.privkey = privkey;\n        this.pubkey = pubkey;\n    }\n    toLibsodiumPrivkey() {\n        return new Uint8Array([...this.privkey, ...this.pubkey]);\n    }\n}\nexports.Ed25519Keypair = Ed25519Keypair;\nclass Ed25519 {\n    /**\n     * Generates a keypair deterministically from a given 32 bytes seed.\n     *\n     * This seed equals the Ed25519 private key.\n     * For implementation details see crypto_sign_seed_keypair in\n     * https://download.libsodium.org/doc/public-key_cryptography/public-key_signatures.html\n     * and diagram on https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n     */\n    static async makeKeypair(seed) {\n        await libsodium_wrappers_sumo_1.default.ready;\n        const keypair = libsodium_wrappers_sumo_1.default.crypto_sign_seed_keypair(seed);\n        return Ed25519Keypair.fromLibsodiumPrivkey(keypair.privateKey);\n    }\n    static async createSignature(message, keyPair) {\n        await libsodium_wrappers_sumo_1.default.ready;\n        return libsodium_wrappers_sumo_1.default.crypto_sign_detached(message, keyPair.toLibsodiumPrivkey());\n    }\n    static async verifySignature(signature, message, pubkey) {\n        await libsodium_wrappers_sumo_1.default.ready;\n        return libsodium_wrappers_sumo_1.default.crypto_sign_verify_detached(signature, message, pubkey);\n    }\n}\nexports.Ed25519 = Ed25519;\n/**\n * Nonce length in bytes for all flavours of XChaCha20.\n *\n * @see https://libsodium.gitbook.io/doc/advanced/stream_ciphers/xchacha20#notes\n */\nexports.xchacha20NonceLength = 24;\nclass Xchacha20poly1305Ietf {\n    static async encrypt(message, key, nonce) {\n        await libsodium_wrappers_sumo_1.default.ready;\n        const additionalData = null;\n        return libsodium_wrappers_sumo_1.default.crypto_aead_xchacha20poly1305_ietf_encrypt(message, additionalData, null, // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)\n        nonce, key);\n    }\n    static async decrypt(ciphertext, key, nonce) {\n        await libsodium_wrappers_sumo_1.default.ready;\n        const additionalData = null;\n        return libsodium_wrappers_sumo_1.default.crypto_aead_xchacha20poly1305_ietf_decrypt(null, // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)\n        ciphertext, additionalData, nonce, key);\n    }\n}\nexports.Xchacha20poly1305Ietf = Xchacha20poly1305Ietf;\n//# sourceMappingURL=libsodium.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvbGlic29kaXVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkIsR0FBRyw0QkFBNEIsR0FBRyxlQUFlLEdBQUcsc0JBQXNCLEdBQUcsZ0JBQWdCLEdBQUcseUJBQXlCO0FBQ3RKLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxtQkFBTyxDQUFDLHFIQUF5QjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELHdCQUF3QjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxjcnlwdG9cXGJ1aWxkXFxsaWJzb2RpdW0uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBLZWVwIGFsbCBjbGFzc2VzIHJlcXVpcmluZyBsaWJzb2RpdW0tanMgaW4gb25lIGZpbGUgYXMgaGF2aW5nIG11bHRpcGxlXG4vLyByZXF1aXJpbmcgb2YgdGhlIGxpYnNvZGl1bS13cmFwcGVycyBtb2R1bGUgY3VycmVudGx5IGNyYXNoZXMgYnJvd3NlcnNcbi8vXG4vLyBsaWJzb2RpdW0uanMgQVBJOiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS93ZWJtYXN0ZXIxMjgvYjJkYmU2ZDU0ZDM2ZGQxNjhjOWZhYmY0NDFiOWIwOWNcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuWGNoYWNoYTIwcG9seTEzMDVJZXRmID0gZXhwb3J0cy54Y2hhY2hhMjBOb25jZUxlbmd0aCA9IGV4cG9ydHMuRWQyNTUxOSA9IGV4cG9ydHMuRWQyNTUxOUtleXBhaXIgPSBleHBvcnRzLkFyZ29uMmlkID0gZXhwb3J0cy5pc0FyZ29uMmlkT3B0aW9ucyA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQGNvc21qcy91dGlsc1wiKTtcbi8vIFVzaW5nIGNyeXB0b19wd2hhc2ggcmVxdWlyZXMgc3Vtby4gT25jZSB3ZSBtaWdyYXRlIHRvIGEgc3RhbmRhbG9uZVxuLy8gQXJnb24yIGltcGxlbWVudGF0aW9uLCB3ZSBjYW4gdXNlIHRoZSBub3JtYWwgbGlic29kaXVtLXdyYXBwZXJzXG4vLyBhZ2FpbjogaHR0cHM6Ly9naXRodWIuY29tL2Nvc21vcy9jb3NtanMvaXNzdWVzLzEwMzFcbmNvbnN0IGxpYnNvZGl1bV93cmFwcGVyc19zdW1vXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImxpYnNvZGl1bS13cmFwcGVycy1zdW1vXCIpKTtcbmZ1bmN0aW9uIGlzQXJnb24yaWRPcHRpb25zKHRoaW5nKSB7XG4gICAgaWYgKCEoMCwgdXRpbHNfMS5pc05vbk51bGxPYmplY3QpKHRoaW5nKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICh0eXBlb2YgdGhpbmcub3V0cHV0TGVuZ3RoICE9PSBcIm51bWJlclwiKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiB0aGluZy5vcHNMaW1pdCAhPT0gXCJudW1iZXJcIilcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICh0eXBlb2YgdGhpbmcubWVtTGltaXRLaWIgIT09IFwibnVtYmVyXCIpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydHMuaXNBcmdvbjJpZE9wdGlvbnMgPSBpc0FyZ29uMmlkT3B0aW9ucztcbmNsYXNzIEFyZ29uMmlkIHtcbiAgICBzdGF0aWMgYXN5bmMgZXhlY3V0ZShwYXNzd29yZCwgc2FsdCwgb3B0aW9ucykge1xuICAgICAgICBhd2FpdCBsaWJzb2RpdW1fd3JhcHBlcnNfc3Vtb18xLmRlZmF1bHQucmVhZHk7XG4gICAgICAgIHJldHVybiBsaWJzb2RpdW1fd3JhcHBlcnNfc3Vtb18xLmRlZmF1bHQuY3J5cHRvX3B3aGFzaChvcHRpb25zLm91dHB1dExlbmd0aCwgcGFzc3dvcmQsIHNhbHQsIC8vIGxpYnNvZGl1bSBvbmx5IHN1cHBvcnRzIDE2IGJ5dGUgc2FsdHMgYW5kIHdpbGwgdGhyb3cgd2hlbiB5b3UgZG9uJ3QgcmVzcGVjdCB0aGF0XG4gICAgICAgIG9wdGlvbnMub3BzTGltaXQsIG9wdGlvbnMubWVtTGltaXRLaWIgKiAxMDI0LCBsaWJzb2RpdW1fd3JhcHBlcnNfc3Vtb18xLmRlZmF1bHQuY3J5cHRvX3B3aGFzaF9BTEdfQVJHT04ySUQxMyk7XG4gICAgfVxufVxuZXhwb3J0cy5BcmdvbjJpZCA9IEFyZ29uMmlkO1xuY2xhc3MgRWQyNTUxOUtleXBhaXIge1xuICAgIC8vIGEgbGlic29kaXVtIHByaXZrZXkgaGFzIHRoZSBmb3JtYXQgYDxlZDI1NTE5IHByaXZrZXk+ICsgPGVkMjU1MTkgcHVia2V5PmBcbiAgICBzdGF0aWMgZnJvbUxpYnNvZGl1bVByaXZrZXkobGlic29kaXVtUHJpdmtleSkge1xuICAgICAgICBpZiAobGlic29kaXVtUHJpdmtleS5sZW5ndGggIT09IDY0KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQga2V5IGxlbmd0aCAke2xpYnNvZGl1bVByaXZrZXkubGVuZ3RofS4gTXVzdCBiZSA2NC5gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEVkMjU1MTlLZXlwYWlyKGxpYnNvZGl1bVByaXZrZXkuc2xpY2UoMCwgMzIpLCBsaWJzb2RpdW1Qcml2a2V5LnNsaWNlKDMyLCA2NCkpO1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcihwcml2a2V5LCBwdWJrZXkpIHtcbiAgICAgICAgdGhpcy5wcml2a2V5ID0gcHJpdmtleTtcbiAgICAgICAgdGhpcy5wdWJrZXkgPSBwdWJrZXk7XG4gICAgfVxuICAgIHRvTGlic29kaXVtUHJpdmtleSgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFsuLi50aGlzLnByaXZrZXksIC4uLnRoaXMucHVia2V5XSk7XG4gICAgfVxufVxuZXhwb3J0cy5FZDI1NTE5S2V5cGFpciA9IEVkMjU1MTlLZXlwYWlyO1xuY2xhc3MgRWQyNTUxOSB7XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGEga2V5cGFpciBkZXRlcm1pbmlzdGljYWxseSBmcm9tIGEgZ2l2ZW4gMzIgYnl0ZXMgc2VlZC5cbiAgICAgKlxuICAgICAqIFRoaXMgc2VlZCBlcXVhbHMgdGhlIEVkMjU1MTkgcHJpdmF0ZSBrZXkuXG4gICAgICogRm9yIGltcGxlbWVudGF0aW9uIGRldGFpbHMgc2VlIGNyeXB0b19zaWduX3NlZWRfa2V5cGFpciBpblxuICAgICAqIGh0dHBzOi8vZG93bmxvYWQubGlic29kaXVtLm9yZy9kb2MvcHVibGljLWtleV9jcnlwdG9ncmFwaHkvcHVibGljLWtleV9zaWduYXR1cmVzLmh0bWxcbiAgICAgKiBhbmQgZGlhZ3JhbSBvbiBodHRwczovL2Jsb2cubW96aWxsYS5vcmcvd2FybmVyLzIwMTEvMTEvMjkvZWQyNTUxOS1rZXlzL1xuICAgICAqL1xuICAgIHN0YXRpYyBhc3luYyBtYWtlS2V5cGFpcihzZWVkKSB7XG4gICAgICAgIGF3YWl0IGxpYnNvZGl1bV93cmFwcGVyc19zdW1vXzEuZGVmYXVsdC5yZWFkeTtcbiAgICAgICAgY29uc3Qga2V5cGFpciA9IGxpYnNvZGl1bV93cmFwcGVyc19zdW1vXzEuZGVmYXVsdC5jcnlwdG9fc2lnbl9zZWVkX2tleXBhaXIoc2VlZCk7XG4gICAgICAgIHJldHVybiBFZDI1NTE5S2V5cGFpci5mcm9tTGlic29kaXVtUHJpdmtleShrZXlwYWlyLnByaXZhdGVLZXkpO1xuICAgIH1cbiAgICBzdGF0aWMgYXN5bmMgY3JlYXRlU2lnbmF0dXJlKG1lc3NhZ2UsIGtleVBhaXIpIHtcbiAgICAgICAgYXdhaXQgbGlic29kaXVtX3dyYXBwZXJzX3N1bW9fMS5kZWZhdWx0LnJlYWR5O1xuICAgICAgICByZXR1cm4gbGlic29kaXVtX3dyYXBwZXJzX3N1bW9fMS5kZWZhdWx0LmNyeXB0b19zaWduX2RldGFjaGVkKG1lc3NhZ2UsIGtleVBhaXIudG9MaWJzb2RpdW1Qcml2a2V5KCkpO1xuICAgIH1cbiAgICBzdGF0aWMgYXN5bmMgdmVyaWZ5U2lnbmF0dXJlKHNpZ25hdHVyZSwgbWVzc2FnZSwgcHVia2V5KSB7XG4gICAgICAgIGF3YWl0IGxpYnNvZGl1bV93cmFwcGVyc19zdW1vXzEuZGVmYXVsdC5yZWFkeTtcbiAgICAgICAgcmV0dXJuIGxpYnNvZGl1bV93cmFwcGVyc19zdW1vXzEuZGVmYXVsdC5jcnlwdG9fc2lnbl92ZXJpZnlfZGV0YWNoZWQoc2lnbmF0dXJlLCBtZXNzYWdlLCBwdWJrZXkpO1xuICAgIH1cbn1cbmV4cG9ydHMuRWQyNTUxOSA9IEVkMjU1MTk7XG4vKipcbiAqIE5vbmNlIGxlbmd0aCBpbiBieXRlcyBmb3IgYWxsIGZsYXZvdXJzIG9mIFhDaGFDaGEyMC5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vbGlic29kaXVtLmdpdGJvb2suaW8vZG9jL2FkdmFuY2VkL3N0cmVhbV9jaXBoZXJzL3hjaGFjaGEyMCNub3Rlc1xuICovXG5leHBvcnRzLnhjaGFjaGEyME5vbmNlTGVuZ3RoID0gMjQ7XG5jbGFzcyBYY2hhY2hhMjBwb2x5MTMwNUlldGYge1xuICAgIHN0YXRpYyBhc3luYyBlbmNyeXB0KG1lc3NhZ2UsIGtleSwgbm9uY2UpIHtcbiAgICAgICAgYXdhaXQgbGlic29kaXVtX3dyYXBwZXJzX3N1bW9fMS5kZWZhdWx0LnJlYWR5O1xuICAgICAgICBjb25zdCBhZGRpdGlvbmFsRGF0YSA9IG51bGw7XG4gICAgICAgIHJldHVybiBsaWJzb2RpdW1fd3JhcHBlcnNfc3Vtb18xLmRlZmF1bHQuY3J5cHRvX2FlYWRfeGNoYWNoYTIwcG9seTEzMDVfaWV0Zl9lbmNyeXB0KG1lc3NhZ2UsIGFkZGl0aW9uYWxEYXRhLCBudWxsLCAvLyBzZWNyZXQgbm9uY2U6IHVudXNlZCBhbmQgc2hvdWxkIGJlIG51bGwgKGh0dHBzOi8vZG93bmxvYWQubGlic29kaXVtLm9yZy9kb2Mvc2VjcmV0LWtleV9jcnlwdG9ncmFwaHkvYWVhZC9jaGFjaGEyMC1wb2x5MTMwNS94Y2hhY2hhMjAtcG9seTEzMDVfY29uc3RydWN0aW9uKVxuICAgICAgICBub25jZSwga2V5KTtcbiAgICB9XG4gICAgc3RhdGljIGFzeW5jIGRlY3J5cHQoY2lwaGVydGV4dCwga2V5LCBub25jZSkge1xuICAgICAgICBhd2FpdCBsaWJzb2RpdW1fd3JhcHBlcnNfc3Vtb18xLmRlZmF1bHQucmVhZHk7XG4gICAgICAgIGNvbnN0IGFkZGl0aW9uYWxEYXRhID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIGxpYnNvZGl1bV93cmFwcGVyc19zdW1vXzEuZGVmYXVsdC5jcnlwdG9fYWVhZF94Y2hhY2hhMjBwb2x5MTMwNV9pZXRmX2RlY3J5cHQobnVsbCwgLy8gc2VjcmV0IG5vbmNlOiB1bnVzZWQgYW5kIHNob3VsZCBiZSBudWxsIChodHRwczovL2Rvd25sb2FkLmxpYnNvZGl1bS5vcmcvZG9jL3NlY3JldC1rZXlfY3J5cHRvZ3JhcGh5L2FlYWQvY2hhY2hhMjAtcG9seTEzMDUveGNoYWNoYTIwLXBvbHkxMzA1X2NvbnN0cnVjdGlvbilcbiAgICAgICAgY2lwaGVydGV4dCwgYWRkaXRpb25hbERhdGEsIG5vbmNlLCBrZXkpO1xuICAgIH1cbn1cbmV4cG9ydHMuWGNoYWNoYTIwcG9seTEzMDVJZXRmID0gWGNoYWNoYTIwcG9seTEzMDVJZXRmO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlic29kaXVtLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/libsodium.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/pbkdf2.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/pbkdf2.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pbkdf2Sha512 = exports.pbkdf2Sha512Noble = exports.pbkdf2Sha512NodeCrypto = exports.pbkdf2Sha512Subtle = exports.getSubtle = exports.getNodeCrypto = void 0;\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst pbkdf2_1 = __webpack_require__(/*! @noble/hashes/pbkdf2 */ \"(ssr)/./node_modules/@noble/hashes/pbkdf2.js\");\nconst sha512_1 = __webpack_require__(/*! @noble/hashes/sha512 */ \"(ssr)/./node_modules/@noble/hashes/sha512.js\");\n/**\n * Returns the Node.js crypto module when available and `undefined`\n * otherwise.\n *\n * Detects an unimplemented fallback module from Webpack 5 and returns\n * `undefined` in that case.\n */\nasync function getNodeCrypto() {\n    try {\n        const nodeCrypto = await Promise.resolve().then(() => __importStar(__webpack_require__(/*! crypto */ \"crypto\")));\n        // We get `Object{default: Object{}}` as a fallback when using\n        // `crypto: false` in Webpack 5, which we interprete as unavailable.\n        if (typeof nodeCrypto === \"object\" && Object.keys(nodeCrypto).length <= 1) {\n            return undefined;\n        }\n        return nodeCrypto;\n    }\n    catch {\n        return undefined;\n    }\n}\nexports.getNodeCrypto = getNodeCrypto;\nasync function getSubtle() {\n    // From Node.js 15 onwards, webcrypto is available in globalThis.\n    // In version 15 and 16 this was stored under the webcrypto key.\n    // With Node.js 17 it was moved to the same locations where browsers\n    // make it available.\n    // Loading `require(\"crypto\")` here seems unnecessary since it only\n    // causes issues with bundlers and does not increase compatibility.\n    // Browsers and Node.js 17+\n    let subtle = globalThis?.crypto?.subtle;\n    // Node.js 15+\n    if (!subtle)\n        subtle = globalThis?.crypto?.webcrypto?.subtle;\n    return subtle;\n}\nexports.getSubtle = getSubtle;\nasync function pbkdf2Sha512Subtle(\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nsubtle, secret, salt, iterations, keylen) {\n    (0, utils_1.assert)(subtle, \"Argument subtle is falsy\");\n    (0, utils_1.assert)(typeof subtle === \"object\", \"Argument subtle is not of type object\");\n    (0, utils_1.assert)(typeof subtle.importKey === \"function\", \"subtle.importKey is not a function\");\n    (0, utils_1.assert)(typeof subtle.deriveBits === \"function\", \"subtle.deriveBits is not a function\");\n    return subtle.importKey(\"raw\", secret, { name: \"PBKDF2\" }, false, [\"deriveBits\"]).then((key) => subtle\n        .deriveBits({\n        name: \"PBKDF2\",\n        salt: salt,\n        iterations: iterations,\n        hash: { name: \"SHA-512\" },\n    }, key, keylen * 8)\n        .then((buffer) => new Uint8Array(buffer)));\n}\nexports.pbkdf2Sha512Subtle = pbkdf2Sha512Subtle;\n/**\n * Implements pbkdf2-sha512 using the Node.js crypro module (`import \"crypto\"`).\n * This does not use subtle from [Crypto](https://developer.mozilla.org/en-US/docs/Web/API/Crypto).\n */\nasync function pbkdf2Sha512NodeCrypto(\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nnodeCrypto, secret, salt, iterations, keylen) {\n    (0, utils_1.assert)(nodeCrypto, \"Argument nodeCrypto is falsy\");\n    (0, utils_1.assert)(typeof nodeCrypto === \"object\", \"Argument nodeCrypto is not of type object\");\n    (0, utils_1.assert)(typeof nodeCrypto.pbkdf2 === \"function\", \"nodeCrypto.pbkdf2 is not a function\");\n    return new Promise((resolve, reject) => {\n        nodeCrypto.pbkdf2(secret, salt, iterations, keylen, \"sha512\", (error, result) => {\n            if (error) {\n                reject(error);\n            }\n            else {\n                resolve(Uint8Array.from(result));\n            }\n        });\n    });\n}\nexports.pbkdf2Sha512NodeCrypto = pbkdf2Sha512NodeCrypto;\nasync function pbkdf2Sha512Noble(secret, salt, iterations, keylen) {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, secret, salt, { c: iterations, dkLen: keylen });\n}\nexports.pbkdf2Sha512Noble = pbkdf2Sha512Noble;\n/**\n * A pbkdf2 implementation for BIP39. This is not exported at package level and thus a private API.\n */\nasync function pbkdf2Sha512(secret, salt, iterations, keylen) {\n    const subtle = await getSubtle();\n    if (subtle) {\n        return pbkdf2Sha512Subtle(subtle, secret, salt, iterations, keylen);\n    }\n    else {\n        const nodeCrypto = await getNodeCrypto();\n        if (nodeCrypto) {\n            return pbkdf2Sha512NodeCrypto(nodeCrypto, secret, salt, iterations, keylen);\n        }\n        else {\n            return pbkdf2Sha512Noble(secret, salt, iterations, keylen);\n        }\n    }\n}\nexports.pbkdf2Sha512 = pbkdf2Sha512;\n//# sourceMappingURL=pbkdf2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/pbkdf2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/random.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/random.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Random = void 0;\nclass Random {\n    /**\n     * Returns `count` cryptographically secure random bytes\n     */\n    static getBytes(count) {\n        try {\n            const globalObject = typeof window === \"object\" ? window : self;\n            const cryptoApi = typeof globalObject.crypto !== \"undefined\" ? globalObject.crypto : globalObject.msCrypto;\n            const out = new Uint8Array(count);\n            cryptoApi.getRandomValues(out);\n            return out;\n        }\n        catch {\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-var-requires\n                const crypto = __webpack_require__(/*! crypto */ \"crypto\");\n                return new Uint8Array([...crypto.randomBytes(count)]);\n            }\n            catch {\n                throw new Error(\"No secure random number generator found\");\n            }\n        }\n    }\n}\nexports.Random = Random;\n//# sourceMappingURL=random.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvcmFuZG9tLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsbUJBQU8sQ0FBQyxzQkFBUTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxjcnlwdG9cXGJ1aWxkXFxyYW5kb20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJhbmRvbSA9IHZvaWQgMDtcbmNsYXNzIFJhbmRvbSB7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBgY291bnRgIGNyeXB0b2dyYXBoaWNhbGx5IHNlY3VyZSByYW5kb20gYnl0ZXNcbiAgICAgKi9cbiAgICBzdGF0aWMgZ2V0Qnl0ZXMoY291bnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGdsb2JhbE9iamVjdCA9IHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIgPyB3aW5kb3cgOiBzZWxmO1xuICAgICAgICAgICAgY29uc3QgY3J5cHRvQXBpID0gdHlwZW9mIGdsb2JhbE9iamVjdC5jcnlwdG8gIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxPYmplY3QuY3J5cHRvIDogZ2xvYmFsT2JqZWN0Lm1zQ3J5cHRvO1xuICAgICAgICAgICAgY29uc3Qgb3V0ID0gbmV3IFVpbnQ4QXJyYXkoY291bnQpO1xuICAgICAgICAgICAgY3J5cHRvQXBpLmdldFJhbmRvbVZhbHVlcyhvdXQpO1xuICAgICAgICAgICAgcmV0dXJuIG91dDtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdmFyLXJlcXVpcmVzXG4gICAgICAgICAgICAgICAgY29uc3QgY3J5cHRvID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoWy4uLmNyeXB0by5yYW5kb21CeXRlcyhjb3VudCldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBzZWN1cmUgcmFuZG9tIG51bWJlciBnZW5lcmF0b3IgZm91bmRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlJhbmRvbSA9IFJhbmRvbTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhbmRvbS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/random.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/ripemd.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/ripemd.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ripemd160 = exports.Ripemd160 = void 0;\nconst ripemd160_1 = __webpack_require__(/*! @noble/hashes/ripemd160 */ \"(ssr)/./node_modules/@noble/hashes/ripemd160.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@cosmjs/crypto/build/utils.js\");\nclass Ripemd160 {\n    constructor(firstData) {\n        this.blockSize = 512 / 8;\n        this.impl = ripemd160_1.ripemd160.create();\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update((0, utils_1.toRealUint8Array)(data));\n        return this;\n    }\n    digest() {\n        return this.impl.digest();\n    }\n}\nexports.Ripemd160 = Ripemd160;\n/** Convenience function equivalent to `new Ripemd160(data).digest()` */\nfunction ripemd160(data) {\n    return new Ripemd160(data).digest();\n}\nexports.ripemd160 = ripemd160;\n//# sourceMappingURL=ripemd.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvcmlwZW1kLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLGlCQUFpQjtBQUNyQyxvQkFBb0IsbUJBQU8sQ0FBQyxnRkFBeUI7QUFDckQsZ0JBQWdCLG1CQUFPLENBQUMsbUVBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5cXE9uZURyaXZlXFxEZXNrdG9wXFx2YXVsdHF1ZXN0XFxub2RlX21vZHVsZXNcXEBjb3NtanNcXGNyeXB0b1xcYnVpbGRcXHJpcGVtZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmlwZW1kMTYwID0gZXhwb3J0cy5SaXBlbWQxNjAgPSB2b2lkIDA7XG5jb25zdCByaXBlbWQxNjBfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3JpcGVtZDE2MFwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNsYXNzIFJpcGVtZDE2MCB7XG4gICAgY29uc3RydWN0b3IoZmlyc3REYXRhKSB7XG4gICAgICAgIHRoaXMuYmxvY2tTaXplID0gNTEyIC8gODtcbiAgICAgICAgdGhpcy5pbXBsID0gcmlwZW1kMTYwXzEucmlwZW1kMTYwLmNyZWF0ZSgpO1xuICAgICAgICBpZiAoZmlyc3REYXRhKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZShmaXJzdERhdGEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZShkYXRhKSB7XG4gICAgICAgIHRoaXMuaW1wbC51cGRhdGUoKDAsIHV0aWxzXzEudG9SZWFsVWludDhBcnJheSkoZGF0YSkpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGlnZXN0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pbXBsLmRpZ2VzdCgpO1xuICAgIH1cbn1cbmV4cG9ydHMuUmlwZW1kMTYwID0gUmlwZW1kMTYwO1xuLyoqIENvbnZlbmllbmNlIGZ1bmN0aW9uIGVxdWl2YWxlbnQgdG8gYG5ldyBSaXBlbWQxNjAoZGF0YSkuZGlnZXN0KClgICovXG5mdW5jdGlvbiByaXBlbWQxNjAoZGF0YSkge1xuICAgIHJldHVybiBuZXcgUmlwZW1kMTYwKGRhdGEpLmRpZ2VzdCgpO1xufVxuZXhwb3J0cy5yaXBlbWQxNjAgPSByaXBlbWQxNjA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yaXBlbWQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/ripemd.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/secp256k1.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Secp256k1 = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\nconst elliptic_1 = __importDefault(__webpack_require__(/*! elliptic */ \"(ssr)/./node_modules/elliptic/lib/elliptic.js\"));\nconst secp256k1signature_1 = __webpack_require__(/*! ./secp256k1signature */ \"(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1signature.js\");\nconst secp256k1 = new elliptic_1.default.ec(\"secp256k1\");\nconst secp256k1N = new bn_js_1.default(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", \"hex\");\nclass Secp256k1 {\n    /**\n     * Takes a 32 byte private key and returns a privkey/pubkey pair.\n     *\n     * The resulting pubkey is uncompressed. For the use in Cosmos it should\n     * be compressed first using `Secp256k1.compressPubkey`.\n     */\n    static async makeKeypair(privkey) {\n        if (privkey.length !== 32) {\n            // is this check missing in secp256k1.validatePrivateKey?\n            // https://github.com/bitjson/bitcoin-ts/issues/4\n            throw new Error(\"input data is not a valid secp256k1 private key\");\n        }\n        const keypair = secp256k1.keyFromPrivate(privkey);\n        if (keypair.validate().result !== true) {\n            throw new Error(\"input data is not a valid secp256k1 private key\");\n        }\n        // range test that is not part of the elliptic implementation\n        const privkeyAsBigInteger = new bn_js_1.default(privkey);\n        if (privkeyAsBigInteger.gte(secp256k1N)) {\n            // not strictly smaller than N\n            throw new Error(\"input data is not a valid secp256k1 private key\");\n        }\n        const out = {\n            privkey: (0, encoding_1.fromHex)(keypair.getPrivate(\"hex\")),\n            // encodes uncompressed as\n            // - 1-byte prefix \"04\"\n            // - 32-byte x coordinate\n            // - 32-byte y coordinate\n            pubkey: Uint8Array.from(keypair.getPublic(\"array\")),\n        };\n        return out;\n    }\n    /**\n     * Creates a signature that is\n     * - deterministic (RFC 6979)\n     * - lowS signature\n     * - DER encoded\n     */\n    static async createSignature(messageHash, privkey) {\n        if (messageHash.length === 0) {\n            throw new Error(\"Message hash must not be empty\");\n        }\n        if (messageHash.length > 32) {\n            throw new Error(\"Message hash length must not exceed 32 bytes\");\n        }\n        const keypair = secp256k1.keyFromPrivate(privkey);\n        // the `canonical` option ensures creation of lowS signature representations\n        const { r, s, recoveryParam } = keypair.sign(messageHash, { canonical: true });\n        if (typeof recoveryParam !== \"number\")\n            throw new Error(\"Recovery param missing\");\n        return new secp256k1signature_1.ExtendedSecp256k1Signature(Uint8Array.from(r.toArray()), Uint8Array.from(s.toArray()), recoveryParam);\n    }\n    static async verifySignature(signature, messageHash, pubkey) {\n        if (messageHash.length === 0) {\n            throw new Error(\"Message hash must not be empty\");\n        }\n        if (messageHash.length > 32) {\n            throw new Error(\"Message hash length must not exceed 32 bytes\");\n        }\n        const keypair = secp256k1.keyFromPublic(pubkey);\n        // From https://github.com/indutny/elliptic:\n        //\n        //     Sign the message's hash (input must be an array, or a hex-string)\n        //\n        //     Signature MUST be either:\n        //     1) DER-encoded signature as hex-string; or\n        //     2) DER-encoded signature as buffer; or\n        //     3) object with two hex-string properties (r and s); or\n        //     4) object with two buffer properties (r and s)\n        //\n        // Uint8Array is not a Buffer, but elliptic seems to be happy with the interface\n        // common to both types. Uint8Array is not an array of ints but the interface is\n        // similar\n        try {\n            return keypair.verify(messageHash, signature.toDer());\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    static recoverPubkey(signature, messageHash) {\n        const signatureForElliptic = { r: (0, encoding_1.toHex)(signature.r()), s: (0, encoding_1.toHex)(signature.s()) };\n        const point = secp256k1.recoverPubKey(messageHash, signatureForElliptic, signature.recovery);\n        const keypair = secp256k1.keyFromPublic(point);\n        return (0, encoding_1.fromHex)(keypair.getPublic(false, \"hex\"));\n    }\n    /**\n     * Takes a compressed or uncompressed pubkey and return a compressed one.\n     *\n     * This function is idempotent.\n     */\n    static compressPubkey(pubkey) {\n        switch (pubkey.length) {\n            case 33:\n                return pubkey;\n            case 65:\n                return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(true, \"array\"));\n            default:\n                throw new Error(\"Invalid pubkey length\");\n        }\n    }\n    /**\n     * Takes a compressed or uncompressed pubkey and returns an uncompressed one.\n     *\n     * This function is idempotent.\n     */\n    static uncompressPubkey(pubkey) {\n        switch (pubkey.length) {\n            case 33:\n                return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(false, \"array\"));\n            case 65:\n                return pubkey;\n            default:\n                throw new Error(\"Invalid pubkey length\");\n        }\n    }\n    static trimRecoveryByte(signature) {\n        switch (signature.length) {\n            case 64:\n                return signature;\n            case 65:\n                return signature.slice(0, 64);\n            default:\n                throw new Error(\"Invalid signature length\");\n        }\n    }\n}\nexports.Secp256k1 = Secp256k1;\n//# sourceMappingURL=secp256k1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1signature.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/secp256k1signature.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ExtendedSecp256k1Signature = exports.Secp256k1Signature = void 0;\nfunction trimLeadingNullBytes(inData) {\n    let numberOfLeadingNullBytes = 0;\n    for (const byte of inData) {\n        if (byte === 0x00) {\n            numberOfLeadingNullBytes++;\n        }\n        else {\n            break;\n        }\n    }\n    return inData.slice(numberOfLeadingNullBytes);\n}\nconst derTagInteger = 0x02;\nclass Secp256k1Signature {\n    /**\n     * Takes the pair of integers (r, s) as 2x32 byte of binary data.\n     *\n     * Note: This is the format Cosmos SDK uses natively.\n     *\n     * @param data a 64 byte value containing integers r and s.\n     */\n    static fromFixedLength(data) {\n        if (data.length !== 64) {\n            throw new Error(`Got invalid data length: ${data.length}. Expected 2x 32 bytes for the pair (r, s)`);\n        }\n        return new Secp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)));\n    }\n    static fromDer(data) {\n        let pos = 0;\n        if (data[pos++] !== 0x30) {\n            throw new Error(\"Prefix 0x30 expected\");\n        }\n        const bodyLength = data[pos++];\n        if (data.length - pos !== bodyLength) {\n            throw new Error(\"Data length mismatch detected\");\n        }\n        // r\n        const rTag = data[pos++];\n        if (rTag !== derTagInteger) {\n            throw new Error(\"INTEGER tag expected\");\n        }\n        const rLength = data[pos++];\n        if (rLength >= 0x80) {\n            throw new Error(\"Decoding length values above 127 not supported\");\n        }\n        const rData = data.slice(pos, pos + rLength);\n        pos += rLength;\n        // s\n        const sTag = data[pos++];\n        if (sTag !== derTagInteger) {\n            throw new Error(\"INTEGER tag expected\");\n        }\n        const sLength = data[pos++];\n        if (sLength >= 0x80) {\n            throw new Error(\"Decoding length values above 127 not supported\");\n        }\n        const sData = data.slice(pos, pos + sLength);\n        pos += sLength;\n        return new Secp256k1Signature(\n        // r/s data can contain leading 0 bytes to express integers being non-negative in DER\n        trimLeadingNullBytes(rData), trimLeadingNullBytes(sData));\n    }\n    constructor(r, s) {\n        if (r.length > 32 || r.length === 0 || r[0] === 0x00) {\n            throw new Error(\"Unsigned integer r must be encoded as unpadded big endian.\");\n        }\n        if (s.length > 32 || s.length === 0 || s[0] === 0x00) {\n            throw new Error(\"Unsigned integer s must be encoded as unpadded big endian.\");\n        }\n        this.data = {\n            r: r,\n            s: s,\n        };\n    }\n    r(length) {\n        if (length === undefined) {\n            return this.data.r;\n        }\n        else {\n            const paddingLength = length - this.data.r.length;\n            if (paddingLength < 0) {\n                throw new Error(\"Length too small to hold parameter r\");\n            }\n            const padding = new Uint8Array(paddingLength);\n            return new Uint8Array([...padding, ...this.data.r]);\n        }\n    }\n    s(length) {\n        if (length === undefined) {\n            return this.data.s;\n        }\n        else {\n            const paddingLength = length - this.data.s.length;\n            if (paddingLength < 0) {\n                throw new Error(\"Length too small to hold parameter s\");\n            }\n            const padding = new Uint8Array(paddingLength);\n            return new Uint8Array([...padding, ...this.data.s]);\n        }\n    }\n    toFixedLength() {\n        return new Uint8Array([...this.r(32), ...this.s(32)]);\n    }\n    toDer() {\n        // DER supports negative integers but our data is unsigned. Thus we need to prepend\n        // a leading 0 byte when the higest bit is set to differentiate nagative values\n        const rEncoded = this.data.r[0] >= 0x80 ? new Uint8Array([0, ...this.data.r]) : this.data.r;\n        const sEncoded = this.data.s[0] >= 0x80 ? new Uint8Array([0, ...this.data.s]) : this.data.s;\n        const rLength = rEncoded.length;\n        const sLength = sEncoded.length;\n        const data = new Uint8Array([derTagInteger, rLength, ...rEncoded, derTagInteger, sLength, ...sEncoded]);\n        return new Uint8Array([0x30, data.length, ...data]);\n    }\n}\nexports.Secp256k1Signature = Secp256k1Signature;\n/**\n * A Secp256k1Signature plus the recovery parameter\n */\nclass ExtendedSecp256k1Signature extends Secp256k1Signature {\n    /**\n     * Decode extended signature from the simple fixed length encoding\n     * described in toFixedLength().\n     */\n    static fromFixedLength(data) {\n        if (data.length !== 65) {\n            throw new Error(`Got invalid data length ${data.length}. Expected 32 + 32 + 1`);\n        }\n        return new ExtendedSecp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)), data[64]);\n    }\n    constructor(r, s, recovery) {\n        super(r, s);\n        if (!Number.isInteger(recovery)) {\n            throw new Error(\"The recovery parameter must be an integer.\");\n        }\n        if (recovery < 0 || recovery > 4) {\n            throw new Error(\"The recovery parameter must be one of 0, 1, 2, 3.\");\n        }\n        this.recovery = recovery;\n    }\n    /**\n     * A simple custom encoding that encodes the extended signature as\n     * r (32 bytes) | s (32 bytes) | recovery param (1 byte)\n     * where | denotes concatenation of bonary data.\n     */\n    toFixedLength() {\n        return new Uint8Array([...this.r(32), ...this.s(32), this.recovery]);\n    }\n}\nexports.ExtendedSecp256k1Signature = ExtendedSecp256k1Signature;\n//# sourceMappingURL=secp256k1signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1signature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/sha.js":
/*!**************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/sha.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst sha512_1 = __webpack_require__(/*! @noble/hashes/sha512 */ \"(ssr)/./node_modules/@noble/hashes/sha512.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@cosmjs/crypto/build/utils.js\");\nclass Sha256 {\n    constructor(firstData) {\n        this.blockSize = 512 / 8;\n        this.impl = sha256_1.sha256.create();\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update((0, utils_1.toRealUint8Array)(data));\n        return this;\n    }\n    digest() {\n        return this.impl.digest();\n    }\n}\nexports.Sha256 = Sha256;\n/** Convenience function equivalent to `new Sha256(data).digest()` */\nfunction sha256(data) {\n    return new Sha256(data).digest();\n}\nexports.sha256 = sha256;\nclass Sha512 {\n    constructor(firstData) {\n        this.blockSize = 1024 / 8;\n        this.impl = sha512_1.sha512.create();\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update((0, utils_1.toRealUint8Array)(data));\n        return this;\n    }\n    digest() {\n        return this.impl.digest();\n    }\n}\nexports.Sha512 = Sha512;\n/** Convenience function equivalent to `new Sha512(data).digest()` */\nfunction sha512(data) {\n    return new Sha512(data).digest();\n}\nexports.sha512 = sha512;\n//# sourceMappingURL=sha.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvc2hhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxjQUFjLEdBQUcsY0FBYyxHQUFHLGNBQWM7QUFDakUsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLGlCQUFpQixtQkFBTyxDQUFDLDBFQUFzQjtBQUMvQyxnQkFBZ0IsbUJBQU8sQ0FBQyxtRUFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcT25lRHJpdmVcXERlc2t0b3BcXHZhdWx0cXVlc3RcXG5vZGVfbW9kdWxlc1xcQGNvc21qc1xcY3J5cHRvXFxidWlsZFxcc2hhLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zaGE1MTIgPSBleHBvcnRzLlNoYTUxMiA9IGV4cG9ydHMuc2hhMjU2ID0gZXhwb3J0cy5TaGEyNTYgPSB2b2lkIDA7XG5jb25zdCBzaGEyNTZfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3NoYTI1NlwiKTtcbmNvbnN0IHNoYTUxMl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhNTEyXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY2xhc3MgU2hhMjU2IHtcbiAgICBjb25zdHJ1Y3RvcihmaXJzdERhdGEpIHtcbiAgICAgICAgdGhpcy5ibG9ja1NpemUgPSA1MTIgLyA4O1xuICAgICAgICB0aGlzLmltcGwgPSBzaGEyNTZfMS5zaGEyNTYuY3JlYXRlKCk7XG4gICAgICAgIGlmIChmaXJzdERhdGEpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlKGZpcnN0RGF0YSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdXBkYXRlKGRhdGEpIHtcbiAgICAgICAgdGhpcy5pbXBsLnVwZGF0ZSgoMCwgdXRpbHNfMS50b1JlYWxVaW50OEFycmF5KShkYXRhKSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkaWdlc3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmltcGwuZGlnZXN0KCk7XG4gICAgfVxufVxuZXhwb3J0cy5TaGEyNTYgPSBTaGEyNTY7XG4vKiogQ29udmVuaWVuY2UgZnVuY3Rpb24gZXF1aXZhbGVudCB0byBgbmV3IFNoYTI1NihkYXRhKS5kaWdlc3QoKWAgKi9cbmZ1bmN0aW9uIHNoYTI1NihkYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBTaGEyNTYoZGF0YSkuZGlnZXN0KCk7XG59XG5leHBvcnRzLnNoYTI1NiA9IHNoYTI1NjtcbmNsYXNzIFNoYTUxMiB7XG4gICAgY29uc3RydWN0b3IoZmlyc3REYXRhKSB7XG4gICAgICAgIHRoaXMuYmxvY2tTaXplID0gMTAyNCAvIDg7XG4gICAgICAgIHRoaXMuaW1wbCA9IHNoYTUxMl8xLnNoYTUxMi5jcmVhdGUoKTtcbiAgICAgICAgaWYgKGZpcnN0RGF0YSkge1xuICAgICAgICAgICAgdGhpcy51cGRhdGUoZmlyc3REYXRhKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1cGRhdGUoZGF0YSkge1xuICAgICAgICB0aGlzLmltcGwudXBkYXRlKCgwLCB1dGlsc18xLnRvUmVhbFVpbnQ4QXJyYXkpKGRhdGEpKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpZ2VzdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW1wbC5kaWdlc3QoKTtcbiAgICB9XG59XG5leHBvcnRzLlNoYTUxMiA9IFNoYTUxMjtcbi8qKiBDb252ZW5pZW5jZSBmdW5jdGlvbiBlcXVpdmFsZW50IHRvIGBuZXcgU2hhNTEyKGRhdGEpLmRpZ2VzdCgpYCAqL1xuZnVuY3Rpb24gc2hhNTEyKGRhdGEpIHtcbiAgICByZXR1cm4gbmV3IFNoYTUxMihkYXRhKS5kaWdlc3QoKTtcbn1cbmV4cG9ydHMuc2hhNTEyID0gc2hhNTEyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/sha.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/slip10.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/slip10.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.stringToPath = exports.pathToString = exports.Slip10 = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\nconst elliptic_1 = __importDefault(__webpack_require__(/*! elliptic */ \"(ssr)/./node_modules/elliptic/lib/elliptic.js\"));\nconst hmac_1 = __webpack_require__(/*! ./hmac */ \"(ssr)/./node_modules/@cosmjs/crypto/build/hmac.js\");\nconst sha_1 = __webpack_require__(/*! ./sha */ \"(ssr)/./node_modules/@cosmjs/crypto/build/sha.js\");\n/**\n * Raw values must match the curve string in SLIP-0010 master key generation\n *\n * @see https://github.com/satoshilabs/slips/blob/master/slip-0010.md#master-key-generation\n */\nvar Slip10Curve;\n(function (Slip10Curve) {\n    Slip10Curve[\"Secp256k1\"] = \"Bitcoin seed\";\n    Slip10Curve[\"Ed25519\"] = \"ed25519 seed\";\n})(Slip10Curve = exports.Slip10Curve || (exports.Slip10Curve = {}));\n/**\n * Reverse mapping of Slip10Curve\n */\nfunction slip10CurveFromString(curveString) {\n    switch (curveString) {\n        case Slip10Curve.Ed25519:\n            return Slip10Curve.Ed25519;\n        case Slip10Curve.Secp256k1:\n            return Slip10Curve.Secp256k1;\n        default:\n            throw new Error(`Unknown curve string: '${curveString}'`);\n    }\n}\nexports.slip10CurveFromString = slip10CurveFromString;\nclass Slip10RawIndex extends math_1.Uint32 {\n    static hardened(hardenedIndex) {\n        return new Slip10RawIndex(hardenedIndex + 2 ** 31);\n    }\n    static normal(normalIndex) {\n        return new Slip10RawIndex(normalIndex);\n    }\n    isHardened() {\n        return this.data >= 2 ** 31;\n    }\n}\nexports.Slip10RawIndex = Slip10RawIndex;\nconst secp256k1 = new elliptic_1.default.ec(\"secp256k1\");\n// Universal private key derivation accoring to\n// https://github.com/satoshilabs/slips/blob/master/slip-0010.md\nclass Slip10 {\n    static derivePath(curve, seed, path) {\n        let result = this.master(curve, seed);\n        for (const rawIndex of path) {\n            result = this.child(curve, result.privkey, result.chainCode, rawIndex);\n        }\n        return result;\n    }\n    static master(curve, seed) {\n        const i = new hmac_1.Hmac(sha_1.Sha512, (0, encoding_1.toAscii)(curve)).update(seed).digest();\n        const il = i.slice(0, 32);\n        const ir = i.slice(32, 64);\n        if (curve !== Slip10Curve.Ed25519 && (this.isZero(il) || this.isGteN(curve, il))) {\n            return this.master(curve, i);\n        }\n        return {\n            chainCode: ir,\n            privkey: il,\n        };\n    }\n    static child(curve, parentPrivkey, parentChainCode, rawIndex) {\n        let i;\n        if (rawIndex.isHardened()) {\n            const payload = new Uint8Array([0x00, ...parentPrivkey, ...rawIndex.toBytesBigEndian()]);\n            i = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(payload).digest();\n        }\n        else {\n            if (curve === Slip10Curve.Ed25519) {\n                throw new Error(\"Normal keys are not allowed with ed25519\");\n            }\n            else {\n                // Step 1 of https://github.com/satoshilabs/slips/blob/master/slip-0010.md#private-parent-key--private-child-key\n                // Calculate I = HMAC-SHA512(Key = c_par, Data = ser_P(point(k_par)) || ser_32(i)).\n                // where the functions point() and ser_p() are defined in BIP-0032\n                const data = new Uint8Array([\n                    ...Slip10.serializedPoint(curve, new bn_js_1.default(parentPrivkey)),\n                    ...rawIndex.toBytesBigEndian(),\n                ]);\n                i = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(data).digest();\n            }\n        }\n        return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i);\n    }\n    /**\n     * Implementation of ser_P(point(k_par)) from BIP-0032\n     *\n     * @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n     */\n    static serializedPoint(curve, p) {\n        switch (curve) {\n            case Slip10Curve.Secp256k1:\n                return (0, encoding_1.fromHex)(secp256k1.g.mul(p).encodeCompressed(\"hex\"));\n            default:\n                throw new Error(\"curve not supported\");\n        }\n    }\n    static childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i) {\n        // step 2 (of the Private parent key → private child key algorithm)\n        const il = i.slice(0, 32);\n        const ir = i.slice(32, 64);\n        // step 3\n        const returnChainCode = ir;\n        // step 4\n        if (curve === Slip10Curve.Ed25519) {\n            return {\n                chainCode: returnChainCode,\n                privkey: il,\n            };\n        }\n        // step 5\n        const n = this.n(curve);\n        const returnChildKeyAsNumber = new bn_js_1.default(il).add(new bn_js_1.default(parentPrivkey)).mod(n);\n        const returnChildKey = Uint8Array.from(returnChildKeyAsNumber.toArray(\"be\", 32));\n        // step 6\n        if (this.isGteN(curve, il) || this.isZero(returnChildKey)) {\n            const newI = new hmac_1.Hmac(sha_1.Sha512, parentChainCode)\n                .update(new Uint8Array([0x01, ...ir, ...rawIndex.toBytesBigEndian()]))\n                .digest();\n            return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, newI);\n        }\n        // step 7\n        return {\n            chainCode: returnChainCode,\n            privkey: returnChildKey,\n        };\n    }\n    static isZero(privkey) {\n        return privkey.every((byte) => byte === 0);\n    }\n    static isGteN(curve, privkey) {\n        const keyAsNumber = new bn_js_1.default(privkey);\n        return keyAsNumber.gte(this.n(curve));\n    }\n    static n(curve) {\n        switch (curve) {\n            case Slip10Curve.Secp256k1:\n                return new bn_js_1.default(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", 16);\n            default:\n                throw new Error(\"curve not supported\");\n        }\n    }\n}\nexports.Slip10 = Slip10;\nfunction pathToString(path) {\n    return path.reduce((current, component) => {\n        const componentString = component.isHardened()\n            ? `${component.toNumber() - 2 ** 31}'`\n            : component.toString();\n        return current + \"/\" + componentString;\n    }, \"m\");\n}\nexports.pathToString = pathToString;\nfunction stringToPath(input) {\n    if (!input.startsWith(\"m\"))\n        throw new Error(\"Path string must start with 'm'\");\n    let rest = input.slice(1);\n    const out = new Array();\n    while (rest) {\n        const match = rest.match(/^\\/([0-9]+)('?)/);\n        if (!match)\n            throw new Error(\"Syntax error while reading path component\");\n        const [fullMatch, numberString, apostrophe] = match;\n        const value = math_1.Uint53.fromString(numberString).toNumber();\n        if (value >= 2 ** 31)\n            throw new Error(\"Component value too high. Must not exceed 2**31-1.\");\n        if (apostrophe)\n            out.push(Slip10RawIndex.hardened(value));\n        else\n            out.push(Slip10RawIndex.normal(value));\n        rest = rest.slice(fullMatch.length);\n    }\n    return out;\n}\nexports.stringToPath = stringToPath;\n//# sourceMappingURL=slip10.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/slip10.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toRealUint8Array = void 0;\n// See https://github.com/paulmillr/noble-hashes/issues/25 for why this is needed\nfunction toRealUint8Array(data) {\n    if (data instanceof Uint8Array)\n        return data;\n    else\n        return Uint8Array.from(data);\n}\nexports.toRealUint8Array = toRealUint8Array;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxjcnlwdG9cXGJ1aWxkXFx1dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9SZWFsVWludDhBcnJheSA9IHZvaWQgMDtcbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vcGF1bG1pbGxyL25vYmxlLWhhc2hlcy9pc3N1ZXMvMjUgZm9yIHdoeSB0aGlzIGlzIG5lZWRlZFxuZnVuY3Rpb24gdG9SZWFsVWludDhBcnJheShkYXRhKSB7XG4gICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBVaW50OEFycmF5KVxuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICBlbHNlXG4gICAgICAgIHJldHVybiBVaW50OEFycmF5LmZyb20oZGF0YSk7XG59XG5leHBvcnRzLnRvUmVhbFVpbnQ4QXJyYXkgPSB0b1JlYWxVaW50OEFycmF5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/ascii.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/ascii.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromAscii = exports.toAscii = void 0;\nfunction toAscii(input) {\n    const toNums = (str) => str.split(\"\").map((x) => {\n        const charCode = x.charCodeAt(0);\n        // 0x00–0x1F control characters\n        // 0x20–0x7E printable characters\n        // 0x7F delete character\n        // 0x80–0xFF out of 7 bit ascii range\n        if (charCode < 0x20 || charCode > 0x7e) {\n            throw new Error(\"Cannot encode character that is out of printable ASCII range: \" + charCode);\n        }\n        return charCode;\n    });\n    return Uint8Array.from(toNums(input));\n}\nexports.toAscii = toAscii;\nfunction fromAscii(data) {\n    const fromNums = (listOfNumbers) => listOfNumbers.map((x) => {\n        // 0x00–0x1F control characters\n        // 0x20–0x7E printable characters\n        // 0x7F delete character\n        // 0x80–0xFF out of 7 bit ascii range\n        if (x < 0x20 || x > 0x7e) {\n            throw new Error(\"Cannot decode character that is out of printable ASCII range: \" + x);\n        }\n        return String.fromCharCode(x);\n    });\n    return fromNums(Array.from(data)).join(\"\");\n}\nexports.fromAscii = fromAscii;\n//# sourceMappingURL=ascii.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9hc2NpaS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxlQUFlO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxlbmNvZGluZ1xcYnVpbGRcXGFzY2lpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mcm9tQXNjaWkgPSBleHBvcnRzLnRvQXNjaWkgPSB2b2lkIDA7XG5mdW5jdGlvbiB0b0FzY2lpKGlucHV0KSB7XG4gICAgY29uc3QgdG9OdW1zID0gKHN0cikgPT4gc3RyLnNwbGl0KFwiXCIpLm1hcCgoeCkgPT4ge1xuICAgICAgICBjb25zdCBjaGFyQ29kZSA9IHguY2hhckNvZGVBdCgwKTtcbiAgICAgICAgLy8gMHgwMOKAkzB4MUYgY29udHJvbCBjaGFyYWN0ZXJzXG4gICAgICAgIC8vIDB4MjDigJMweDdFIHByaW50YWJsZSBjaGFyYWN0ZXJzXG4gICAgICAgIC8vIDB4N0YgZGVsZXRlIGNoYXJhY3RlclxuICAgICAgICAvLyAweDgw4oCTMHhGRiBvdXQgb2YgNyBiaXQgYXNjaWkgcmFuZ2VcbiAgICAgICAgaWYgKGNoYXJDb2RlIDwgMHgyMCB8fCBjaGFyQ29kZSA+IDB4N2UpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBlbmNvZGUgY2hhcmFjdGVyIHRoYXQgaXMgb3V0IG9mIHByaW50YWJsZSBBU0NJSSByYW5nZTogXCIgKyBjaGFyQ29kZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNoYXJDb2RlO1xuICAgIH0pO1xuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20odG9OdW1zKGlucHV0KSk7XG59XG5leHBvcnRzLnRvQXNjaWkgPSB0b0FzY2lpO1xuZnVuY3Rpb24gZnJvbUFzY2lpKGRhdGEpIHtcbiAgICBjb25zdCBmcm9tTnVtcyA9IChsaXN0T2ZOdW1iZXJzKSA9PiBsaXN0T2ZOdW1iZXJzLm1hcCgoeCkgPT4ge1xuICAgICAgICAvLyAweDAw4oCTMHgxRiBjb250cm9sIGNoYXJhY3RlcnNcbiAgICAgICAgLy8gMHgyMOKAkzB4N0UgcHJpbnRhYmxlIGNoYXJhY3RlcnNcbiAgICAgICAgLy8gMHg3RiBkZWxldGUgY2hhcmFjdGVyXG4gICAgICAgIC8vIDB4ODDigJMweEZGIG91dCBvZiA3IGJpdCBhc2NpaSByYW5nZVxuICAgICAgICBpZiAoeCA8IDB4MjAgfHwgeCA+IDB4N2UpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBkZWNvZGUgY2hhcmFjdGVyIHRoYXQgaXMgb3V0IG9mIHByaW50YWJsZSBBU0NJSSByYW5nZTogXCIgKyB4KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZSh4KTtcbiAgICB9KTtcbiAgICByZXR1cm4gZnJvbU51bXMoQXJyYXkuZnJvbShkYXRhKSkuam9pbihcIlwiKTtcbn1cbmV4cG9ydHMuZnJvbUFzY2lpID0gZnJvbUFzY2lpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXNjaWkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/ascii.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/base64.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/base64.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromBase64 = exports.toBase64 = void 0;\nconst base64js = __importStar(__webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\"));\nfunction toBase64(data) {\n    return base64js.fromByteArray(data);\n}\nexports.toBase64 = toBase64;\nfunction fromBase64(base64String) {\n    if (!base64String.match(/^[a-zA-Z0-9+/]*={0,2}$/)) {\n        throw new Error(\"Invalid base64 string format\");\n    }\n    return base64js.toByteArray(base64String);\n}\nexports.fromBase64 = fromBase64;\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9iYXNlNjQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQixHQUFHLGdCQUFnQjtBQUNyQyw4QkFBOEIsbUJBQU8sQ0FBQywwREFBVztBQUNqRDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQSw4Q0FBOEMsSUFBSTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcT25lRHJpdmVcXERlc2t0b3BcXHZhdWx0cXVlc3RcXG5vZGVfbW9kdWxlc1xcQGNvc21qc1xcZW5jb2RpbmdcXGJ1aWxkXFxiYXNlNjQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZnJvbUJhc2U2NCA9IGV4cG9ydHMudG9CYXNlNjQgPSB2b2lkIDA7XG5jb25zdCBiYXNlNjRqcyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiYmFzZTY0LWpzXCIpKTtcbmZ1bmN0aW9uIHRvQmFzZTY0KGRhdGEpIHtcbiAgICByZXR1cm4gYmFzZTY0anMuZnJvbUJ5dGVBcnJheShkYXRhKTtcbn1cbmV4cG9ydHMudG9CYXNlNjQgPSB0b0Jhc2U2NDtcbmZ1bmN0aW9uIGZyb21CYXNlNjQoYmFzZTY0U3RyaW5nKSB7XG4gICAgaWYgKCFiYXNlNjRTdHJpbmcubWF0Y2goL15bYS16QS1aMC05Ky9dKj17MCwyfSQvKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGJhc2U2NCBzdHJpbmcgZm9ybWF0XCIpO1xuICAgIH1cbiAgICByZXR1cm4gYmFzZTY0anMudG9CeXRlQXJyYXkoYmFzZTY0U3RyaW5nKTtcbn1cbmV4cG9ydHMuZnJvbUJhc2U2NCA9IGZyb21CYXNlNjQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNjQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/bech32.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/bech32.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.normalizeBech32 = exports.fromBech32 = exports.toBech32 = void 0;\nconst bech32 = __importStar(__webpack_require__(/*! bech32 */ \"(ssr)/./node_modules/bech32/index.js\"));\nfunction toBech32(prefix, data, limit) {\n    const address = bech32.encode(prefix, bech32.toWords(data), limit);\n    return address;\n}\nexports.toBech32 = toBech32;\nfunction fromBech32(address, limit = Infinity) {\n    const decodedAddress = bech32.decode(address, limit);\n    return {\n        prefix: decodedAddress.prefix,\n        data: new Uint8Array(bech32.fromWords(decodedAddress.words)),\n    };\n}\nexports.fromBech32 = fromBech32;\n/**\n * Takes a bech32 address and returns a normalized (i.e. lower case) representation of it.\n *\n * The input is validated along the way, which makes this significantly safer than\n * using `address.toLowerCase()`.\n */\nfunction normalizeBech32(address) {\n    const { prefix, data } = fromBech32(address);\n    return toBech32(prefix, data);\n}\nexports.normalizeBech32 = normalizeBech32;\n//# sourceMappingURL=bech32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9iZWNoMzIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLGtCQUFrQixHQUFHLGdCQUFnQjtBQUMvRCw0QkFBNEIsbUJBQU8sQ0FBQyxvREFBUTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZUFBZTtBQUMzQjtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxlbmNvZGluZ1xcYnVpbGRcXGJlY2gzMi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ub3JtYWxpemVCZWNoMzIgPSBleHBvcnRzLmZyb21CZWNoMzIgPSBleHBvcnRzLnRvQmVjaDMyID0gdm9pZCAwO1xuY29uc3QgYmVjaDMyID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJiZWNoMzJcIikpO1xuZnVuY3Rpb24gdG9CZWNoMzIocHJlZml4LCBkYXRhLCBsaW1pdCkge1xuICAgIGNvbnN0IGFkZHJlc3MgPSBiZWNoMzIuZW5jb2RlKHByZWZpeCwgYmVjaDMyLnRvV29yZHMoZGF0YSksIGxpbWl0KTtcbiAgICByZXR1cm4gYWRkcmVzcztcbn1cbmV4cG9ydHMudG9CZWNoMzIgPSB0b0JlY2gzMjtcbmZ1bmN0aW9uIGZyb21CZWNoMzIoYWRkcmVzcywgbGltaXQgPSBJbmZpbml0eSkge1xuICAgIGNvbnN0IGRlY29kZWRBZGRyZXNzID0gYmVjaDMyLmRlY29kZShhZGRyZXNzLCBsaW1pdCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJlZml4OiBkZWNvZGVkQWRkcmVzcy5wcmVmaXgsXG4gICAgICAgIGRhdGE6IG5ldyBVaW50OEFycmF5KGJlY2gzMi5mcm9tV29yZHMoZGVjb2RlZEFkZHJlc3Mud29yZHMpKSxcbiAgICB9O1xufVxuZXhwb3J0cy5mcm9tQmVjaDMyID0gZnJvbUJlY2gzMjtcbi8qKlxuICogVGFrZXMgYSBiZWNoMzIgYWRkcmVzcyBhbmQgcmV0dXJucyBhIG5vcm1hbGl6ZWQgKGkuZS4gbG93ZXIgY2FzZSkgcmVwcmVzZW50YXRpb24gb2YgaXQuXG4gKlxuICogVGhlIGlucHV0IGlzIHZhbGlkYXRlZCBhbG9uZyB0aGUgd2F5LCB3aGljaCBtYWtlcyB0aGlzIHNpZ25pZmljYW50bHkgc2FmZXIgdGhhblxuICogdXNpbmcgYGFkZHJlc3MudG9Mb3dlckNhc2UoKWAuXG4gKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZUJlY2gzMihhZGRyZXNzKSB7XG4gICAgY29uc3QgeyBwcmVmaXgsIGRhdGEgfSA9IGZyb21CZWNoMzIoYWRkcmVzcyk7XG4gICAgcmV0dXJuIHRvQmVjaDMyKHByZWZpeCwgZGF0YSk7XG59XG5leHBvcnRzLm5vcm1hbGl6ZUJlY2gzMiA9IG5vcm1hbGl6ZUJlY2gzMjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJlY2gzMi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/bech32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/hex.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/hex.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromHex = exports.toHex = void 0;\nfunction toHex(data) {\n    let out = \"\";\n    for (const byte of data) {\n        out += (\"0\" + byte.toString(16)).slice(-2);\n    }\n    return out;\n}\nexports.toHex = toHex;\nfunction fromHex(hexstring) {\n    if (hexstring.length % 2 !== 0) {\n        throw new Error(\"hex string length must be a multiple of 2\");\n    }\n    const out = new Uint8Array(hexstring.length / 2);\n    for (let i = 0; i < out.length; i++) {\n        const j = 2 * i;\n        const hexByteAsString = hexstring.slice(j, j + 2);\n        if (!hexByteAsString.match(/[0-9a-f]{2}/i)) {\n            throw new Error(\"hex string contains invalid characters\");\n        }\n        out[i] = parseInt(hexByteAsString, 16);\n    }\n    return out;\n}\nexports.fromHex = fromHex;\n//# sourceMappingURL=hex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9oZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZSxHQUFHLGFBQWE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBLDZDQUE2QyxFQUFFO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcT25lRHJpdmVcXERlc2t0b3BcXHZhdWx0cXVlc3RcXG5vZGVfbW9kdWxlc1xcQGNvc21qc1xcZW5jb2RpbmdcXGJ1aWxkXFxoZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZyb21IZXggPSBleHBvcnRzLnRvSGV4ID0gdm9pZCAwO1xuZnVuY3Rpb24gdG9IZXgoZGF0YSkge1xuICAgIGxldCBvdXQgPSBcIlwiO1xuICAgIGZvciAoY29uc3QgYnl0ZSBvZiBkYXRhKSB7XG4gICAgICAgIG91dCArPSAoXCIwXCIgKyBieXRlLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTIpO1xuICAgIH1cbiAgICByZXR1cm4gb3V0O1xufVxuZXhwb3J0cy50b0hleCA9IHRvSGV4O1xuZnVuY3Rpb24gZnJvbUhleChoZXhzdHJpbmcpIHtcbiAgICBpZiAoaGV4c3RyaW5nLmxlbmd0aCAlIDIgIT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaGV4IHN0cmluZyBsZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDJcIik7XG4gICAgfVxuICAgIGNvbnN0IG91dCA9IG5ldyBVaW50OEFycmF5KGhleHN0cmluZy5sZW5ndGggLyAyKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG91dC5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBqID0gMiAqIGk7XG4gICAgICAgIGNvbnN0IGhleEJ5dGVBc1N0cmluZyA9IGhleHN0cmluZy5zbGljZShqLCBqICsgMik7XG4gICAgICAgIGlmICghaGV4Qnl0ZUFzU3RyaW5nLm1hdGNoKC9bMC05YS1mXXsyfS9pKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaGV4IHN0cmluZyBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnNcIik7XG4gICAgICAgIH1cbiAgICAgICAgb3V0W2ldID0gcGFyc2VJbnQoaGV4Qnl0ZUFzU3RyaW5nLCAxNik7XG4gICAgfVxuICAgIHJldHVybiBvdXQ7XG59XG5leHBvcnRzLmZyb21IZXggPSBmcm9tSGV4O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/hex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toUtf8 = exports.fromUtf8 = exports.toRfc3339 = exports.fromRfc3339 = exports.toHex = exports.fromHex = exports.toBech32 = exports.normalizeBech32 = exports.fromBech32 = exports.toBase64 = exports.fromBase64 = exports.toAscii = exports.fromAscii = void 0;\nvar ascii_1 = __webpack_require__(/*! ./ascii */ \"(ssr)/./node_modules/@cosmjs/encoding/build/ascii.js\");\nObject.defineProperty(exports, \"fromAscii\", ({ enumerable: true, get: function () { return ascii_1.fromAscii; } }));\nObject.defineProperty(exports, \"toAscii\", ({ enumerable: true, get: function () { return ascii_1.toAscii; } }));\nvar base64_1 = __webpack_require__(/*! ./base64 */ \"(ssr)/./node_modules/@cosmjs/encoding/build/base64.js\");\nObject.defineProperty(exports, \"fromBase64\", ({ enumerable: true, get: function () { return base64_1.fromBase64; } }));\nObject.defineProperty(exports, \"toBase64\", ({ enumerable: true, get: function () { return base64_1.toBase64; } }));\nvar bech32_1 = __webpack_require__(/*! ./bech32 */ \"(ssr)/./node_modules/@cosmjs/encoding/build/bech32.js\");\nObject.defineProperty(exports, \"fromBech32\", ({ enumerable: true, get: function () { return bech32_1.fromBech32; } }));\nObject.defineProperty(exports, \"normalizeBech32\", ({ enumerable: true, get: function () { return bech32_1.normalizeBech32; } }));\nObject.defineProperty(exports, \"toBech32\", ({ enumerable: true, get: function () { return bech32_1.toBech32; } }));\nvar hex_1 = __webpack_require__(/*! ./hex */ \"(ssr)/./node_modules/@cosmjs/encoding/build/hex.js\");\nObject.defineProperty(exports, \"fromHex\", ({ enumerable: true, get: function () { return hex_1.fromHex; } }));\nObject.defineProperty(exports, \"toHex\", ({ enumerable: true, get: function () { return hex_1.toHex; } }));\nvar rfc3339_1 = __webpack_require__(/*! ./rfc3339 */ \"(ssr)/./node_modules/@cosmjs/encoding/build/rfc3339.js\");\nObject.defineProperty(exports, \"fromRfc3339\", ({ enumerable: true, get: function () { return rfc3339_1.fromRfc3339; } }));\nObject.defineProperty(exports, \"toRfc3339\", ({ enumerable: true, get: function () { return rfc3339_1.toRfc3339; } }));\nvar utf8_1 = __webpack_require__(/*! ./utf8 */ \"(ssr)/./node_modules/@cosmjs/encoding/build/utf8.js\");\nObject.defineProperty(exports, \"fromUtf8\", ({ enumerable: true, get: function () { return utf8_1.fromUtf8; } }));\nObject.defineProperty(exports, \"toUtf8\", ({ enumerable: true, get: function () { return utf8_1.toUtf8; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsZ0JBQWdCLEdBQUcsaUJBQWlCLEdBQUcsbUJBQW1CLEdBQUcsYUFBYSxHQUFHLGVBQWUsR0FBRyxnQkFBZ0IsR0FBRyx1QkFBdUIsR0FBRyxrQkFBa0IsR0FBRyxnQkFBZ0IsR0FBRyxrQkFBa0IsR0FBRyxlQUFlLEdBQUcsaUJBQWlCO0FBQzdQLGNBQWMsbUJBQU8sQ0FBQyxxRUFBUztBQUMvQiw2Q0FBNEMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDakgsMkNBQTBDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDO0FBQzdHLGVBQWUsbUJBQU8sQ0FBQyx1RUFBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsNENBQTJDLEVBQUUscUNBQXFDLDZCQUE2QixFQUFDO0FBQ2hILGVBQWUsbUJBQU8sQ0FBQyx1RUFBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsbURBQWtELEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzlILDRDQUEyQyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUNoSCxZQUFZLG1CQUFPLENBQUMsaUVBQU87QUFDM0IsMkNBQTBDLEVBQUUscUNBQXFDLHlCQUF5QixFQUFDO0FBQzNHLHlDQUF3QyxFQUFFLHFDQUFxQyx1QkFBdUIsRUFBQztBQUN2RyxnQkFBZ0IsbUJBQU8sQ0FBQyx5RUFBVztBQUNuQywrQ0FBOEMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDdkgsNkNBQTRDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ25ILGFBQWEsbUJBQU8sQ0FBQyxtRUFBUTtBQUM3Qiw0Q0FBMkMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUM7QUFDOUcsMENBQXlDLEVBQUUscUNBQXFDLHlCQUF5QixFQUFDO0FBQzFHIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxlbmNvZGluZ1xcYnVpbGRcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b1V0ZjggPSBleHBvcnRzLmZyb21VdGY4ID0gZXhwb3J0cy50b1JmYzMzMzkgPSBleHBvcnRzLmZyb21SZmMzMzM5ID0gZXhwb3J0cy50b0hleCA9IGV4cG9ydHMuZnJvbUhleCA9IGV4cG9ydHMudG9CZWNoMzIgPSBleHBvcnRzLm5vcm1hbGl6ZUJlY2gzMiA9IGV4cG9ydHMuZnJvbUJlY2gzMiA9IGV4cG9ydHMudG9CYXNlNjQgPSBleHBvcnRzLmZyb21CYXNlNjQgPSBleHBvcnRzLnRvQXNjaWkgPSBleHBvcnRzLmZyb21Bc2NpaSA9IHZvaWQgMDtcbnZhciBhc2NpaV8xID0gcmVxdWlyZShcIi4vYXNjaWlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tQXNjaWlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFzY2lpXzEuZnJvbUFzY2lpOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidG9Bc2NpaVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXNjaWlfMS50b0FzY2lpOyB9IH0pO1xudmFyIGJhc2U2NF8xID0gcmVxdWlyZShcIi4vYmFzZTY0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZnJvbUJhc2U2NFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYmFzZTY0XzEuZnJvbUJhc2U2NDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInRvQmFzZTY0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBiYXNlNjRfMS50b0Jhc2U2NDsgfSB9KTtcbnZhciBiZWNoMzJfMSA9IHJlcXVpcmUoXCIuL2JlY2gzMlwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZyb21CZWNoMzJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJlY2gzMl8xLmZyb21CZWNoMzI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJub3JtYWxpemVCZWNoMzJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJlY2gzMl8xLm5vcm1hbGl6ZUJlY2gzMjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInRvQmVjaDMyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBiZWNoMzJfMS50b0JlY2gzMjsgfSB9KTtcbnZhciBoZXhfMSA9IHJlcXVpcmUoXCIuL2hleFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZyb21IZXhcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGhleF8xLmZyb21IZXg7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ0b0hleFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaGV4XzEudG9IZXg7IH0gfSk7XG52YXIgcmZjMzMzOV8xID0gcmVxdWlyZShcIi4vcmZjMzMzOVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZyb21SZmMzMzM5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZmMzMzM5XzEuZnJvbVJmYzMzMzk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ0b1JmYzMzMzlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJmYzMzMzlfMS50b1JmYzMzMzk7IH0gfSk7XG52YXIgdXRmOF8xID0gcmVxdWlyZShcIi4vdXRmOFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZyb21VdGY4XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGY4XzEuZnJvbVV0Zjg7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ0b1V0ZjhcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0ZjhfMS50b1V0Zjg7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/rfc3339.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/rfc3339.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toRfc3339 = exports.fromRfc3339 = void 0;\nconst rfc3339Matcher = /^(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,9})?((?:[+-]\\d{2}:\\d{2})|Z)$/;\nfunction padded(integer, length = 2) {\n    return integer.toString().padStart(length, \"0\");\n}\nfunction fromRfc3339(str) {\n    const matches = rfc3339Matcher.exec(str);\n    if (!matches) {\n        throw new Error(\"Date string is not in RFC3339 format\");\n    }\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    const hour = +matches[4];\n    const minute = +matches[5];\n    const second = +matches[6];\n    // fractional seconds match either undefined or a string like \".1\", \".123456789\"\n    const milliSeconds = matches[7] ? Math.floor(+matches[7] * 1000) : 0;\n    let tzOffsetSign;\n    let tzOffsetHours;\n    let tzOffsetMinutes;\n    // if timezone is undefined, it must be Z or nothing (otherwise the group would have captured).\n    if (matches[8] === \"Z\") {\n        tzOffsetSign = 1;\n        tzOffsetHours = 0;\n        tzOffsetMinutes = 0;\n    }\n    else {\n        tzOffsetSign = matches[8].substring(0, 1) === \"-\" ? -1 : 1;\n        tzOffsetHours = +matches[8].substring(1, 3);\n        tzOffsetMinutes = +matches[8].substring(4, 6);\n    }\n    const tzOffset = tzOffsetSign * (tzOffsetHours * 60 + tzOffsetMinutes) * 60; // seconds\n    const date = new Date();\n    date.setUTCFullYear(year, month - 1, day);\n    date.setUTCHours(hour, minute, second, milliSeconds);\n    return new Date(date.getTime() - tzOffset * 1000);\n}\nexports.fromRfc3339 = fromRfc3339;\nfunction toRfc3339(date) {\n    const year = date.getUTCFullYear();\n    const month = padded(date.getUTCMonth() + 1);\n    const day = padded(date.getUTCDate());\n    const hour = padded(date.getUTCHours());\n    const minute = padded(date.getUTCMinutes());\n    const second = padded(date.getUTCSeconds());\n    const ms = padded(date.getUTCMilliseconds(), 3);\n    return `${year}-${month}-${day}T${hour}:${minute}:${second}.${ms}Z`;\n}\nexports.toRfc3339 = toRfc3339;\n//# sourceMappingURL=rfc3339.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9yZmMzMzM5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLG1CQUFtQjtBQUN2Qyw2QkFBNkIsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sSUFBSSxhQUFhLEVBQUUsSUFBSSxFQUFFO0FBQzFHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLEtBQUssR0FBRyxNQUFNLEdBQUcsSUFBSSxHQUFHLEtBQUssR0FBRyxPQUFPLEdBQUcsT0FBTyxHQUFHLEdBQUc7QUFDckU7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5cXE9uZURyaXZlXFxEZXNrdG9wXFx2YXVsdHF1ZXN0XFxub2RlX21vZHVsZXNcXEBjb3NtanNcXGVuY29kaW5nXFxidWlsZFxccmZjMzMzOS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9SZmMzMzM5ID0gZXhwb3J0cy5mcm9tUmZjMzMzOSA9IHZvaWQgMDtcbmNvbnN0IHJmYzMzMzlNYXRjaGVyID0gL14oXFxkezR9KS0oXFxkezJ9KS0oXFxkezJ9KVtUIF0oXFxkezJ9KTooXFxkezJ9KTooXFxkezJ9KShcXC5cXGR7MSw5fSk/KCg/OlsrLV1cXGR7Mn06XFxkezJ9KXxaKSQvO1xuZnVuY3Rpb24gcGFkZGVkKGludGVnZXIsIGxlbmd0aCA9IDIpIHtcbiAgICByZXR1cm4gaW50ZWdlci50b1N0cmluZygpLnBhZFN0YXJ0KGxlbmd0aCwgXCIwXCIpO1xufVxuZnVuY3Rpb24gZnJvbVJmYzMzMzkoc3RyKSB7XG4gICAgY29uc3QgbWF0Y2hlcyA9IHJmYzMzMzlNYXRjaGVyLmV4ZWMoc3RyKTtcbiAgICBpZiAoIW1hdGNoZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRGF0ZSBzdHJpbmcgaXMgbm90IGluIFJGQzMzMzkgZm9ybWF0XCIpO1xuICAgIH1cbiAgICBjb25zdCB5ZWFyID0gK21hdGNoZXNbMV07XG4gICAgY29uc3QgbW9udGggPSArbWF0Y2hlc1syXTtcbiAgICBjb25zdCBkYXkgPSArbWF0Y2hlc1szXTtcbiAgICBjb25zdCBob3VyID0gK21hdGNoZXNbNF07XG4gICAgY29uc3QgbWludXRlID0gK21hdGNoZXNbNV07XG4gICAgY29uc3Qgc2Vjb25kID0gK21hdGNoZXNbNl07XG4gICAgLy8gZnJhY3Rpb25hbCBzZWNvbmRzIG1hdGNoIGVpdGhlciB1bmRlZmluZWQgb3IgYSBzdHJpbmcgbGlrZSBcIi4xXCIsIFwiLjEyMzQ1Njc4OVwiXG4gICAgY29uc3QgbWlsbGlTZWNvbmRzID0gbWF0Y2hlc1s3XSA/IE1hdGguZmxvb3IoK21hdGNoZXNbN10gKiAxMDAwKSA6IDA7XG4gICAgbGV0IHR6T2Zmc2V0U2lnbjtcbiAgICBsZXQgdHpPZmZzZXRIb3VycztcbiAgICBsZXQgdHpPZmZzZXRNaW51dGVzO1xuICAgIC8vIGlmIHRpbWV6b25lIGlzIHVuZGVmaW5lZCwgaXQgbXVzdCBiZSBaIG9yIG5vdGhpbmcgKG90aGVyd2lzZSB0aGUgZ3JvdXAgd291bGQgaGF2ZSBjYXB0dXJlZCkuXG4gICAgaWYgKG1hdGNoZXNbOF0gPT09IFwiWlwiKSB7XG4gICAgICAgIHR6T2Zmc2V0U2lnbiA9IDE7XG4gICAgICAgIHR6T2Zmc2V0SG91cnMgPSAwO1xuICAgICAgICB0ek9mZnNldE1pbnV0ZXMgPSAwO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdHpPZmZzZXRTaWduID0gbWF0Y2hlc1s4XS5zdWJzdHJpbmcoMCwgMSkgPT09IFwiLVwiID8gLTEgOiAxO1xuICAgICAgICB0ek9mZnNldEhvdXJzID0gK21hdGNoZXNbOF0uc3Vic3RyaW5nKDEsIDMpO1xuICAgICAgICB0ek9mZnNldE1pbnV0ZXMgPSArbWF0Y2hlc1s4XS5zdWJzdHJpbmcoNCwgNik7XG4gICAgfVxuICAgIGNvbnN0IHR6T2Zmc2V0ID0gdHpPZmZzZXRTaWduICogKHR6T2Zmc2V0SG91cnMgKiA2MCArIHR6T2Zmc2V0TWludXRlcykgKiA2MDsgLy8gc2Vjb25kc1xuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpO1xuICAgIGRhdGUuc2V0VVRDRnVsbFllYXIoeWVhciwgbW9udGggLSAxLCBkYXkpO1xuICAgIGRhdGUuc2V0VVRDSG91cnMoaG91ciwgbWludXRlLCBzZWNvbmQsIG1pbGxpU2Vjb25kcyk7XG4gICAgcmV0dXJuIG5ldyBEYXRlKGRhdGUuZ2V0VGltZSgpIC0gdHpPZmZzZXQgKiAxMDAwKTtcbn1cbmV4cG9ydHMuZnJvbVJmYzMzMzkgPSBmcm9tUmZjMzMzOTtcbmZ1bmN0aW9uIHRvUmZjMzMzOShkYXRlKSB7XG4gICAgY29uc3QgeWVhciA9IGRhdGUuZ2V0VVRDRnVsbFllYXIoKTtcbiAgICBjb25zdCBtb250aCA9IHBhZGRlZChkYXRlLmdldFVUQ01vbnRoKCkgKyAxKTtcbiAgICBjb25zdCBkYXkgPSBwYWRkZWQoZGF0ZS5nZXRVVENEYXRlKCkpO1xuICAgIGNvbnN0IGhvdXIgPSBwYWRkZWQoZGF0ZS5nZXRVVENIb3VycygpKTtcbiAgICBjb25zdCBtaW51dGUgPSBwYWRkZWQoZGF0ZS5nZXRVVENNaW51dGVzKCkpO1xuICAgIGNvbnN0IHNlY29uZCA9IHBhZGRlZChkYXRlLmdldFVUQ1NlY29uZHMoKSk7XG4gICAgY29uc3QgbXMgPSBwYWRkZWQoZGF0ZS5nZXRVVENNaWxsaXNlY29uZHMoKSwgMyk7XG4gICAgcmV0dXJuIGAke3llYXJ9LSR7bW9udGh9LSR7ZGF5fVQke2hvdXJ9OiR7bWludXRlfToke3NlY29uZH0uJHttc31aYDtcbn1cbmV4cG9ydHMudG9SZmMzMzM5ID0gdG9SZmMzMzM5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmZjMzMzOS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/rfc3339.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/utf8.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/utf8.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromUtf8 = exports.toUtf8 = void 0;\nfunction toUtf8(str) {\n    return new TextEncoder().encode(str);\n}\nexports.toUtf8 = toUtf8;\n/**\n * Takes UTF-8 data and decodes it to a string.\n *\n * In lossy mode, the [REPLACEMENT CHARACTER](https://en.wikipedia.org/wiki/Specials_(Unicode_block))\n * is used to substitude invalid encodings.\n * By default lossy mode is off and invalid data will lead to exceptions.\n */\nfunction fromUtf8(data, lossy = false) {\n    const fatal = !lossy;\n    return new TextDecoder(\"utf-8\", { fatal }).decode(data);\n}\nexports.fromUtf8 = fromUtf8;\n//# sourceMappingURL=utf8.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC91dGY4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixHQUFHLGNBQWM7QUFDakM7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxPQUFPO0FBQzdDO0FBQ0EsZ0JBQWdCO0FBQ2hCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxlbmNvZGluZ1xcYnVpbGRcXHV0ZjguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZyb21VdGY4ID0gZXhwb3J0cy50b1V0ZjggPSB2b2lkIDA7XG5mdW5jdGlvbiB0b1V0Zjgoc3RyKSB7XG4gICAgcmV0dXJuIG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShzdHIpO1xufVxuZXhwb3J0cy50b1V0ZjggPSB0b1V0Zjg7XG4vKipcbiAqIFRha2VzIFVURi04IGRhdGEgYW5kIGRlY29kZXMgaXQgdG8gYSBzdHJpbmcuXG4gKlxuICogSW4gbG9zc3kgbW9kZSwgdGhlIFtSRVBMQUNFTUVOVCBDSEFSQUNURVJdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1NwZWNpYWxzXyhVbmljb2RlX2Jsb2NrKSlcbiAqIGlzIHVzZWQgdG8gc3Vic3RpdHVkZSBpbnZhbGlkIGVuY29kaW5ncy5cbiAqIEJ5IGRlZmF1bHQgbG9zc3kgbW9kZSBpcyBvZmYgYW5kIGludmFsaWQgZGF0YSB3aWxsIGxlYWQgdG8gZXhjZXB0aW9ucy5cbiAqL1xuZnVuY3Rpb24gZnJvbVV0ZjgoZGF0YSwgbG9zc3kgPSBmYWxzZSkge1xuICAgIGNvbnN0IGZhdGFsID0gIWxvc3N5O1xuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoXCJ1dGYtOFwiLCB7IGZhdGFsIH0pLmRlY29kZShkYXRhKTtcbn1cbmV4cG9ydHMuZnJvbVV0ZjggPSBmcm9tVXRmODtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0ZjguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/utf8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/math/build/decimal.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/math/build/decimal.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Decimal = void 0;\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\n// Too large values lead to massive memory usage. Limit to something sensible.\n// The largest value we need is 18 (Ether).\nconst maxFractionalDigits = 100;\n/**\n * A type for arbitrary precision, non-negative decimals.\n *\n * Instances of this class are immutable.\n */\nclass Decimal {\n    static fromUserInput(input, fractionalDigits) {\n        Decimal.verifyFractionalDigits(fractionalDigits);\n        const badCharacter = input.match(/[^0-9.]/);\n        if (badCharacter) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            throw new Error(`Invalid character at position ${badCharacter.index + 1}`);\n        }\n        let whole;\n        let fractional;\n        if (input === \"\") {\n            whole = \"0\";\n            fractional = \"\";\n        }\n        else if (input.search(/\\./) === -1) {\n            // integer format, no separator\n            whole = input;\n            fractional = \"\";\n        }\n        else {\n            const parts = input.split(\".\");\n            switch (parts.length) {\n                case 0:\n                case 1:\n                    throw new Error(\"Fewer than two elements in split result. This must not happen here.\");\n                case 2:\n                    if (!parts[1])\n                        throw new Error(\"Fractional part missing\");\n                    whole = parts[0];\n                    fractional = parts[1].replace(/0+$/, \"\");\n                    break;\n                default:\n                    throw new Error(\"More than one separator found\");\n            }\n        }\n        if (fractional.length > fractionalDigits) {\n            throw new Error(\"Got more fractional digits than supported\");\n        }\n        const quantity = `${whole}${fractional.padEnd(fractionalDigits, \"0\")}`;\n        return new Decimal(quantity, fractionalDigits);\n    }\n    static fromAtomics(atomics, fractionalDigits) {\n        Decimal.verifyFractionalDigits(fractionalDigits);\n        return new Decimal(atomics, fractionalDigits);\n    }\n    /**\n     * Creates a Decimal with value 0.0 and the given number of fractial digits.\n     *\n     * Fractional digits are not relevant for the value but needed to be able\n     * to perform arithmetic operations with other decimals.\n     */\n    static zero(fractionalDigits) {\n        Decimal.verifyFractionalDigits(fractionalDigits);\n        return new Decimal(\"0\", fractionalDigits);\n    }\n    /**\n     * Creates a Decimal with value 1.0 and the given number of fractial digits.\n     *\n     * Fractional digits are not relevant for the value but needed to be able\n     * to perform arithmetic operations with other decimals.\n     */\n    static one(fractionalDigits) {\n        Decimal.verifyFractionalDigits(fractionalDigits);\n        return new Decimal(\"1\" + \"0\".repeat(fractionalDigits), fractionalDigits);\n    }\n    static verifyFractionalDigits(fractionalDigits) {\n        if (!Number.isInteger(fractionalDigits))\n            throw new Error(\"Fractional digits is not an integer\");\n        if (fractionalDigits < 0)\n            throw new Error(\"Fractional digits must not be negative\");\n        if (fractionalDigits > maxFractionalDigits) {\n            throw new Error(`Fractional digits must not exceed ${maxFractionalDigits}`);\n        }\n    }\n    static compare(a, b) {\n        if (a.fractionalDigits !== b.fractionalDigits)\n            throw new Error(\"Fractional digits do not match\");\n        return a.data.atomics.cmp(new bn_js_1.default(b.atomics));\n    }\n    get atomics() {\n        return this.data.atomics.toString();\n    }\n    get fractionalDigits() {\n        return this.data.fractionalDigits;\n    }\n    constructor(atomics, fractionalDigits) {\n        if (!atomics.match(/^[0-9]+$/)) {\n            throw new Error(\"Invalid string format. Only non-negative integers in decimal representation supported.\");\n        }\n        this.data = {\n            atomics: new bn_js_1.default(atomics),\n            fractionalDigits: fractionalDigits,\n        };\n    }\n    /** Creates a new instance with the same value */\n    clone() {\n        return new Decimal(this.atomics, this.fractionalDigits);\n    }\n    /** Returns the greatest decimal <= this which has no fractional part (rounding down) */\n    floor() {\n        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));\n        const whole = this.data.atomics.div(factor);\n        const fractional = this.data.atomics.mod(factor);\n        if (fractional.isZero()) {\n            return this.clone();\n        }\n        else {\n            return Decimal.fromAtomics(whole.mul(factor).toString(), this.fractionalDigits);\n        }\n    }\n    /** Returns the smallest decimal >= this which has no fractional part (rounding up) */\n    ceil() {\n        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));\n        const whole = this.data.atomics.div(factor);\n        const fractional = this.data.atomics.mod(factor);\n        if (fractional.isZero()) {\n            return this.clone();\n        }\n        else {\n            return Decimal.fromAtomics(whole.addn(1).mul(factor).toString(), this.fractionalDigits);\n        }\n    }\n    toString() {\n        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));\n        const whole = this.data.atomics.div(factor);\n        const fractional = this.data.atomics.mod(factor);\n        if (fractional.isZero()) {\n            return whole.toString();\n        }\n        else {\n            const fullFractionalPart = fractional.toString().padStart(this.data.fractionalDigits, \"0\");\n            const trimmedFractionalPart = fullFractionalPart.replace(/0+$/, \"\");\n            return `${whole.toString()}.${trimmedFractionalPart}`;\n        }\n    }\n    /**\n     * Returns an approximation as a float type. Only use this if no\n     * exact calculation is required.\n     */\n    toFloatApproximation() {\n        const out = Number(this.toString());\n        if (Number.isNaN(out))\n            throw new Error(\"Conversion to number failed\");\n        return out;\n    }\n    /**\n     * a.plus(b) returns a+b.\n     *\n     * Both values need to have the same fractional digits.\n     */\n    plus(b) {\n        if (this.fractionalDigits !== b.fractionalDigits)\n            throw new Error(\"Fractional digits do not match\");\n        const sum = this.data.atomics.add(new bn_js_1.default(b.atomics));\n        return new Decimal(sum.toString(), this.fractionalDigits);\n    }\n    /**\n     * a.minus(b) returns a-b.\n     *\n     * Both values need to have the same fractional digits.\n     * The resulting difference needs to be non-negative.\n     */\n    minus(b) {\n        if (this.fractionalDigits !== b.fractionalDigits)\n            throw new Error(\"Fractional digits do not match\");\n        const difference = this.data.atomics.sub(new bn_js_1.default(b.atomics));\n        if (difference.ltn(0))\n            throw new Error(\"Difference must not be negative\");\n        return new Decimal(difference.toString(), this.fractionalDigits);\n    }\n    /**\n     * a.multiply(b) returns a*b.\n     *\n     * We only allow multiplication by unsigned integers to avoid rounding errors.\n     */\n    multiply(b) {\n        const product = this.data.atomics.mul(new bn_js_1.default(b.toString()));\n        return new Decimal(product.toString(), this.fractionalDigits);\n    }\n    equals(b) {\n        return Decimal.compare(this, b) === 0;\n    }\n    isLessThan(b) {\n        return Decimal.compare(this, b) < 0;\n    }\n    isLessThanOrEqual(b) {\n        return Decimal.compare(this, b) <= 0;\n    }\n    isGreaterThan(b) {\n        return Decimal.compare(this, b) > 0;\n    }\n    isGreaterThanOrEqual(b) {\n        return Decimal.compare(this, b) >= 0;\n    }\n}\nexports.Decimal = Decimal;\n//# sourceMappingURL=decimal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/math/build/decimal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/math/build/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@cosmjs/math/build/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Uint64 = exports.Uint53 = exports.Uint32 = exports.Int53 = exports.Decimal = void 0;\nvar decimal_1 = __webpack_require__(/*! ./decimal */ \"(ssr)/./node_modules/@cosmjs/math/build/decimal.js\");\nObject.defineProperty(exports, \"Decimal\", ({ enumerable: true, get: function () { return decimal_1.Decimal; } }));\nvar integers_1 = __webpack_require__(/*! ./integers */ \"(ssr)/./node_modules/@cosmjs/math/build/integers.js\");\nObject.defineProperty(exports, \"Int53\", ({ enumerable: true, get: function () { return integers_1.Int53; } }));\nObject.defineProperty(exports, \"Uint32\", ({ enumerable: true, get: function () { return integers_1.Uint32; } }));\nObject.defineProperty(exports, \"Uint53\", ({ enumerable: true, get: function () { return integers_1.Uint53; } }));\nObject.defineProperty(exports, \"Uint64\", ({ enumerable: true, get: function () { return integers_1.Uint64; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9tYXRoL2J1aWxkL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxjQUFjLEdBQUcsY0FBYyxHQUFHLGFBQWEsR0FBRyxlQUFlO0FBQ2xGLGdCQUFnQixtQkFBTyxDQUFDLHFFQUFXO0FBQ25DLDJDQUEwQyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUMvRyxpQkFBaUIsbUJBQU8sQ0FBQyx1RUFBWTtBQUNyQyx5Q0FBd0MsRUFBRSxxQ0FBcUMsNEJBQTRCLEVBQUM7QUFDNUcsMENBQXlDLEVBQUUscUNBQXFDLDZCQUE2QixFQUFDO0FBQzlHLDBDQUF5QyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUM5RywwQ0FBeUMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDOUciLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5cXE9uZURyaXZlXFxEZXNrdG9wXFx2YXVsdHF1ZXN0XFxub2RlX21vZHVsZXNcXEBjb3NtanNcXG1hdGhcXGJ1aWxkXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVWludDY0ID0gZXhwb3J0cy5VaW50NTMgPSBleHBvcnRzLlVpbnQzMiA9IGV4cG9ydHMuSW50NTMgPSBleHBvcnRzLkRlY2ltYWwgPSB2b2lkIDA7XG52YXIgZGVjaW1hbF8xID0gcmVxdWlyZShcIi4vZGVjaW1hbFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkRlY2ltYWxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRlY2ltYWxfMS5EZWNpbWFsOyB9IH0pO1xudmFyIGludGVnZXJzXzEgPSByZXF1aXJlKFwiLi9pbnRlZ2Vyc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkludDUzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnRlZ2Vyc18xLkludDUzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVWludDMyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnRlZ2Vyc18xLlVpbnQzMjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVpbnQ1M1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW50ZWdlcnNfMS5VaW50NTM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVaW50NjRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGludGVnZXJzXzEuVWludDY0OyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/math/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/math/build/integers.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/math/build/integers.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Uint64 = exports.Uint53 = exports.Int53 = exports.Uint32 = void 0;\n/* eslint-disable no-bitwise */\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\nconst uint64MaxValue = new bn_js_1.default(\"18446744073709551615\", 10, \"be\");\nclass Uint32 {\n    /** @deprecated use Uint32.fromBytes */\n    static fromBigEndianBytes(bytes) {\n        return Uint32.fromBytes(bytes);\n    }\n    /**\n     * Creates a Uint32 from a fixed length byte array.\n     *\n     * @param bytes a list of exactly 4 bytes\n     * @param endianess defaults to big endian\n     */\n    static fromBytes(bytes, endianess = \"be\") {\n        if (bytes.length !== 4) {\n            throw new Error(\"Invalid input length. Expected 4 bytes.\");\n        }\n        for (let i = 0; i < bytes.length; ++i) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {\n                throw new Error(\"Invalid value in byte. Found: \" + bytes[i]);\n            }\n        }\n        const beBytes = endianess === \"be\" ? bytes : Array.from(bytes).reverse();\n        // Use mulitiplication instead of shifting since bitwise operators are defined\n        // on SIGNED int32 in JavaScript and we don't want to risk surprises\n        return new Uint32(beBytes[0] * 2 ** 24 + beBytes[1] * 2 ** 16 + beBytes[2] * 2 ** 8 + beBytes[3]);\n    }\n    static fromString(str) {\n        if (!str.match(/^[0-9]+$/)) {\n            throw new Error(\"Invalid string format\");\n        }\n        return new Uint32(Number.parseInt(str, 10));\n    }\n    constructor(input) {\n        if (Number.isNaN(input)) {\n            throw new Error(\"Input is not a number\");\n        }\n        if (!Number.isInteger(input)) {\n            throw new Error(\"Input is not an integer\");\n        }\n        if (input < 0 || input > 4294967295) {\n            throw new Error(\"Input not in uint32 range: \" + input.toString());\n        }\n        this.data = input;\n    }\n    toBytesBigEndian() {\n        // Use division instead of shifting since bitwise operators are defined\n        // on SIGNED int32 in JavaScript and we don't want to risk surprises\n        return new Uint8Array([\n            Math.floor(this.data / 2 ** 24) & 0xff,\n            Math.floor(this.data / 2 ** 16) & 0xff,\n            Math.floor(this.data / 2 ** 8) & 0xff,\n            Math.floor(this.data / 2 ** 0) & 0xff,\n        ]);\n    }\n    toBytesLittleEndian() {\n        // Use division instead of shifting since bitwise operators are defined\n        // on SIGNED int32 in JavaScript and we don't want to risk surprises\n        return new Uint8Array([\n            Math.floor(this.data / 2 ** 0) & 0xff,\n            Math.floor(this.data / 2 ** 8) & 0xff,\n            Math.floor(this.data / 2 ** 16) & 0xff,\n            Math.floor(this.data / 2 ** 24) & 0xff,\n        ]);\n    }\n    toNumber() {\n        return this.data;\n    }\n    toBigInt() {\n        return BigInt(this.toNumber());\n    }\n    toString() {\n        return this.data.toString();\n    }\n}\nexports.Uint32 = Uint32;\nclass Int53 {\n    static fromString(str) {\n        if (!str.match(/^-?[0-9]+$/)) {\n            throw new Error(\"Invalid string format\");\n        }\n        return new Int53(Number.parseInt(str, 10));\n    }\n    constructor(input) {\n        if (Number.isNaN(input)) {\n            throw new Error(\"Input is not a number\");\n        }\n        if (!Number.isInteger(input)) {\n            throw new Error(\"Input is not an integer\");\n        }\n        if (input < Number.MIN_SAFE_INTEGER || input > Number.MAX_SAFE_INTEGER) {\n            throw new Error(\"Input not in int53 range: \" + input.toString());\n        }\n        this.data = input;\n    }\n    toNumber() {\n        return this.data;\n    }\n    toBigInt() {\n        return BigInt(this.toNumber());\n    }\n    toString() {\n        return this.data.toString();\n    }\n}\nexports.Int53 = Int53;\nclass Uint53 {\n    static fromString(str) {\n        const signed = Int53.fromString(str);\n        return new Uint53(signed.toNumber());\n    }\n    constructor(input) {\n        const signed = new Int53(input);\n        if (signed.toNumber() < 0) {\n            throw new Error(\"Input is negative\");\n        }\n        this.data = signed;\n    }\n    toNumber() {\n        return this.data.toNumber();\n    }\n    toBigInt() {\n        return BigInt(this.toNumber());\n    }\n    toString() {\n        return this.data.toString();\n    }\n}\nexports.Uint53 = Uint53;\nclass Uint64 {\n    /** @deprecated use Uint64.fromBytes */\n    static fromBytesBigEndian(bytes) {\n        return Uint64.fromBytes(bytes);\n    }\n    /**\n     * Creates a Uint64 from a fixed length byte array.\n     *\n     * @param bytes a list of exactly 8 bytes\n     * @param endianess defaults to big endian\n     */\n    static fromBytes(bytes, endianess = \"be\") {\n        if (bytes.length !== 8) {\n            throw new Error(\"Invalid input length. Expected 8 bytes.\");\n        }\n        for (let i = 0; i < bytes.length; ++i) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {\n                throw new Error(\"Invalid value in byte. Found: \" + bytes[i]);\n            }\n        }\n        const beBytes = endianess === \"be\" ? Array.from(bytes) : Array.from(bytes).reverse();\n        return new Uint64(new bn_js_1.default(beBytes));\n    }\n    static fromString(str) {\n        if (!str.match(/^[0-9]+$/)) {\n            throw new Error(\"Invalid string format\");\n        }\n        return new Uint64(new bn_js_1.default(str, 10, \"be\"));\n    }\n    static fromNumber(input) {\n        if (Number.isNaN(input)) {\n            throw new Error(\"Input is not a number\");\n        }\n        if (!Number.isInteger(input)) {\n            throw new Error(\"Input is not an integer\");\n        }\n        let bigint;\n        try {\n            bigint = new bn_js_1.default(input);\n        }\n        catch {\n            throw new Error(\"Input is not a safe integer\");\n        }\n        return new Uint64(bigint);\n    }\n    constructor(data) {\n        if (data.isNeg()) {\n            throw new Error(\"Input is negative\");\n        }\n        if (data.gt(uint64MaxValue)) {\n            throw new Error(\"Input exceeds uint64 range\");\n        }\n        this.data = data;\n    }\n    toBytesBigEndian() {\n        return Uint8Array.from(this.data.toArray(\"be\", 8));\n    }\n    toBytesLittleEndian() {\n        return Uint8Array.from(this.data.toArray(\"le\", 8));\n    }\n    toString() {\n        return this.data.toString(10);\n    }\n    toBigInt() {\n        return BigInt(this.toString());\n    }\n    toNumber() {\n        return this.data.toNumber();\n    }\n}\nexports.Uint64 = Uint64;\n// Assign classes to unused variables in order to verify static interface conformance at compile time.\n// Workaround for https://github.com/microsoft/TypeScript/issues/33892\nconst _int53Class = Int53;\nconst _uint53Class = Uint53;\nconst _uint32Class = Uint32;\nconst _uint64Class = Uint64;\n//# sourceMappingURL=integers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/math/build/integers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/decode.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/decode.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeTxRaw = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js\");\n/**\n * Takes a serialized TxRaw (the bytes stored in Tendermint) and decodes it into something usable.\n */\nfunction decodeTxRaw(tx) {\n    const txRaw = tx_1.TxRaw.decode(tx);\n    return {\n        authInfo: tx_1.AuthInfo.decode(txRaw.authInfoBytes),\n        body: tx_1.TxBody.decode(txRaw.bodyBytes),\n        signatures: txRaw.signatures,\n    };\n}\nexports.decodeTxRaw = decodeTxRaw;\n//# sourceMappingURL=decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL2RlY29kZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsYUFBYSxtQkFBTyxDQUFDLG9HQUFtQztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxwcm90by1zaWduaW5nXFxidWlsZFxcZGVjb2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGVUeFJhdyA9IHZvaWQgMDtcbmNvbnN0IHR4XzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2Nvc21vcy90eC92MWJldGExL3R4XCIpO1xuLyoqXG4gKiBUYWtlcyBhIHNlcmlhbGl6ZWQgVHhSYXcgKHRoZSBieXRlcyBzdG9yZWQgaW4gVGVuZGVybWludCkgYW5kIGRlY29kZXMgaXQgaW50byBzb21ldGhpbmcgdXNhYmxlLlxuICovXG5mdW5jdGlvbiBkZWNvZGVUeFJhdyh0eCkge1xuICAgIGNvbnN0IHR4UmF3ID0gdHhfMS5UeFJhdy5kZWNvZGUodHgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGF1dGhJbmZvOiB0eF8xLkF1dGhJbmZvLmRlY29kZSh0eFJhdy5hdXRoSW5mb0J5dGVzKSxcbiAgICAgICAgYm9keTogdHhfMS5UeEJvZHkuZGVjb2RlKHR4UmF3LmJvZHlCeXRlcyksXG4gICAgICAgIHNpZ25hdHVyZXM6IHR4UmF3LnNpZ25hdHVyZXMsXG4gICAgfTtcbn1cbmV4cG9ydHMuZGVjb2RlVHhSYXcgPSBkZWNvZGVUeFJhdztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DirectSecp256k1HdWallet = exports.extractKdfConfiguration = void 0;\nconst amino_1 = __webpack_require__(/*! @cosmjs/amino */ \"(ssr)/./node_modules/@cosmjs/amino/build/index.js\");\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst signing_1 = __webpack_require__(/*! ./signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/signing.js\");\nconst wallet_1 = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/wallet.js\");\nconst serializationTypeV1 = \"directsecp256k1hdwallet-v1\";\n/**\n * A KDF configuration that is not very strong but can be used on the main thread.\n * It takes about 1 second in Node.js 16.0.0 and should have similar runtimes in other modern Wasm hosts.\n */\nconst basicPasswordHashingOptions = {\n    algorithm: \"argon2id\",\n    params: {\n        outputLength: 32,\n        opsLimit: 24,\n        memLimitKib: 12 * 1024,\n    },\n};\nfunction isDerivationJson(thing) {\n    if (!(0, utils_1.isNonNullObject)(thing))\n        return false;\n    if (typeof thing.hdPath !== \"string\")\n        return false;\n    if (typeof thing.prefix !== \"string\")\n        return false;\n    return true;\n}\nfunction extractKdfConfigurationV1(doc) {\n    return doc.kdf;\n}\nfunction extractKdfConfiguration(serialization) {\n    const root = JSON.parse(serialization);\n    if (!(0, utils_1.isNonNullObject)(root))\n        throw new Error(\"Root document is not an object.\");\n    switch (root.type) {\n        case serializationTypeV1:\n            return extractKdfConfigurationV1(root);\n        default:\n            throw new Error(\"Unsupported serialization type\");\n    }\n}\nexports.extractKdfConfiguration = extractKdfConfiguration;\nconst defaultOptions = {\n    bip39Password: \"\",\n    hdPaths: [(0, amino_1.makeCosmoshubPath)(0)],\n    prefix: \"cosmos\",\n};\n/** A wallet for protobuf based signing using SIGN_MODE_DIRECT */\nclass DirectSecp256k1HdWallet {\n    /**\n     * Restores a wallet from the given BIP39 mnemonic.\n     *\n     * @param mnemonic Any valid English mnemonic.\n     * @param options An optional `DirectSecp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.\n     */\n    static async fromMnemonic(mnemonic, options = {}) {\n        const mnemonicChecked = new crypto_1.EnglishMnemonic(mnemonic);\n        const seed = await crypto_1.Bip39.mnemonicToSeed(mnemonicChecked, options.bip39Password);\n        return new DirectSecp256k1HdWallet(mnemonicChecked, {\n            ...options,\n            seed: seed,\n        });\n    }\n    /**\n     * Generates a new wallet with a BIP39 mnemonic of the given length.\n     *\n     * @param length The number of words in the mnemonic (12, 15, 18, 21 or 24).\n     * @param options An optional `DirectSecp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.\n     */\n    static async generate(length = 12, options = {}) {\n        const entropyLength = 4 * Math.floor((11 * length) / 33);\n        const entropy = crypto_1.Random.getBytes(entropyLength);\n        const mnemonic = crypto_1.Bip39.encode(entropy);\n        return DirectSecp256k1HdWallet.fromMnemonic(mnemonic.toString(), options);\n    }\n    /**\n     * Restores a wallet from an encrypted serialization.\n     *\n     * @param password The user provided password used to generate an encryption key via a KDF.\n     *                 This is not normalized internally (see \"Unicode normalization\" to learn more).\n     */\n    static async deserialize(serialization, password) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        switch (root.type) {\n            case serializationTypeV1:\n                return DirectSecp256k1HdWallet.deserializeTypeV1(serialization, password);\n            default:\n                throw new Error(\"Unsupported serialization type\");\n        }\n    }\n    /**\n     * Restores a wallet from an encrypted serialization.\n     *\n     * This is an advanced alternative to calling `deserialize(serialization, password)` directly, which allows\n     * you to offload the KDF execution to a non-UI thread (e.g. in a WebWorker).\n     *\n     * The caller is responsible for ensuring the key was derived with the given KDF configuration. This can be\n     * done using `extractKdfConfiguration(serialization)` and `executeKdf(password, kdfConfiguration)` from this package.\n     */\n    static async deserializeWithEncryptionKey(serialization, encryptionKey) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        const untypedRoot = root;\n        switch (untypedRoot.type) {\n            case serializationTypeV1: {\n                const decryptedBytes = await (0, wallet_1.decrypt)((0, encoding_1.fromBase64)(untypedRoot.data), encryptionKey, untypedRoot.encryption);\n                const decryptedDocument = JSON.parse((0, encoding_1.fromUtf8)(decryptedBytes));\n                const { mnemonic, accounts } = decryptedDocument;\n                (0, utils_1.assert)(typeof mnemonic === \"string\");\n                if (!Array.isArray(accounts))\n                    throw new Error(\"Property 'accounts' is not an array\");\n                if (!accounts.every((account) => isDerivationJson(account))) {\n                    throw new Error(\"Account is not in the correct format.\");\n                }\n                const firstPrefix = accounts[0].prefix;\n                if (!accounts.every(({ prefix }) => prefix === firstPrefix)) {\n                    throw new Error(\"Accounts do not all have the same prefix\");\n                }\n                const hdPaths = accounts.map(({ hdPath }) => (0, crypto_1.stringToPath)(hdPath));\n                return DirectSecp256k1HdWallet.fromMnemonic(mnemonic, {\n                    hdPaths: hdPaths,\n                    prefix: firstPrefix,\n                });\n            }\n            default:\n                throw new Error(\"Unsupported serialization type\");\n        }\n    }\n    static async deserializeTypeV1(serialization, password) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        const encryptionKey = await (0, wallet_1.executeKdf)(password, root.kdf);\n        return DirectSecp256k1HdWallet.deserializeWithEncryptionKey(serialization, encryptionKey);\n    }\n    constructor(mnemonic, options) {\n        const prefix = options.prefix ?? defaultOptions.prefix;\n        const hdPaths = options.hdPaths ?? defaultOptions.hdPaths;\n        this.secret = mnemonic;\n        this.seed = options.seed;\n        this.accounts = hdPaths.map((hdPath) => ({\n            hdPath: hdPath,\n            prefix: prefix,\n        }));\n    }\n    get mnemonic() {\n        return this.secret.toString();\n    }\n    async getAccounts() {\n        const accountsWithPrivkeys = await this.getAccountsWithPrivkeys();\n        return accountsWithPrivkeys.map(({ algo, pubkey, address }) => ({\n            algo: algo,\n            pubkey: pubkey,\n            address: address,\n        }));\n    }\n    async signDirect(signerAddress, signDoc) {\n        const accounts = await this.getAccountsWithPrivkeys();\n        const account = accounts.find(({ address }) => address === signerAddress);\n        if (account === undefined) {\n            throw new Error(`Address ${signerAddress} not found in wallet`);\n        }\n        const { privkey, pubkey } = account;\n        const signBytes = (0, signing_1.makeSignBytes)(signDoc);\n        const hashedMessage = (0, crypto_1.sha256)(signBytes);\n        const signature = await crypto_1.Secp256k1.createSignature(hashedMessage, privkey);\n        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);\n        const stdSignature = (0, amino_1.encodeSecp256k1Signature)(pubkey, signatureBytes);\n        return {\n            signed: signDoc,\n            signature: stdSignature,\n        };\n    }\n    /**\n     * Generates an encrypted serialization of this wallet.\n     *\n     * @param password The user provided password used to generate an encryption key via a KDF.\n     *                 This is not normalized internally (see \"Unicode normalization\" to learn more).\n     */\n    async serialize(password) {\n        const kdfConfiguration = basicPasswordHashingOptions;\n        const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);\n        return this.serializeWithEncryptionKey(encryptionKey, kdfConfiguration);\n    }\n    /**\n     * Generates an encrypted serialization of this wallet.\n     *\n     * This is an advanced alternative to calling `serialize(password)` directly, which allows you to\n     * offload the KDF execution to a non-UI thread (e.g. in a WebWorker).\n     *\n     * The caller is responsible for ensuring the key was derived with the given KDF options. If this\n     * is not the case, the wallet cannot be restored with the original password.\n     */\n    async serializeWithEncryptionKey(encryptionKey, kdfConfiguration) {\n        const dataToEncrypt = {\n            mnemonic: this.mnemonic,\n            accounts: this.accounts.map(({ hdPath, prefix }) => ({\n                hdPath: (0, crypto_1.pathToString)(hdPath),\n                prefix: prefix,\n            })),\n        };\n        const dataToEncryptRaw = (0, encoding_1.toUtf8)(JSON.stringify(dataToEncrypt));\n        const encryptionConfiguration = {\n            algorithm: wallet_1.supportedAlgorithms.xchacha20poly1305Ietf,\n        };\n        const encryptedData = await (0, wallet_1.encrypt)(dataToEncryptRaw, encryptionKey, encryptionConfiguration);\n        const out = {\n            type: serializationTypeV1,\n            kdf: kdfConfiguration,\n            encryption: encryptionConfiguration,\n            data: (0, encoding_1.toBase64)(encryptedData),\n        };\n        return JSON.stringify(out);\n    }\n    async getKeyPair(hdPath) {\n        const { privkey } = crypto_1.Slip10.derivePath(crypto_1.Slip10Curve.Secp256k1, this.seed, hdPath);\n        const { pubkey } = await crypto_1.Secp256k1.makeKeypair(privkey);\n        return {\n            privkey: privkey,\n            pubkey: crypto_1.Secp256k1.compressPubkey(pubkey),\n        };\n    }\n    async getAccountsWithPrivkeys() {\n        return Promise.all(this.accounts.map(async ({ hdPath, prefix }) => {\n            const { privkey, pubkey } = await this.getKeyPair(hdPath);\n            const address = (0, encoding_1.toBech32)(prefix, (0, amino_1.rawSecp256k1PubkeyToRawAddress)(pubkey));\n            return {\n                algo: \"secp256k1\",\n                privkey: privkey,\n                pubkey: pubkey,\n                address: address,\n            };\n        }));\n    }\n}\nexports.DirectSecp256k1HdWallet = DirectSecp256k1HdWallet;\n//# sourceMappingURL=directsecp256k1hdwallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DirectSecp256k1Wallet = void 0;\nconst amino_1 = __webpack_require__(/*! @cosmjs/amino */ \"(ssr)/./node_modules/@cosmjs/amino/build/index.js\");\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst signing_1 = __webpack_require__(/*! ./signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/signing.js\");\n/**\n * A wallet that holds a single secp256k1 keypair.\n *\n * If you want to work with BIP39 mnemonics and multiple accounts, use DirectSecp256k1HdWallet.\n */\nclass DirectSecp256k1Wallet {\n    /**\n     * Creates a DirectSecp256k1Wallet from the given private key\n     *\n     * @param privkey The private key.\n     * @param prefix The bech32 address prefix (human readable part). Defaults to \"cosmos\".\n     */\n    static async fromKey(privkey, prefix = \"cosmos\") {\n        const uncompressed = (await crypto_1.Secp256k1.makeKeypair(privkey)).pubkey;\n        return new DirectSecp256k1Wallet(privkey, crypto_1.Secp256k1.compressPubkey(uncompressed), prefix);\n    }\n    constructor(privkey, pubkey, prefix) {\n        this.privkey = privkey;\n        this.pubkey = pubkey;\n        this.prefix = prefix;\n    }\n    get address() {\n        return (0, encoding_1.toBech32)(this.prefix, (0, amino_1.rawSecp256k1PubkeyToRawAddress)(this.pubkey));\n    }\n    async getAccounts() {\n        return [\n            {\n                algo: \"secp256k1\",\n                address: this.address,\n                pubkey: this.pubkey,\n            },\n        ];\n    }\n    async signDirect(address, signDoc) {\n        const signBytes = (0, signing_1.makeSignBytes)(signDoc);\n        if (address !== this.address) {\n            throw new Error(`Address ${address} not found in wallet`);\n        }\n        const hashedMessage = (0, crypto_1.sha256)(signBytes);\n        const signature = await crypto_1.Secp256k1.createSignature(hashedMessage, this.privkey);\n        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);\n        const stdSignature = (0, amino_1.encodeSecp256k1Signature)(this.pubkey, signatureBytes);\n        return {\n            signed: signDoc,\n            signature: stdSignature,\n        };\n    }\n}\nexports.DirectSecp256k1Wallet = DirectSecp256k1Wallet;\n//# sourceMappingURL=directsecp256k1wallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL2RpcmVjdHNlY3AyNTZrMXdhbGxldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkI7QUFDN0IsZ0JBQWdCLG1CQUFPLENBQUMsd0VBQWU7QUFDdkMsaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QyxrQkFBa0IsbUJBQU8sQ0FBQyw4RUFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxTQUFTO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5cXE9uZURyaXZlXFxEZXNrdG9wXFx2YXVsdHF1ZXN0XFxub2RlX21vZHVsZXNcXEBjb3NtanNcXHByb3RvLXNpZ25pbmdcXGJ1aWxkXFxkaXJlY3RzZWNwMjU2azF3YWxsZXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRpcmVjdFNlY3AyNTZrMVdhbGxldCA9IHZvaWQgMDtcbmNvbnN0IGFtaW5vXzEgPSByZXF1aXJlKFwiQGNvc21qcy9hbWlub1wiKTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBjb3NtanMvY3J5cHRvXCIpO1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2VuY29kaW5nXCIpO1xuY29uc3Qgc2lnbmluZ18xID0gcmVxdWlyZShcIi4vc2lnbmluZ1wiKTtcbi8qKlxuICogQSB3YWxsZXQgdGhhdCBob2xkcyBhIHNpbmdsZSBzZWNwMjU2azEga2V5cGFpci5cbiAqXG4gKiBJZiB5b3Ugd2FudCB0byB3b3JrIHdpdGggQklQMzkgbW5lbW9uaWNzIGFuZCBtdWx0aXBsZSBhY2NvdW50cywgdXNlIERpcmVjdFNlY3AyNTZrMUhkV2FsbGV0LlxuICovXG5jbGFzcyBEaXJlY3RTZWNwMjU2azFXYWxsZXQge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBEaXJlY3RTZWNwMjU2azFXYWxsZXQgZnJvbSB0aGUgZ2l2ZW4gcHJpdmF0ZSBrZXlcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwcml2a2V5IFRoZSBwcml2YXRlIGtleS5cbiAgICAgKiBAcGFyYW0gcHJlZml4IFRoZSBiZWNoMzIgYWRkcmVzcyBwcmVmaXggKGh1bWFuIHJlYWRhYmxlIHBhcnQpLiBEZWZhdWx0cyB0byBcImNvc21vc1wiLlxuICAgICAqL1xuICAgIHN0YXRpYyBhc3luYyBmcm9tS2V5KHByaXZrZXksIHByZWZpeCA9IFwiY29zbW9zXCIpIHtcbiAgICAgICAgY29uc3QgdW5jb21wcmVzc2VkID0gKGF3YWl0IGNyeXB0b18xLlNlY3AyNTZrMS5tYWtlS2V5cGFpcihwcml2a2V5KSkucHVia2V5O1xuICAgICAgICByZXR1cm4gbmV3IERpcmVjdFNlY3AyNTZrMVdhbGxldChwcml2a2V5LCBjcnlwdG9fMS5TZWNwMjU2azEuY29tcHJlc3NQdWJrZXkodW5jb21wcmVzc2VkKSwgcHJlZml4KTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IocHJpdmtleSwgcHVia2V5LCBwcmVmaXgpIHtcbiAgICAgICAgdGhpcy5wcml2a2V5ID0gcHJpdmtleTtcbiAgICAgICAgdGhpcy5wdWJrZXkgPSBwdWJrZXk7XG4gICAgICAgIHRoaXMucHJlZml4ID0gcHJlZml4O1xuICAgIH1cbiAgICBnZXQgYWRkcmVzcygpIHtcbiAgICAgICAgcmV0dXJuICgwLCBlbmNvZGluZ18xLnRvQmVjaDMyKSh0aGlzLnByZWZpeCwgKDAsIGFtaW5vXzEucmF3U2VjcDI1NmsxUHVia2V5VG9SYXdBZGRyZXNzKSh0aGlzLnB1YmtleSkpO1xuICAgIH1cbiAgICBhc3luYyBnZXRBY2NvdW50cygpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBhbGdvOiBcInNlY3AyNTZrMVwiLFxuICAgICAgICAgICAgICAgIGFkZHJlc3M6IHRoaXMuYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBwdWJrZXk6IHRoaXMucHVia2V5LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXTtcbiAgICB9XG4gICAgYXN5bmMgc2lnbkRpcmVjdChhZGRyZXNzLCBzaWduRG9jKSB7XG4gICAgICAgIGNvbnN0IHNpZ25CeXRlcyA9ICgwLCBzaWduaW5nXzEubWFrZVNpZ25CeXRlcykoc2lnbkRvYyk7XG4gICAgICAgIGlmIChhZGRyZXNzICE9PSB0aGlzLmFkZHJlc3MpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQWRkcmVzcyAke2FkZHJlc3N9IG5vdCBmb3VuZCBpbiB3YWxsZXRgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBoYXNoZWRNZXNzYWdlID0gKDAsIGNyeXB0b18xLnNoYTI1Nikoc2lnbkJ5dGVzKTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgY3J5cHRvXzEuU2VjcDI1NmsxLmNyZWF0ZVNpZ25hdHVyZShoYXNoZWRNZXNzYWdlLCB0aGlzLnByaXZrZXkpO1xuICAgICAgICBjb25zdCBzaWduYXR1cmVCeXRlcyA9IG5ldyBVaW50OEFycmF5KFsuLi5zaWduYXR1cmUucigzMiksIC4uLnNpZ25hdHVyZS5zKDMyKV0pO1xuICAgICAgICBjb25zdCBzdGRTaWduYXR1cmUgPSAoMCwgYW1pbm9fMS5lbmNvZGVTZWNwMjU2azFTaWduYXR1cmUpKHRoaXMucHVia2V5LCBzaWduYXR1cmVCeXRlcyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzaWduZWQ6IHNpZ25Eb2MsXG4gICAgICAgICAgICBzaWduYXR1cmU6IHN0ZFNpZ25hdHVyZSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLkRpcmVjdFNlY3AyNTZrMVdhbGxldCA9IERpcmVjdFNlY3AyNTZrMVdhbGxldDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpcmVjdHNlY3AyNTZrMXdhbGxldC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseCoins = exports.coins = exports.coin = exports.executeKdf = exports.makeSignDoc = exports.makeSignBytes = exports.makeAuthInfoBytes = exports.isOfflineDirectSigner = exports.Registry = exports.isTxBodyEncodeObject = exports.isTsProtoGeneratedType = exports.isPbjsGeneratedType = exports.encodePubkey = exports.decodePubkey = exports.decodeOptionalPubkey = exports.anyToSinglePubkey = exports.makeCosmoshubPath = exports.DirectSecp256k1Wallet = exports.extractKdfConfiguration = exports.DirectSecp256k1HdWallet = exports.decodeTxRaw = void 0;\n// This type happens to be shared between Amino and Direct sign modes\nvar decode_1 = __webpack_require__(/*! ./decode */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/decode.js\");\nObject.defineProperty(exports, \"decodeTxRaw\", ({ enumerable: true, get: function () { return decode_1.decodeTxRaw; } }));\nvar directsecp256k1hdwallet_1 = __webpack_require__(/*! ./directsecp256k1hdwallet */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js\");\nObject.defineProperty(exports, \"DirectSecp256k1HdWallet\", ({ enumerable: true, get: function () { return directsecp256k1hdwallet_1.DirectSecp256k1HdWallet; } }));\nObject.defineProperty(exports, \"extractKdfConfiguration\", ({ enumerable: true, get: function () { return directsecp256k1hdwallet_1.extractKdfConfiguration; } }));\nvar directsecp256k1wallet_1 = __webpack_require__(/*! ./directsecp256k1wallet */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js\");\nObject.defineProperty(exports, \"DirectSecp256k1Wallet\", ({ enumerable: true, get: function () { return directsecp256k1wallet_1.DirectSecp256k1Wallet; } }));\nvar paths_1 = __webpack_require__(/*! ./paths */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/paths.js\");\nObject.defineProperty(exports, \"makeCosmoshubPath\", ({ enumerable: true, get: function () { return paths_1.makeCosmoshubPath; } }));\nvar pubkey_1 = __webpack_require__(/*! ./pubkey */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/pubkey.js\");\nObject.defineProperty(exports, \"anyToSinglePubkey\", ({ enumerable: true, get: function () { return pubkey_1.anyToSinglePubkey; } }));\nObject.defineProperty(exports, \"decodeOptionalPubkey\", ({ enumerable: true, get: function () { return pubkey_1.decodeOptionalPubkey; } }));\nObject.defineProperty(exports, \"decodePubkey\", ({ enumerable: true, get: function () { return pubkey_1.decodePubkey; } }));\nObject.defineProperty(exports, \"encodePubkey\", ({ enumerable: true, get: function () { return pubkey_1.encodePubkey; } }));\nvar registry_1 = __webpack_require__(/*! ./registry */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/registry.js\");\nObject.defineProperty(exports, \"isPbjsGeneratedType\", ({ enumerable: true, get: function () { return registry_1.isPbjsGeneratedType; } }));\nObject.defineProperty(exports, \"isTsProtoGeneratedType\", ({ enumerable: true, get: function () { return registry_1.isTsProtoGeneratedType; } }));\nObject.defineProperty(exports, \"isTxBodyEncodeObject\", ({ enumerable: true, get: function () { return registry_1.isTxBodyEncodeObject; } }));\nObject.defineProperty(exports, \"Registry\", ({ enumerable: true, get: function () { return registry_1.Registry; } }));\nvar signer_1 = __webpack_require__(/*! ./signer */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/signer.js\");\nObject.defineProperty(exports, \"isOfflineDirectSigner\", ({ enumerable: true, get: function () { return signer_1.isOfflineDirectSigner; } }));\nvar signing_1 = __webpack_require__(/*! ./signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/signing.js\");\nObject.defineProperty(exports, \"makeAuthInfoBytes\", ({ enumerable: true, get: function () { return signing_1.makeAuthInfoBytes; } }));\nObject.defineProperty(exports, \"makeSignBytes\", ({ enumerable: true, get: function () { return signing_1.makeSignBytes; } }));\nObject.defineProperty(exports, \"makeSignDoc\", ({ enumerable: true, get: function () { return signing_1.makeSignDoc; } }));\nvar wallet_1 = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/wallet.js\");\nObject.defineProperty(exports, \"executeKdf\", ({ enumerable: true, get: function () { return wallet_1.executeKdf; } }));\n// re-exports\nvar amino_1 = __webpack_require__(/*! @cosmjs/amino */ \"(ssr)/./node_modules/@cosmjs/amino/build/index.js\");\nObject.defineProperty(exports, \"coin\", ({ enumerable: true, get: function () { return amino_1.coin; } }));\nObject.defineProperty(exports, \"coins\", ({ enumerable: true, get: function () { return amino_1.coins; } }));\nObject.defineProperty(exports, \"parseCoins\", ({ enumerable: true, get: function () { return amino_1.parseCoins; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQixHQUFHLGFBQWEsR0FBRyxZQUFZLEdBQUcsa0JBQWtCLEdBQUcsbUJBQW1CLEdBQUcscUJBQXFCLEdBQUcseUJBQXlCLEdBQUcsNkJBQTZCLEdBQUcsZ0JBQWdCLEdBQUcsNEJBQTRCLEdBQUcsOEJBQThCLEdBQUcsMkJBQTJCLEdBQUcsb0JBQW9CLEdBQUcsb0JBQW9CLEdBQUcsNEJBQTRCLEdBQUcseUJBQXlCLEdBQUcseUJBQXlCLEdBQUcsNkJBQTZCLEdBQUcsK0JBQStCLEdBQUcsK0JBQStCLEdBQUcsbUJBQW1CO0FBQ2hpQjtBQUNBLGVBQWUsbUJBQU8sQ0FBQyw0RUFBVTtBQUNqQywrQ0FBOEMsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDdEgsZ0NBQWdDLG1CQUFPLENBQUMsOEdBQTJCO0FBQ25FLDJEQUEwRCxFQUFFLHFDQUFxQyw2REFBNkQsRUFBQztBQUMvSiwyREFBMEQsRUFBRSxxQ0FBcUMsNkRBQTZELEVBQUM7QUFDL0osOEJBQThCLG1CQUFPLENBQUMsMEdBQXlCO0FBQy9ELHlEQUF3RCxFQUFFLHFDQUFxQyx5REFBeUQsRUFBQztBQUN6SixjQUFjLG1CQUFPLENBQUMsMEVBQVM7QUFDL0IscURBQW9ELEVBQUUscUNBQXFDLHFDQUFxQyxFQUFDO0FBQ2pJLGVBQWUsbUJBQU8sQ0FBQyw0RUFBVTtBQUNqQyxxREFBb0QsRUFBRSxxQ0FBcUMsc0NBQXNDLEVBQUM7QUFDbEksd0RBQXVELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3hJLGdEQUErQyxFQUFFLHFDQUFxQyxpQ0FBaUMsRUFBQztBQUN4SCxnREFBK0MsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDeEgsaUJBQWlCLG1CQUFPLENBQUMsZ0ZBQVk7QUFDckMsdURBQXNELEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQ3hJLDBEQUF5RCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUM5SSx3REFBdUQsRUFBRSxxQ0FBcUMsMkNBQTJDLEVBQUM7QUFDMUksNENBQTJDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2xILGVBQWUsbUJBQU8sQ0FBQyw0RUFBVTtBQUNqQyx5REFBd0QsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDMUksZ0JBQWdCLG1CQUFPLENBQUMsOEVBQVc7QUFDbkMscURBQW9ELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ25JLGlEQUFnRCxFQUFFLHFDQUFxQyxtQ0FBbUMsRUFBQztBQUMzSCwrQ0FBOEMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDdkgsZUFBZSxtQkFBTyxDQUFDLDRFQUFVO0FBQ2pDLDhDQUE2QyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNwSDtBQUNBLGNBQWMsbUJBQU8sQ0FBQyx3RUFBZTtBQUNyQyx3Q0FBdUMsRUFBRSxxQ0FBcUMsd0JBQXdCLEVBQUM7QUFDdkcseUNBQXdDLEVBQUUscUNBQXFDLHlCQUF5QixFQUFDO0FBQ3pHLDhDQUE2QyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNuSCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcT25lRHJpdmVcXERlc2t0b3BcXHZhdWx0cXVlc3RcXG5vZGVfbW9kdWxlc1xcQGNvc21qc1xccHJvdG8tc2lnbmluZ1xcYnVpbGRcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJzZUNvaW5zID0gZXhwb3J0cy5jb2lucyA9IGV4cG9ydHMuY29pbiA9IGV4cG9ydHMuZXhlY3V0ZUtkZiA9IGV4cG9ydHMubWFrZVNpZ25Eb2MgPSBleHBvcnRzLm1ha2VTaWduQnl0ZXMgPSBleHBvcnRzLm1ha2VBdXRoSW5mb0J5dGVzID0gZXhwb3J0cy5pc09mZmxpbmVEaXJlY3RTaWduZXIgPSBleHBvcnRzLlJlZ2lzdHJ5ID0gZXhwb3J0cy5pc1R4Qm9keUVuY29kZU9iamVjdCA9IGV4cG9ydHMuaXNUc1Byb3RvR2VuZXJhdGVkVHlwZSA9IGV4cG9ydHMuaXNQYmpzR2VuZXJhdGVkVHlwZSA9IGV4cG9ydHMuZW5jb2RlUHVia2V5ID0gZXhwb3J0cy5kZWNvZGVQdWJrZXkgPSBleHBvcnRzLmRlY29kZU9wdGlvbmFsUHVia2V5ID0gZXhwb3J0cy5hbnlUb1NpbmdsZVB1YmtleSA9IGV4cG9ydHMubWFrZUNvc21vc2h1YlBhdGggPSBleHBvcnRzLkRpcmVjdFNlY3AyNTZrMVdhbGxldCA9IGV4cG9ydHMuZXh0cmFjdEtkZkNvbmZpZ3VyYXRpb24gPSBleHBvcnRzLkRpcmVjdFNlY3AyNTZrMUhkV2FsbGV0ID0gZXhwb3J0cy5kZWNvZGVUeFJhdyA9IHZvaWQgMDtcbi8vIFRoaXMgdHlwZSBoYXBwZW5zIHRvIGJlIHNoYXJlZCBiZXR3ZWVuIEFtaW5vIGFuZCBEaXJlY3Qgc2lnbiBtb2Rlc1xudmFyIGRlY29kZV8xID0gcmVxdWlyZShcIi4vZGVjb2RlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVjb2RlVHhSYXdcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRlY29kZV8xLmRlY29kZVR4UmF3OyB9IH0pO1xudmFyIGRpcmVjdHNlY3AyNTZrMWhkd2FsbGV0XzEgPSByZXF1aXJlKFwiLi9kaXJlY3RzZWNwMjU2azFoZHdhbGxldFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkRpcmVjdFNlY3AyNTZrMUhkV2FsbGV0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBkaXJlY3RzZWNwMjU2azFoZHdhbGxldF8xLkRpcmVjdFNlY3AyNTZrMUhkV2FsbGV0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZXh0cmFjdEtkZkNvbmZpZ3VyYXRpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpcmVjdHNlY3AyNTZrMWhkd2FsbGV0XzEuZXh0cmFjdEtkZkNvbmZpZ3VyYXRpb247IH0gfSk7XG52YXIgZGlyZWN0c2VjcDI1Nmsxd2FsbGV0XzEgPSByZXF1aXJlKFwiLi9kaXJlY3RzZWNwMjU2azF3YWxsZXRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJEaXJlY3RTZWNwMjU2azFXYWxsZXRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpcmVjdHNlY3AyNTZrMXdhbGxldF8xLkRpcmVjdFNlY3AyNTZrMVdhbGxldDsgfSB9KTtcbnZhciBwYXRoc18xID0gcmVxdWlyZShcIi4vcGF0aHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJtYWtlQ29zbW9zaHViUGF0aFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcGF0aHNfMS5tYWtlQ29zbW9zaHViUGF0aDsgfSB9KTtcbnZhciBwdWJrZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmtleVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFueVRvU2luZ2xlUHVia2V5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwdWJrZXlfMS5hbnlUb1NpbmdsZVB1YmtleTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlY29kZU9wdGlvbmFsUHVia2V5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwdWJrZXlfMS5kZWNvZGVPcHRpb25hbFB1YmtleTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlY29kZVB1YmtleVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcHVia2V5XzEuZGVjb2RlUHVia2V5OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZW5jb2RlUHVia2V5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwdWJrZXlfMS5lbmNvZGVQdWJrZXk7IH0gfSk7XG52YXIgcmVnaXN0cnlfMSA9IHJlcXVpcmUoXCIuL3JlZ2lzdHJ5XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNQYmpzR2VuZXJhdGVkVHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVnaXN0cnlfMS5pc1BianNHZW5lcmF0ZWRUeXBlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNUc1Byb3RvR2VuZXJhdGVkVHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVnaXN0cnlfMS5pc1RzUHJvdG9HZW5lcmF0ZWRUeXBlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNUeEJvZHlFbmNvZGVPYmplY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlZ2lzdHJ5XzEuaXNUeEJvZHlFbmNvZGVPYmplY3Q7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZWdpc3RyeVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVnaXN0cnlfMS5SZWdpc3RyeTsgfSB9KTtcbnZhciBzaWduZXJfMSA9IHJlcXVpcmUoXCIuL3NpZ25lclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzT2ZmbGluZURpcmVjdFNpZ25lclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2lnbmVyXzEuaXNPZmZsaW5lRGlyZWN0U2lnbmVyOyB9IH0pO1xudmFyIHNpZ25pbmdfMSA9IHJlcXVpcmUoXCIuL3NpZ25pbmdcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJtYWtlQXV0aEluZm9CeXRlc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2lnbmluZ18xLm1ha2VBdXRoSW5mb0J5dGVzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibWFrZVNpZ25CeXRlc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2lnbmluZ18xLm1ha2VTaWduQnl0ZXM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJtYWtlU2lnbkRvY1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2lnbmluZ18xLm1ha2VTaWduRG9jOyB9IH0pO1xudmFyIHdhbGxldF8xID0gcmVxdWlyZShcIi4vd2FsbGV0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZXhlY3V0ZUtkZlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gd2FsbGV0XzEuZXhlY3V0ZUtkZjsgfSB9KTtcbi8vIHJlLWV4cG9ydHNcbnZhciBhbWlub18xID0gcmVxdWlyZShcIkBjb3NtanMvYW1pbm9cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjb2luXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhbWlub18xLmNvaW47IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjb2luc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYW1pbm9fMS5jb2luczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlQ29pbnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFtaW5vXzEucGFyc2VDb2luczsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/paths.js":
/*!***********************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/paths.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeCosmoshubPath = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\n/**\n * The Cosmos Hub derivation path in the form `m/44'/118'/0'/0/a`\n * with 0-based account index `a`.\n */\nfunction makeCosmoshubPath(a) {\n    return [\n        crypto_1.Slip10RawIndex.hardened(44),\n        crypto_1.Slip10RawIndex.hardened(118),\n        crypto_1.Slip10RawIndex.hardened(0),\n        crypto_1.Slip10RawIndex.normal(0),\n        crypto_1.Slip10RawIndex.normal(a),\n    ];\n}\nexports.makeCosmoshubPath = makeCosmoshubPath;\n//# sourceMappingURL=paths.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL3BhdGhzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QixpQkFBaUIsbUJBQU8sQ0FBQywwRUFBZ0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5cXE9uZURyaXZlXFxEZXNrdG9wXFx2YXVsdHF1ZXN0XFxub2RlX21vZHVsZXNcXEBjb3NtanNcXHByb3RvLXNpZ25pbmdcXGJ1aWxkXFxwYXRocy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWFrZUNvc21vc2h1YlBhdGggPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAY29zbWpzL2NyeXB0b1wiKTtcbi8qKlxuICogVGhlIENvc21vcyBIdWIgZGVyaXZhdGlvbiBwYXRoIGluIHRoZSBmb3JtIGBtLzQ0Jy8xMTgnLzAnLzAvYWBcbiAqIHdpdGggMC1iYXNlZCBhY2NvdW50IGluZGV4IGBhYC5cbiAqL1xuZnVuY3Rpb24gbWFrZUNvc21vc2h1YlBhdGgoYSkge1xuICAgIHJldHVybiBbXG4gICAgICAgIGNyeXB0b18xLlNsaXAxMFJhd0luZGV4LmhhcmRlbmVkKDQ0KSxcbiAgICAgICAgY3J5cHRvXzEuU2xpcDEwUmF3SW5kZXguaGFyZGVuZWQoMTE4KSxcbiAgICAgICAgY3J5cHRvXzEuU2xpcDEwUmF3SW5kZXguaGFyZGVuZWQoMCksXG4gICAgICAgIGNyeXB0b18xLlNsaXAxMFJhd0luZGV4Lm5vcm1hbCgwKSxcbiAgICAgICAgY3J5cHRvXzEuU2xpcDEwUmF3SW5kZXgubm9ybWFsKGEpLFxuICAgIF07XG59XG5leHBvcnRzLm1ha2VDb3Ntb3NodWJQYXRoID0gbWFrZUNvc21vc2h1YlBhdGg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRocy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/paths.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/pubkey.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/pubkey.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeOptionalPubkey = exports.decodePubkey = exports.anyToSinglePubkey = exports.encodePubkey = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst amino_1 = __webpack_require__(/*! @cosmjs/amino */ \"(ssr)/./node_modules/@cosmjs/amino/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst keys_1 = __webpack_require__(/*! cosmjs-types/cosmos/crypto/ed25519/keys */ \"(ssr)/./node_modules/cosmjs-types/cosmos/crypto/ed25519/keys.js\");\nconst keys_2 = __webpack_require__(/*! cosmjs-types/cosmos/crypto/multisig/keys */ \"(ssr)/./node_modules/cosmjs-types/cosmos/crypto/multisig/keys.js\");\nconst keys_3 = __webpack_require__(/*! cosmjs-types/cosmos/crypto/secp256k1/keys */ \"(ssr)/./node_modules/cosmjs-types/cosmos/crypto/secp256k1/keys.js\");\nconst any_1 = __webpack_require__(/*! cosmjs-types/google/protobuf/any */ \"(ssr)/./node_modules/cosmjs-types/google/protobuf/any.js\");\n/**\n * Takes a pubkey in the Amino JSON object style (type/value wrapper)\n * and convertes it into a protobuf `Any`.\n *\n * This is the reverse operation to `decodePubkey`.\n */\nfunction encodePubkey(pubkey) {\n    if ((0, amino_1.isSecp256k1Pubkey)(pubkey)) {\n        const pubkeyProto = keys_3.PubKey.fromPartial({\n            key: (0, encoding_1.fromBase64)(pubkey.value),\n        });\n        return any_1.Any.fromPartial({\n            typeUrl: \"/cosmos.crypto.secp256k1.PubKey\",\n            value: Uint8Array.from(keys_3.PubKey.encode(pubkeyProto).finish()),\n        });\n    }\n    else if ((0, amino_1.isEd25519Pubkey)(pubkey)) {\n        const pubkeyProto = keys_1.PubKey.fromPartial({\n            key: (0, encoding_1.fromBase64)(pubkey.value),\n        });\n        return any_1.Any.fromPartial({\n            typeUrl: \"/cosmos.crypto.ed25519.PubKey\",\n            value: Uint8Array.from(keys_1.PubKey.encode(pubkeyProto).finish()),\n        });\n    }\n    else if ((0, amino_1.isMultisigThresholdPubkey)(pubkey)) {\n        const pubkeyProto = keys_2.LegacyAminoPubKey.fromPartial({\n            threshold: math_1.Uint53.fromString(pubkey.value.threshold).toNumber(),\n            publicKeys: pubkey.value.pubkeys.map(encodePubkey),\n        });\n        return any_1.Any.fromPartial({\n            typeUrl: \"/cosmos.crypto.multisig.LegacyAminoPubKey\",\n            value: Uint8Array.from(keys_2.LegacyAminoPubKey.encode(pubkeyProto).finish()),\n        });\n    }\n    else {\n        throw new Error(`Pubkey type ${pubkey.type} not recognized`);\n    }\n}\nexports.encodePubkey = encodePubkey;\n/**\n * Decodes a single pubkey (i.e. not a multisig pubkey) from `Any` into\n * `SinglePubkey`.\n *\n * In most cases you probably want to use `decodePubkey`.\n */\nfunction anyToSinglePubkey(pubkey) {\n    switch (pubkey.typeUrl) {\n        case \"/cosmos.crypto.secp256k1.PubKey\": {\n            const { key } = keys_3.PubKey.decode(pubkey.value);\n            return (0, amino_1.encodeSecp256k1Pubkey)(key);\n        }\n        case \"/cosmos.crypto.ed25519.PubKey\": {\n            const { key } = keys_1.PubKey.decode(pubkey.value);\n            return (0, amino_1.encodeEd25519Pubkey)(key);\n        }\n        default:\n            throw new Error(`Pubkey type_url ${pubkey.typeUrl} not recognized as single public key type`);\n    }\n}\nexports.anyToSinglePubkey = anyToSinglePubkey;\n/**\n * Decodes a pubkey from a protobuf `Any` into `Pubkey`.\n * This supports single pubkeys such as Cosmos ed25519 and secp256k1 keys\n * as well as multisig threshold pubkeys.\n */\nfunction decodePubkey(pubkey) {\n    switch (pubkey.typeUrl) {\n        case \"/cosmos.crypto.secp256k1.PubKey\":\n        case \"/cosmos.crypto.ed25519.PubKey\": {\n            return anyToSinglePubkey(pubkey);\n        }\n        case \"/cosmos.crypto.multisig.LegacyAminoPubKey\": {\n            const { threshold, publicKeys } = keys_2.LegacyAminoPubKey.decode(pubkey.value);\n            const out = {\n                type: \"tendermint/PubKeyMultisigThreshold\",\n                value: {\n                    threshold: threshold.toString(),\n                    pubkeys: publicKeys.map(anyToSinglePubkey),\n                },\n            };\n            return out;\n        }\n        default:\n            throw new Error(`Pubkey type URL '${pubkey.typeUrl}' not recognized`);\n    }\n}\nexports.decodePubkey = decodePubkey;\n/**\n * Decodes an optional pubkey from a protobuf `Any` into `Pubkey | null`.\n * This supports single pubkeys such as Cosmos ed25519 and secp256k1 keys\n * as well as multisig threshold pubkeys.\n */\nfunction decodeOptionalPubkey(pubkey) {\n    if (!pubkey)\n        return null;\n    if (pubkey.typeUrl) {\n        if (pubkey.value.length) {\n            // both set\n            return decodePubkey(pubkey);\n        }\n        else {\n            throw new Error(`Pubkey is an Any with type URL '${pubkey.typeUrl}' but an empty value`);\n        }\n    }\n    else {\n        if (pubkey.value.length) {\n            throw new Error(`Pubkey is an Any with an empty type URL but a value set`);\n        }\n        else {\n            // both unset, assuming this empty instance means null\n            return null;\n        }\n    }\n}\nexports.decodeOptionalPubkey = decodeOptionalPubkey;\n//# sourceMappingURL=pubkey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/pubkey.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/registry.js":
/*!**************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/registry.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Registry = exports.isTxBodyEncodeObject = exports.isPbjsGeneratedType = exports.isTsProtoGeneratedType = exports.isTelescopeGeneratedType = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/bank/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/bank/v1beta1/tx.js\");\nconst coin_1 = __webpack_require__(/*! cosmjs-types/cosmos/base/v1beta1/coin */ \"(ssr)/./node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js\");\nconst tx_2 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js\");\nconst any_1 = __webpack_require__(/*! cosmjs-types/google/protobuf/any */ \"(ssr)/./node_modules/cosmjs-types/google/protobuf/any.js\");\nfunction isTelescopeGeneratedType(type) {\n    const casted = type;\n    return typeof casted.fromPartial === \"function\" && typeof casted.typeUrl == \"string\";\n}\nexports.isTelescopeGeneratedType = isTelescopeGeneratedType;\nfunction isTsProtoGeneratedType(type) {\n    return typeof type.fromPartial === \"function\";\n}\nexports.isTsProtoGeneratedType = isTsProtoGeneratedType;\nfunction isPbjsGeneratedType(type) {\n    return !isTsProtoGeneratedType(type);\n}\nexports.isPbjsGeneratedType = isPbjsGeneratedType;\nconst defaultTypeUrls = {\n    cosmosCoin: \"/cosmos.base.v1beta1.Coin\",\n    cosmosMsgSend: \"/cosmos.bank.v1beta1.MsgSend\",\n    cosmosTxBody: \"/cosmos.tx.v1beta1.TxBody\",\n    googleAny: \"/google.protobuf.Any\",\n};\nfunction isTxBodyEncodeObject(encodeObject) {\n    return encodeObject.typeUrl === \"/cosmos.tx.v1beta1.TxBody\";\n}\nexports.isTxBodyEncodeObject = isTxBodyEncodeObject;\nclass Registry {\n    /**\n     * Creates a new Registry for mapping protobuf type identifiers/type URLs to\n     * actual implementations. Those implementations are typically generated with ts-proto\n     * but we also support protobuf.js as a type generator.\n     *\n     * If there is no parameter given, a `new Registry()` adds the types `Coin` and `MsgSend`\n     * for historic reasons. Those can be overriden by customTypes.\n     *\n     * There are currently two methods for adding new types:\n     * 1. Passing types to the constructor.\n     * 2. Using the `register()` method\n     */\n    constructor(customTypes) {\n        const { cosmosCoin, cosmosMsgSend } = defaultTypeUrls;\n        this.types = customTypes\n            ? new Map([...customTypes])\n            : new Map([\n                [cosmosCoin, coin_1.Coin],\n                [cosmosMsgSend, tx_1.MsgSend],\n            ]);\n    }\n    register(typeUrl, type) {\n        this.types.set(typeUrl, type);\n    }\n    /**\n     * Looks up a type that was previously added to the registry.\n     *\n     * The generator information (ts-proto or pbjs) gets lost along the way.\n     * If you need to work with the result type in TypeScript, you can use:\n     *\n     * ```\n     * import { assert } from \"@cosmjs/utils\";\n     *\n     * const Coin = registry.lookupType(\"/cosmos.base.v1beta1.Coin\");\n     * assert(Coin); // Ensures not unset\n     * assert(isTsProtoGeneratedType(Coin)); // Ensures this is the type we expect\n     *\n     * // Coin is typed TsProtoGeneratedType now.\n     * ```\n     */\n    lookupType(typeUrl) {\n        return this.types.get(typeUrl);\n    }\n    lookupTypeWithError(typeUrl) {\n        const type = this.lookupType(typeUrl);\n        if (!type) {\n            throw new Error(`Unregistered type url: ${typeUrl}`);\n        }\n        return type;\n    }\n    /**\n     * Takes a typeUrl/value pair and encodes the value to protobuf if\n     * the given type was previously registered.\n     *\n     * If the value has to be wrapped in an Any, this needs to be done\n     * manually after this call. Or use `encodeAsAny` instead.\n     */\n    encode(encodeObject) {\n        const { value, typeUrl } = encodeObject;\n        if (isTxBodyEncodeObject(encodeObject)) {\n            return this.encodeTxBody(value);\n        }\n        const type = this.lookupTypeWithError(typeUrl);\n        const instance = isTelescopeGeneratedType(type) || isTsProtoGeneratedType(type)\n            ? type.fromPartial(value)\n            : type.create(value);\n        return type.encode(instance).finish();\n    }\n    /**\n     * Takes a typeUrl/value pair and encodes the value to an Any if\n     * the given type was previously registered.\n     */\n    encodeAsAny(encodeObject) {\n        const binaryValue = this.encode(encodeObject);\n        return any_1.Any.fromPartial({\n            typeUrl: encodeObject.typeUrl,\n            value: binaryValue,\n        });\n    }\n    encodeTxBody(txBodyFields) {\n        const wrappedMessages = txBodyFields.messages.map((message) => this.encodeAsAny(message));\n        const txBody = tx_2.TxBody.fromPartial({\n            ...txBodyFields,\n            timeoutHeight: BigInt(txBodyFields.timeoutHeight?.toString() ?? \"0\"),\n            messages: wrappedMessages,\n        });\n        return tx_2.TxBody.encode(txBody).finish();\n    }\n    decode({ typeUrl, value }) {\n        if (typeUrl === defaultTypeUrls.cosmosTxBody) {\n            return this.decodeTxBody(value);\n        }\n        const type = this.lookupTypeWithError(typeUrl);\n        const decoded = type.decode(value);\n        Object.entries(decoded).forEach(([key, val]) => {\n            if (typeof Buffer !== \"undefined\" && typeof Buffer.isBuffer !== \"undefined\" && Buffer.isBuffer(val)) {\n                decoded[key] = Uint8Array.from(val);\n            }\n        });\n        return decoded;\n    }\n    decodeTxBody(txBody) {\n        const decodedTxBody = tx_2.TxBody.decode(txBody);\n        return {\n            ...decodedTxBody,\n            messages: decodedTxBody.messages.map(({ typeUrl: typeUrl, value }) => {\n                if (!typeUrl) {\n                    throw new Error(\"Missing type_url in Any\");\n                }\n                if (!value) {\n                    throw new Error(\"Missing value in Any\");\n                }\n                return this.decode({ typeUrl, value });\n            }),\n        };\n    }\n}\nexports.Registry = Registry;\n//# sourceMappingURL=registry.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/registry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/signer.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/signer.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isOfflineDirectSigner = void 0;\nfunction isOfflineDirectSigner(signer) {\n    return signer.signDirect !== undefined;\n}\nexports.isOfflineDirectSigner = isOfflineDirectSigner;\n//# sourceMappingURL=signer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL3NpZ25lci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxwcm90by1zaWduaW5nXFxidWlsZFxcc2lnbmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc09mZmxpbmVEaXJlY3RTaWduZXIgPSB2b2lkIDA7XG5mdW5jdGlvbiBpc09mZmxpbmVEaXJlY3RTaWduZXIoc2lnbmVyKSB7XG4gICAgcmV0dXJuIHNpZ25lci5zaWduRGlyZWN0ICE9PSB1bmRlZmluZWQ7XG59XG5leHBvcnRzLmlzT2ZmbGluZURpcmVjdFNpZ25lciA9IGlzT2ZmbGluZURpcmVjdFNpZ25lcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25lci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/signer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/signing.js":
/*!*************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/signing.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeSignBytes = exports.makeSignDoc = exports.makeAuthInfoBytes = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst signing_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/signing/v1beta1/signing */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js\");\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js\");\n/**\n * Create signer infos from the provided signers.\n *\n * This implementation does not support different signing modes for the different signers.\n */\nfunction makeSignerInfos(signers, signMode) {\n    return signers.map(({ pubkey, sequence }) => ({\n        publicKey: pubkey,\n        modeInfo: {\n            single: { mode: signMode },\n        },\n        sequence: BigInt(sequence),\n    }));\n}\n/**\n * Creates and serializes an AuthInfo document.\n *\n * This implementation does not support different signing modes for the different signers.\n */\nfunction makeAuthInfoBytes(signers, feeAmount, gasLimit, feeGranter, feePayer, signMode = signing_1.SignMode.SIGN_MODE_DIRECT) {\n    // Required arguments 4 and 5 were added in CosmJS 0.29. Use runtime checks to help our non-TS users.\n    (0, utils_1.assert)(feeGranter === undefined || typeof feeGranter === \"string\", \"feeGranter must be undefined or string\");\n    (0, utils_1.assert)(feePayer === undefined || typeof feePayer === \"string\", \"feePayer must be undefined or string\");\n    const authInfo = tx_1.AuthInfo.fromPartial({\n        signerInfos: makeSignerInfos(signers, signMode),\n        fee: {\n            amount: [...feeAmount],\n            gasLimit: BigInt(gasLimit),\n            granter: feeGranter,\n            payer: feePayer,\n        },\n    });\n    return tx_1.AuthInfo.encode(authInfo).finish();\n}\nexports.makeAuthInfoBytes = makeAuthInfoBytes;\nfunction makeSignDoc(bodyBytes, authInfoBytes, chainId, accountNumber) {\n    return {\n        bodyBytes: bodyBytes,\n        authInfoBytes: authInfoBytes,\n        chainId: chainId,\n        accountNumber: BigInt(accountNumber),\n    };\n}\nexports.makeSignDoc = makeSignDoc;\nfunction makeSignBytes({ accountNumber, authInfoBytes, bodyBytes, chainId }) {\n    const signDoc = tx_1.SignDoc.fromPartial({\n        accountNumber: accountNumber,\n        authInfoBytes: authInfoBytes,\n        bodyBytes: bodyBytes,\n        chainId: chainId,\n    });\n    return tx_1.SignDoc.encode(signDoc).finish();\n}\nexports.makeSignBytes = makeSignBytes;\n//# sourceMappingURL=signing.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL3NpZ25pbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsbUJBQW1CLEdBQUcseUJBQXlCO0FBQ3ZFO0FBQ0EsZ0JBQWdCLG1CQUFPLENBQUMsd0VBQWU7QUFDdkMsa0JBQWtCLG1CQUFPLENBQUMsOEhBQWdEO0FBQzFFLGFBQWEsbUJBQU8sQ0FBQyxvR0FBbUM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGtCQUFrQjtBQUM1QztBQUNBO0FBQ0Esc0JBQXNCLGdCQUFnQjtBQUN0QyxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLHlCQUF5QixrREFBa0Q7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFxwcm90by1zaWduaW5nXFxidWlsZFxcc2lnbmluZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWFrZVNpZ25CeXRlcyA9IGV4cG9ydHMubWFrZVNpZ25Eb2MgPSBleHBvcnRzLm1ha2VBdXRoSW5mb0J5dGVzID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uICovXG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBjb3NtanMvdXRpbHNcIik7XG5jb25zdCBzaWduaW5nXzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2Nvc21vcy90eC9zaWduaW5nL3YxYmV0YTEvc2lnbmluZ1wiKTtcbmNvbnN0IHR4XzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2Nvc21vcy90eC92MWJldGExL3R4XCIpO1xuLyoqXG4gKiBDcmVhdGUgc2lnbmVyIGluZm9zIGZyb20gdGhlIHByb3ZpZGVkIHNpZ25lcnMuXG4gKlxuICogVGhpcyBpbXBsZW1lbnRhdGlvbiBkb2VzIG5vdCBzdXBwb3J0IGRpZmZlcmVudCBzaWduaW5nIG1vZGVzIGZvciB0aGUgZGlmZmVyZW50IHNpZ25lcnMuXG4gKi9cbmZ1bmN0aW9uIG1ha2VTaWduZXJJbmZvcyhzaWduZXJzLCBzaWduTW9kZSkge1xuICAgIHJldHVybiBzaWduZXJzLm1hcCgoeyBwdWJrZXksIHNlcXVlbmNlIH0pID0+ICh7XG4gICAgICAgIHB1YmxpY0tleTogcHVia2V5LFxuICAgICAgICBtb2RlSW5mbzoge1xuICAgICAgICAgICAgc2luZ2xlOiB7IG1vZGU6IHNpZ25Nb2RlIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHNlcXVlbmNlOiBCaWdJbnQoc2VxdWVuY2UpLFxuICAgIH0pKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhbmQgc2VyaWFsaXplcyBhbiBBdXRoSW5mbyBkb2N1bWVudC5cbiAqXG4gKiBUaGlzIGltcGxlbWVudGF0aW9uIGRvZXMgbm90IHN1cHBvcnQgZGlmZmVyZW50IHNpZ25pbmcgbW9kZXMgZm9yIHRoZSBkaWZmZXJlbnQgc2lnbmVycy5cbiAqL1xuZnVuY3Rpb24gbWFrZUF1dGhJbmZvQnl0ZXMoc2lnbmVycywgZmVlQW1vdW50LCBnYXNMaW1pdCwgZmVlR3JhbnRlciwgZmVlUGF5ZXIsIHNpZ25Nb2RlID0gc2lnbmluZ18xLlNpZ25Nb2RlLlNJR05fTU9ERV9ESVJFQ1QpIHtcbiAgICAvLyBSZXF1aXJlZCBhcmd1bWVudHMgNCBhbmQgNSB3ZXJlIGFkZGVkIGluIENvc21KUyAwLjI5LiBVc2UgcnVudGltZSBjaGVja3MgdG8gaGVscCBvdXIgbm9uLVRTIHVzZXJzLlxuICAgICgwLCB1dGlsc18xLmFzc2VydCkoZmVlR3JhbnRlciA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiBmZWVHcmFudGVyID09PSBcInN0cmluZ1wiLCBcImZlZUdyYW50ZXIgbXVzdCBiZSB1bmRlZmluZWQgb3Igc3RyaW5nXCIpO1xuICAgICgwLCB1dGlsc18xLmFzc2VydCkoZmVlUGF5ZXIgPT09IHVuZGVmaW5lZCB8fCB0eXBlb2YgZmVlUGF5ZXIgPT09IFwic3RyaW5nXCIsIFwiZmVlUGF5ZXIgbXVzdCBiZSB1bmRlZmluZWQgb3Igc3RyaW5nXCIpO1xuICAgIGNvbnN0IGF1dGhJbmZvID0gdHhfMS5BdXRoSW5mby5mcm9tUGFydGlhbCh7XG4gICAgICAgIHNpZ25lckluZm9zOiBtYWtlU2lnbmVySW5mb3Moc2lnbmVycywgc2lnbk1vZGUpLFxuICAgICAgICBmZWU6IHtcbiAgICAgICAgICAgIGFtb3VudDogWy4uLmZlZUFtb3VudF0sXG4gICAgICAgICAgICBnYXNMaW1pdDogQmlnSW50KGdhc0xpbWl0KSxcbiAgICAgICAgICAgIGdyYW50ZXI6IGZlZUdyYW50ZXIsXG4gICAgICAgICAgICBwYXllcjogZmVlUGF5ZXIsXG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgcmV0dXJuIHR4XzEuQXV0aEluZm8uZW5jb2RlKGF1dGhJbmZvKS5maW5pc2goKTtcbn1cbmV4cG9ydHMubWFrZUF1dGhJbmZvQnl0ZXMgPSBtYWtlQXV0aEluZm9CeXRlcztcbmZ1bmN0aW9uIG1ha2VTaWduRG9jKGJvZHlCeXRlcywgYXV0aEluZm9CeXRlcywgY2hhaW5JZCwgYWNjb3VudE51bWJlcikge1xuICAgIHJldHVybiB7XG4gICAgICAgIGJvZHlCeXRlczogYm9keUJ5dGVzLFxuICAgICAgICBhdXRoSW5mb0J5dGVzOiBhdXRoSW5mb0J5dGVzLFxuICAgICAgICBjaGFpbklkOiBjaGFpbklkLFxuICAgICAgICBhY2NvdW50TnVtYmVyOiBCaWdJbnQoYWNjb3VudE51bWJlciksXG4gICAgfTtcbn1cbmV4cG9ydHMubWFrZVNpZ25Eb2MgPSBtYWtlU2lnbkRvYztcbmZ1bmN0aW9uIG1ha2VTaWduQnl0ZXMoeyBhY2NvdW50TnVtYmVyLCBhdXRoSW5mb0J5dGVzLCBib2R5Qnl0ZXMsIGNoYWluSWQgfSkge1xuICAgIGNvbnN0IHNpZ25Eb2MgPSB0eF8xLlNpZ25Eb2MuZnJvbVBhcnRpYWwoe1xuICAgICAgICBhY2NvdW50TnVtYmVyOiBhY2NvdW50TnVtYmVyLFxuICAgICAgICBhdXRoSW5mb0J5dGVzOiBhdXRoSW5mb0J5dGVzLFxuICAgICAgICBib2R5Qnl0ZXM6IGJvZHlCeXRlcyxcbiAgICAgICAgY2hhaW5JZDogY2hhaW5JZCxcbiAgICB9KTtcbiAgICByZXR1cm4gdHhfMS5TaWduRG9jLmVuY29kZShzaWduRG9jKS5maW5pc2goKTtcbn1cbmV4cG9ydHMubWFrZVNpZ25CeXRlcyA9IG1ha2VTaWduQnl0ZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaWduaW5nLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/signing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/wallet.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/wallet.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decrypt = exports.encrypt = exports.supportedAlgorithms = exports.executeKdf = exports.cosmjsSalt = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\n/**\n * A fixed salt is chosen to archive a deterministic password to key derivation.\n * This reduces the scope of a potential rainbow attack to all CosmJS users.\n * Must be 16 bytes due to implementation limitations.\n */\nexports.cosmjsSalt = (0, encoding_1.toAscii)(\"The CosmJS salt.\");\nasync function executeKdf(password, configuration) {\n    switch (configuration.algorithm) {\n        case \"argon2id\": {\n            const options = configuration.params;\n            if (!(0, crypto_1.isArgon2idOptions)(options))\n                throw new Error(\"Invalid format of argon2id params\");\n            return crypto_1.Argon2id.execute(password, exports.cosmjsSalt, options);\n        }\n        default:\n            throw new Error(\"Unsupported KDF algorithm\");\n    }\n}\nexports.executeKdf = executeKdf;\nexports.supportedAlgorithms = {\n    xchacha20poly1305Ietf: \"xchacha20poly1305-ietf\",\n};\nasync function encrypt(plaintext, encryptionKey, config) {\n    switch (config.algorithm) {\n        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {\n            const nonce = crypto_1.Random.getBytes(crypto_1.xchacha20NonceLength);\n            // Prepend fixed-length nonce to ciphertext as suggested in the example from https://github.com/jedisct1/libsodium.js#api\n            return new Uint8Array([\n                ...nonce,\n                ...(await crypto_1.Xchacha20poly1305Ietf.encrypt(plaintext, encryptionKey, nonce)),\n            ]);\n        }\n        default:\n            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);\n    }\n}\nexports.encrypt = encrypt;\nasync function decrypt(ciphertext, encryptionKey, config) {\n    switch (config.algorithm) {\n        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {\n            const nonce = ciphertext.slice(0, crypto_1.xchacha20NonceLength);\n            return crypto_1.Xchacha20poly1305Ietf.decrypt(ciphertext.slice(crypto_1.xchacha20NonceLength), encryptionKey, nonce);\n        }\n        default:\n            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);\n    }\n}\nexports.decrypt = decrypt;\n//# sourceMappingURL=wallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL3dhbGxldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLEdBQUcsZUFBZSxHQUFHLDJCQUEyQixHQUFHLGtCQUFrQixHQUFHLGtCQUFrQjtBQUN6RyxpQkFBaUIsbUJBQU8sQ0FBQywwRUFBZ0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWtCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxpQkFBaUI7QUFDbkY7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxpQkFBaUI7QUFDbkY7QUFDQTtBQUNBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcT25lRHJpdmVcXERlc2t0b3BcXHZhdWx0cXVlc3RcXG5vZGVfbW9kdWxlc1xcQGNvc21qc1xccHJvdG8tc2lnbmluZ1xcYnVpbGRcXHdhbGxldC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjcnlwdCA9IGV4cG9ydHMuZW5jcnlwdCA9IGV4cG9ydHMuc3VwcG9ydGVkQWxnb3JpdGhtcyA9IGV4cG9ydHMuZXhlY3V0ZUtkZiA9IGV4cG9ydHMuY29zbWpzU2FsdCA9IHZvaWQgMDtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBjb3NtanMvY3J5cHRvXCIpO1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2VuY29kaW5nXCIpO1xuLyoqXG4gKiBBIGZpeGVkIHNhbHQgaXMgY2hvc2VuIHRvIGFyY2hpdmUgYSBkZXRlcm1pbmlzdGljIHBhc3N3b3JkIHRvIGtleSBkZXJpdmF0aW9uLlxuICogVGhpcyByZWR1Y2VzIHRoZSBzY29wZSBvZiBhIHBvdGVudGlhbCByYWluYm93IGF0dGFjayB0byBhbGwgQ29zbUpTIHVzZXJzLlxuICogTXVzdCBiZSAxNiBieXRlcyBkdWUgdG8gaW1wbGVtZW50YXRpb24gbGltaXRhdGlvbnMuXG4gKi9cbmV4cG9ydHMuY29zbWpzU2FsdCA9ICgwLCBlbmNvZGluZ18xLnRvQXNjaWkpKFwiVGhlIENvc21KUyBzYWx0LlwiKTtcbmFzeW5jIGZ1bmN0aW9uIGV4ZWN1dGVLZGYocGFzc3dvcmQsIGNvbmZpZ3VyYXRpb24pIHtcbiAgICBzd2l0Y2ggKGNvbmZpZ3VyYXRpb24uYWxnb3JpdGhtKSB7XG4gICAgICAgIGNhc2UgXCJhcmdvbjJpZFwiOiB7XG4gICAgICAgICAgICBjb25zdCBvcHRpb25zID0gY29uZmlndXJhdGlvbi5wYXJhbXM7XG4gICAgICAgICAgICBpZiAoISgwLCBjcnlwdG9fMS5pc0FyZ29uMmlkT3B0aW9ucykob3B0aW9ucykpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBmb3JtYXQgb2YgYXJnb24yaWQgcGFyYW1zXCIpO1xuICAgICAgICAgICAgcmV0dXJuIGNyeXB0b18xLkFyZ29uMmlkLmV4ZWN1dGUocGFzc3dvcmQsIGV4cG9ydHMuY29zbWpzU2FsdCwgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIEtERiBhbGdvcml0aG1cIik7XG4gICAgfVxufVxuZXhwb3J0cy5leGVjdXRlS2RmID0gZXhlY3V0ZUtkZjtcbmV4cG9ydHMuc3VwcG9ydGVkQWxnb3JpdGhtcyA9IHtcbiAgICB4Y2hhY2hhMjBwb2x5MTMwNUlldGY6IFwieGNoYWNoYTIwcG9seTEzMDUtaWV0ZlwiLFxufTtcbmFzeW5jIGZ1bmN0aW9uIGVuY3J5cHQocGxhaW50ZXh0LCBlbmNyeXB0aW9uS2V5LCBjb25maWcpIHtcbiAgICBzd2l0Y2ggKGNvbmZpZy5hbGdvcml0aG0pIHtcbiAgICAgICAgY2FzZSBleHBvcnRzLnN1cHBvcnRlZEFsZ29yaXRobXMueGNoYWNoYTIwcG9seTEzMDVJZXRmOiB7XG4gICAgICAgICAgICBjb25zdCBub25jZSA9IGNyeXB0b18xLlJhbmRvbS5nZXRCeXRlcyhjcnlwdG9fMS54Y2hhY2hhMjBOb25jZUxlbmd0aCk7XG4gICAgICAgICAgICAvLyBQcmVwZW5kIGZpeGVkLWxlbmd0aCBub25jZSB0byBjaXBoZXJ0ZXh0IGFzIHN1Z2dlc3RlZCBpbiB0aGUgZXhhbXBsZSBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9qZWRpc2N0MS9saWJzb2RpdW0uanMjYXBpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoW1xuICAgICAgICAgICAgICAgIC4uLm5vbmNlLFxuICAgICAgICAgICAgICAgIC4uLihhd2FpdCBjcnlwdG9fMS5YY2hhY2hhMjBwb2x5MTMwNUlldGYuZW5jcnlwdChwbGFpbnRleHQsIGVuY3J5cHRpb25LZXksIG5vbmNlKSksXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBlbmNyeXB0aW9uIGFsZ29yaXRobTogJyR7Y29uZmlnLmFsZ29yaXRobX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5lbmNyeXB0ID0gZW5jcnlwdDtcbmFzeW5jIGZ1bmN0aW9uIGRlY3J5cHQoY2lwaGVydGV4dCwgZW5jcnlwdGlvbktleSwgY29uZmlnKSB7XG4gICAgc3dpdGNoIChjb25maWcuYWxnb3JpdGhtKSB7XG4gICAgICAgIGNhc2UgZXhwb3J0cy5zdXBwb3J0ZWRBbGdvcml0aG1zLnhjaGFjaGEyMHBvbHkxMzA1SWV0Zjoge1xuICAgICAgICAgICAgY29uc3Qgbm9uY2UgPSBjaXBoZXJ0ZXh0LnNsaWNlKDAsIGNyeXB0b18xLnhjaGFjaGEyME5vbmNlTGVuZ3RoKTtcbiAgICAgICAgICAgIHJldHVybiBjcnlwdG9fMS5YY2hhY2hhMjBwb2x5MTMwNUlldGYuZGVjcnlwdChjaXBoZXJ0ZXh0LnNsaWNlKGNyeXB0b18xLnhjaGFjaGEyME5vbmNlTGVuZ3RoKSwgZW5jcnlwdGlvbktleSwgbm9uY2UpO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY3J5cHRpb24gYWxnb3JpdGhtOiAnJHtjb25maWcuYWxnb3JpdGhtfSdgKTtcbiAgICB9XG59XG5leHBvcnRzLmRlY3J5cHQgPSBkZWNyeXB0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2FsbGV0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/arrays.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/arrays.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.arrayContentStartsWith = exports.arrayContentEquals = void 0;\n/**\n * Compares the content of two arrays-like objects for equality.\n *\n * Equality is defined as having equal length and element values, where element equality means `===` returning `true`.\n *\n * This allows you to compare the content of a Buffer, Uint8Array or number[], ignoring the specific type.\n * As a consequence, this returns different results than Jasmine's `toEqual`, which ensures elements have the same type.\n */\nfunction arrayContentEquals(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nexports.arrayContentEquals = arrayContentEquals;\n/**\n * Checks if `a` starts with the contents of `b`.\n *\n * This requires equality of the element values, where element equality means `===` returning `true`.\n *\n * This allows you to compare the content of a Buffer, Uint8Array or number[], ignoring the specific type.\n * As a consequence, this returns different results than Jasmine's `toEqual`, which ensures elements have the same type.\n */\nfunction arrayContentStartsWith(a, b) {\n    if (a.length < b.length)\n        return false;\n    for (let i = 0; i < b.length; ++i) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nexports.arrayContentStartsWith = arrayContentStartsWith;\n//# sourceMappingURL=arrays.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9hcnJheXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCLEdBQUcsMEJBQTBCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFx1dGlsc1xcYnVpbGRcXGFycmF5cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXJyYXlDb250ZW50U3RhcnRzV2l0aCA9IGV4cG9ydHMuYXJyYXlDb250ZW50RXF1YWxzID0gdm9pZCAwO1xuLyoqXG4gKiBDb21wYXJlcyB0aGUgY29udGVudCBvZiB0d28gYXJyYXlzLWxpa2Ugb2JqZWN0cyBmb3IgZXF1YWxpdHkuXG4gKlxuICogRXF1YWxpdHkgaXMgZGVmaW5lZCBhcyBoYXZpbmcgZXF1YWwgbGVuZ3RoIGFuZCBlbGVtZW50IHZhbHVlcywgd2hlcmUgZWxlbWVudCBlcXVhbGl0eSBtZWFucyBgPT09YCByZXR1cm5pbmcgYHRydWVgLlxuICpcbiAqIFRoaXMgYWxsb3dzIHlvdSB0byBjb21wYXJlIHRoZSBjb250ZW50IG9mIGEgQnVmZmVyLCBVaW50OEFycmF5IG9yIG51bWJlcltdLCBpZ25vcmluZyB0aGUgc3BlY2lmaWMgdHlwZS5cbiAqIEFzIGEgY29uc2VxdWVuY2UsIHRoaXMgcmV0dXJucyBkaWZmZXJlbnQgcmVzdWx0cyB0aGFuIEphc21pbmUncyBgdG9FcXVhbGAsIHdoaWNoIGVuc3VyZXMgZWxlbWVudHMgaGF2ZSB0aGUgc2FtZSB0eXBlLlxuICovXG5mdW5jdGlvbiBhcnJheUNvbnRlbnRFcXVhbHMoYSwgYikge1xuICAgIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgaWYgKGFbaV0gIT09IGJbaV0pXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0cy5hcnJheUNvbnRlbnRFcXVhbHMgPSBhcnJheUNvbnRlbnRFcXVhbHM7XG4vKipcbiAqIENoZWNrcyBpZiBgYWAgc3RhcnRzIHdpdGggdGhlIGNvbnRlbnRzIG9mIGBiYC5cbiAqXG4gKiBUaGlzIHJlcXVpcmVzIGVxdWFsaXR5IG9mIHRoZSBlbGVtZW50IHZhbHVlcywgd2hlcmUgZWxlbWVudCBlcXVhbGl0eSBtZWFucyBgPT09YCByZXR1cm5pbmcgYHRydWVgLlxuICpcbiAqIFRoaXMgYWxsb3dzIHlvdSB0byBjb21wYXJlIHRoZSBjb250ZW50IG9mIGEgQnVmZmVyLCBVaW50OEFycmF5IG9yIG51bWJlcltdLCBpZ25vcmluZyB0aGUgc3BlY2lmaWMgdHlwZS5cbiAqIEFzIGEgY29uc2VxdWVuY2UsIHRoaXMgcmV0dXJucyBkaWZmZXJlbnQgcmVzdWx0cyB0aGFuIEphc21pbmUncyBgdG9FcXVhbGAsIHdoaWNoIGVuc3VyZXMgZWxlbWVudHMgaGF2ZSB0aGUgc2FtZSB0eXBlLlxuICovXG5mdW5jdGlvbiBhcnJheUNvbnRlbnRTdGFydHNXaXRoKGEsIGIpIHtcbiAgICBpZiAoYS5sZW5ndGggPCBiLmxlbmd0aClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYi5sZW5ndGg7ICsraSkge1xuICAgICAgICBpZiAoYVtpXSAhPT0gYltpXSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnRzLmFycmF5Q29udGVudFN0YXJ0c1dpdGggPSBhcnJheUNvbnRlbnRTdGFydHNXaXRoO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJyYXlzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/arrays.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/assert.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/assert.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = void 0;\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg || \"condition is not truthy\");\n    }\n}\nexports.assert = assert;\nfunction assertDefined(value, msg) {\n    if (value === undefined) {\n        throw new Error(msg ?? \"value is undefined\");\n    }\n}\nexports.assertDefined = assertDefined;\nfunction assertDefinedAndNotNull(value, msg) {\n    if (value === undefined || value === null) {\n        throw new Error(msg ?? \"value is undefined or null\");\n    }\n}\nexports.assertDefinedAndNotNull = assertDefinedAndNotNull;\n//# sourceMappingURL=assert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9hc3NlcnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCLEdBQUcscUJBQXFCLEdBQUcsY0FBYztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFx1dGlsc1xcYnVpbGRcXGFzc2VydC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXNzZXJ0RGVmaW5lZEFuZE5vdE51bGwgPSBleHBvcnRzLmFzc2VydERlZmluZWQgPSBleHBvcnRzLmFzc2VydCA9IHZvaWQgMDtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvZXhwbGljaXQtbW9kdWxlLWJvdW5kYXJ5LXR5cGVzXG5mdW5jdGlvbiBhc3NlcnQoY29uZGl0aW9uLCBtc2cpIHtcbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnIHx8IFwiY29uZGl0aW9uIGlzIG5vdCB0cnV0aHlcIik7XG4gICAgfVxufVxuZXhwb3J0cy5hc3NlcnQgPSBhc3NlcnQ7XG5mdW5jdGlvbiBhc3NlcnREZWZpbmVkKHZhbHVlLCBtc2cpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnID8/IFwidmFsdWUgaXMgdW5kZWZpbmVkXCIpO1xuICAgIH1cbn1cbmV4cG9ydHMuYXNzZXJ0RGVmaW5lZCA9IGFzc2VydERlZmluZWQ7XG5mdW5jdGlvbiBhc3NlcnREZWZpbmVkQW5kTm90TnVsbCh2YWx1ZSwgbXNnKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyA/PyBcInZhbHVlIGlzIHVuZGVmaW5lZCBvciBudWxsXCIpO1xuICAgIH1cbn1cbmV4cG9ydHMuYXNzZXJ0RGVmaW5lZEFuZE5vdE51bGwgPSBhc3NlcnREZWZpbmVkQW5kTm90TnVsbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFzc2VydC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/assert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isUint8Array = exports.isNonNullObject = exports.isDefined = exports.sleep = exports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = exports.arrayContentStartsWith = exports.arrayContentEquals = void 0;\nvar arrays_1 = __webpack_require__(/*! ./arrays */ \"(ssr)/./node_modules/@cosmjs/utils/build/arrays.js\");\nObject.defineProperty(exports, \"arrayContentEquals\", ({ enumerable: true, get: function () { return arrays_1.arrayContentEquals; } }));\nObject.defineProperty(exports, \"arrayContentStartsWith\", ({ enumerable: true, get: function () { return arrays_1.arrayContentStartsWith; } }));\nvar assert_1 = __webpack_require__(/*! ./assert */ \"(ssr)/./node_modules/@cosmjs/utils/build/assert.js\");\nObject.defineProperty(exports, \"assert\", ({ enumerable: true, get: function () { return assert_1.assert; } }));\nObject.defineProperty(exports, \"assertDefined\", ({ enumerable: true, get: function () { return assert_1.assertDefined; } }));\nObject.defineProperty(exports, \"assertDefinedAndNotNull\", ({ enumerable: true, get: function () { return assert_1.assertDefinedAndNotNull; } }));\nvar sleep_1 = __webpack_require__(/*! ./sleep */ \"(ssr)/./node_modules/@cosmjs/utils/build/sleep.js\");\nObject.defineProperty(exports, \"sleep\", ({ enumerable: true, get: function () { return sleep_1.sleep; } }));\nvar typechecks_1 = __webpack_require__(/*! ./typechecks */ \"(ssr)/./node_modules/@cosmjs/utils/build/typechecks.js\");\nObject.defineProperty(exports, \"isDefined\", ({ enumerable: true, get: function () { return typechecks_1.isDefined; } }));\nObject.defineProperty(exports, \"isNonNullObject\", ({ enumerable: true, get: function () { return typechecks_1.isNonNullObject; } }));\nObject.defineProperty(exports, \"isUint8Array\", ({ enumerable: true, get: function () { return typechecks_1.isUint8Array; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyx1QkFBdUIsR0FBRyxpQkFBaUIsR0FBRyxhQUFhLEdBQUcsK0JBQStCLEdBQUcscUJBQXFCLEdBQUcsY0FBYyxHQUFHLDhCQUE4QixHQUFHLDBCQUEwQjtBQUMzTixlQUFlLG1CQUFPLENBQUMsb0VBQVU7QUFDakMsc0RBQXFELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ3BJLDBEQUF5RCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUM1SSxlQUFlLG1CQUFPLENBQUMsb0VBQVU7QUFDakMsMENBQXlDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDO0FBQzVHLGlEQUFnRCxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUMxSCwyREFBMEQsRUFBRSxxQ0FBcUMsNENBQTRDLEVBQUM7QUFDOUksY0FBYyxtQkFBTyxDQUFDLGtFQUFTO0FBQy9CLHlDQUF3QyxFQUFFLHFDQUFxQyx5QkFBeUIsRUFBQztBQUN6RyxtQkFBbUIsbUJBQU8sQ0FBQyw0RUFBYztBQUN6Qyw2Q0FBNEMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7QUFDdEgsbURBQWtELEVBQUUscUNBQXFDLHdDQUF3QyxFQUFDO0FBQ2xJLGdEQUErQyxFQUFFLHFDQUFxQyxxQ0FBcUMsRUFBQztBQUM1SCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcT25lRHJpdmVcXERlc2t0b3BcXHZhdWx0cXVlc3RcXG5vZGVfbW9kdWxlc1xcQGNvc21qc1xcdXRpbHNcXGJ1aWxkXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNVaW50OEFycmF5ID0gZXhwb3J0cy5pc05vbk51bGxPYmplY3QgPSBleHBvcnRzLmlzRGVmaW5lZCA9IGV4cG9ydHMuc2xlZXAgPSBleHBvcnRzLmFzc2VydERlZmluZWRBbmROb3ROdWxsID0gZXhwb3J0cy5hc3NlcnREZWZpbmVkID0gZXhwb3J0cy5hc3NlcnQgPSBleHBvcnRzLmFycmF5Q29udGVudFN0YXJ0c1dpdGggPSBleHBvcnRzLmFycmF5Q29udGVudEVxdWFscyA9IHZvaWQgMDtcbnZhciBhcnJheXNfMSA9IHJlcXVpcmUoXCIuL2FycmF5c1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFycmF5Q29udGVudEVxdWFsc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXJyYXlzXzEuYXJyYXlDb250ZW50RXF1YWxzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYXJyYXlDb250ZW50U3RhcnRzV2l0aFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXJyYXlzXzEuYXJyYXlDb250ZW50U3RhcnRzV2l0aDsgfSB9KTtcbnZhciBhc3NlcnRfMSA9IHJlcXVpcmUoXCIuL2Fzc2VydFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFzc2VydFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXNzZXJ0XzEuYXNzZXJ0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYXNzZXJ0RGVmaW5lZFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXNzZXJ0XzEuYXNzZXJ0RGVmaW5lZDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFzc2VydERlZmluZWRBbmROb3ROdWxsXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhc3NlcnRfMS5hc3NlcnREZWZpbmVkQW5kTm90TnVsbDsgfSB9KTtcbnZhciBzbGVlcF8xID0gcmVxdWlyZShcIi4vc2xlZXBcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJzbGVlcFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2xlZXBfMS5zbGVlcDsgfSB9KTtcbnZhciB0eXBlY2hlY2tzXzEgPSByZXF1aXJlKFwiLi90eXBlY2hlY2tzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNEZWZpbmVkXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0eXBlY2hlY2tzXzEuaXNEZWZpbmVkOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNOb25OdWxsT2JqZWN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0eXBlY2hlY2tzXzEuaXNOb25OdWxsT2JqZWN0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNVaW50OEFycmF5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0eXBlY2hlY2tzXzEuaXNVaW50OEFycmF5OyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/sleep.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/sleep.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sleep = void 0;\nasync function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\nexports.sleep = sleep;\n//# sourceMappingURL=sleep.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9zbGVlcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxPbmVEcml2ZVxcRGVza3RvcFxcdmF1bHRxdWVzdFxcbm9kZV9tb2R1bGVzXFxAY29zbWpzXFx1dGlsc1xcYnVpbGRcXHNsZWVwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zbGVlcCA9IHZvaWQgMDtcbmFzeW5jIGZ1bmN0aW9uIHNsZWVwKG1zKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKSk7XG59XG5leHBvcnRzLnNsZWVwID0gc2xlZXA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zbGVlcC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/sleep.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/typechecks.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/typechecks.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isDefined = exports.isUint8Array = exports.isNonNullObject = void 0;\n/**\n * Checks if data is a non-null object (i.e. matches the TypeScript object type).\n *\n * Note: this returns true for arrays, which are objects in JavaScript\n * even though array and object are different types in JSON.\n *\n * @see https://www.typescriptlang.org/docs/handbook/basic-types.html#object\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNonNullObject(data) {\n    return typeof data === \"object\" && data !== null;\n}\nexports.isNonNullObject = isNonNullObject;\n/**\n * Checks if data is an Uint8Array. Note: Buffer is treated as not a Uint8Array\n */\nfunction isUint8Array(data) {\n    if (!isNonNullObject(data))\n        return false;\n    // Avoid instanceof check which is unreliable in some JS environments\n    // https://medium.com/@simonwarta/limitations-of-the-instanceof-operator-f4bcdbe7a400\n    // Use check that was discussed in https://github.com/crypto-browserify/pbkdf2/pull/81\n    if (Object.prototype.toString.call(data) !== \"[object Uint8Array]\")\n        return false;\n    if (typeof Buffer !== \"undefined\" && typeof Buffer.isBuffer !== \"undefined\") {\n        // Buffer.isBuffer is available at runtime\n        if (Buffer.isBuffer(data))\n            return false;\n    }\n    return true;\n}\nexports.isUint8Array = isUint8Array;\n/**\n * Checks if input is not undefined in a TypeScript-friendly way.\n *\n * This is convenient to use in e.g. `Array.filter` as it will convert\n * the type of a `Array<Foo | undefined>` to `Array<Foo>`.\n */\nfunction isDefined(value) {\n    return value !== undefined;\n}\nexports.isDefined = isDefined;\n//# sourceMappingURL=typechecks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC90eXBlY2hlY2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLG9CQUFvQixHQUFHLHVCQUF1QjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcT25lRHJpdmVcXERlc2t0b3BcXHZhdWx0cXVlc3RcXG5vZGVfbW9kdWxlc1xcQGNvc21qc1xcdXRpbHNcXGJ1aWxkXFx0eXBlY2hlY2tzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0RlZmluZWQgPSBleHBvcnRzLmlzVWludDhBcnJheSA9IGV4cG9ydHMuaXNOb25OdWxsT2JqZWN0ID0gdm9pZCAwO1xuLyoqXG4gKiBDaGVja3MgaWYgZGF0YSBpcyBhIG5vbi1udWxsIG9iamVjdCAoaS5lLiBtYXRjaGVzIHRoZSBUeXBlU2NyaXB0IG9iamVjdCB0eXBlKS5cbiAqXG4gKiBOb3RlOiB0aGlzIHJldHVybnMgdHJ1ZSBmb3IgYXJyYXlzLCB3aGljaCBhcmUgb2JqZWN0cyBpbiBKYXZhU2NyaXB0XG4gKiBldmVuIHRob3VnaCBhcnJheSBhbmQgb2JqZWN0IGFyZSBkaWZmZXJlbnQgdHlwZXMgaW4gSlNPTi5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vd3d3LnR5cGVzY3JpcHRsYW5nLm9yZy9kb2NzL2hhbmRib29rL2Jhc2ljLXR5cGVzLmh0bWwjb2JqZWN0XG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXR5cGVzXG5mdW5jdGlvbiBpc05vbk51bGxPYmplY3QoZGF0YSkge1xuICAgIHJldHVybiB0eXBlb2YgZGF0YSA9PT0gXCJvYmplY3RcIiAmJiBkYXRhICE9PSBudWxsO1xufVxuZXhwb3J0cy5pc05vbk51bGxPYmplY3QgPSBpc05vbk51bGxPYmplY3Q7XG4vKipcbiAqIENoZWNrcyBpZiBkYXRhIGlzIGFuIFVpbnQ4QXJyYXkuIE5vdGU6IEJ1ZmZlciBpcyB0cmVhdGVkIGFzIG5vdCBhIFVpbnQ4QXJyYXlcbiAqL1xuZnVuY3Rpb24gaXNVaW50OEFycmF5KGRhdGEpIHtcbiAgICBpZiAoIWlzTm9uTnVsbE9iamVjdChkYXRhKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIC8vIEF2b2lkIGluc3RhbmNlb2YgY2hlY2sgd2hpY2ggaXMgdW5yZWxpYWJsZSBpbiBzb21lIEpTIGVudmlyb25tZW50c1xuICAgIC8vIGh0dHBzOi8vbWVkaXVtLmNvbS9Ac2ltb253YXJ0YS9saW1pdGF0aW9ucy1vZi10aGUtaW5zdGFuY2VvZi1vcGVyYXRvci1mNGJjZGJlN2E0MDBcbiAgICAvLyBVc2UgY2hlY2sgdGhhdCB3YXMgZGlzY3Vzc2VkIGluIGh0dHBzOi8vZ2l0aHViLmNvbS9jcnlwdG8tYnJvd3NlcmlmeS9wYmtkZjIvcHVsbC84MVxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZGF0YSkgIT09IFwiW29iamVjdCBVaW50OEFycmF5XVwiKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiBCdWZmZXIgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIEJ1ZmZlci5pc0J1ZmZlciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAvLyBCdWZmZXIuaXNCdWZmZXIgaXMgYXZhaWxhYmxlIGF0IHJ1bnRpbWVcbiAgICAgICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihkYXRhKSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnRzLmlzVWludDhBcnJheSA9IGlzVWludDhBcnJheTtcbi8qKlxuICogQ2hlY2tzIGlmIGlucHV0IGlzIG5vdCB1bmRlZmluZWQgaW4gYSBUeXBlU2NyaXB0LWZyaWVuZGx5IHdheS5cbiAqXG4gKiBUaGlzIGlzIGNvbnZlbmllbnQgdG8gdXNlIGluIGUuZy4gYEFycmF5LmZpbHRlcmAgYXMgaXQgd2lsbCBjb252ZXJ0XG4gKiB0aGUgdHlwZSBvZiBhIGBBcnJheTxGb28gfCB1bmRlZmluZWQ+YCB0byBgQXJyYXk8Rm9vPmAuXG4gKi9cbmZ1bmN0aW9uIGlzRGVmaW5lZCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkO1xufVxuZXhwb3J0cy5pc0RlZmluZWQgPSBpc0RlZmluZWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlY2hlY2tzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/typechecks.js\n");

/***/ })

};
;