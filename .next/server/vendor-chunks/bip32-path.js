/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/bip32-path";
exports.ids = ["vendor-chunks/bip32-path"];
exports.modules = {

/***/ "(ssr)/./node_modules/bip32-path/index.js":
/*!******************************************!*\
  !*** ./node_modules/bip32-path/index.js ***!
  \******************************************/
/***/ ((module) => {

eval("/*\n * Bitcoin BIP32 path helpers\n * (C) 2016 Alex Beregszaszi\n */\n\nconst HARDENED = 0x80000000\n\nvar BIPPath = function (path) {\n  if (!Array.isArray(path)) {\n    throw new Error('Input must be an Array')\n  }\n  if (path.length === 0) {\n    throw new Error('Path must contain at least one level')\n  }\n  for (var i = 0; i < path.length; i++) {\n    if (typeof path[i] !== 'number') {\n      throw new Error('Path element is not a number')\n    }\n  }\n  this.path = path\n}\n\nBIPPath.validatePathArray = function (path) {\n  try {\n    BIPPath.fromPathArray(path)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nBIPPath.validateString = function (text, reqRoot) {\n  try {\n    BIPPath.fromString(text, reqRoot)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nBIPPath.fromPathArray = function (path) {\n  return new BIPPath(path)\n}\n\nBIPPath.fromString = function (text, reqRoot) {\n  // skip the root\n  if (/^m\\//i.test(text)) {\n    text = text.slice(2)\n  } else if (reqRoot) {\n    throw new Error('Root element is required')\n  }\n\n  var path = text.split('/')\n  var ret = new Array(path.length)\n  for (var i = 0; i < path.length; i++) {\n    var tmp = /(\\d+)([hH\\']?)/.exec(path[i])\n    if (tmp === null) {\n      throw new Error('Invalid input')\n    }\n    ret[i] = parseInt(tmp[1], 10)\n\n    if (ret[i] >= HARDENED) {\n      throw new Error('Invalid child index')\n    }\n\n    if (tmp[2] === 'h' || tmp[2] === 'H' || tmp[2] === '\\'') {\n      ret[i] += HARDENED\n    } else if (tmp[2].length != 0) {\n      throw new Error('Invalid modifier')\n    }\n  }\n  return new BIPPath(ret)\n}\n\nBIPPath.prototype.toPathArray = function () {\n  return this.path\n}\n\nBIPPath.prototype.toString = function (noRoot, oldStyle) {\n  var ret = new Array(this.path.length)\n  for (var i = 0; i < this.path.length; i++) {\n    var tmp = this.path[i]\n    if (tmp & HARDENED) {\n      ret[i] = (tmp & ~HARDENED) + (oldStyle ? 'h' : '\\'')\n    } else {\n      ret[i] = tmp\n    }\n  }\n  return (noRoot ? '' : 'm/') + ret.join('/')\n}\n\nBIPPath.prototype.inspect = function () {\n  return 'BIPPath <' + this.toString() + '>'\n}\n\nmodule.exports = BIPPath\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYmlwMzItcGF0aC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLHNCQUFzQjtBQUN4QztBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5cXE9uZURyaXZlXFxEZXNrdG9wXFx2YXVsdHF1ZXN0XFxub2RlX21vZHVsZXNcXGJpcDMyLXBhdGhcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBCaXRjb2luIEJJUDMyIHBhdGggaGVscGVyc1xuICogKEMpIDIwMTYgQWxleCBCZXJlZ3N6YXN6aVxuICovXG5cbmNvbnN0IEhBUkRFTkVEID0gMHg4MDAwMDAwMFxuXG52YXIgQklQUGF0aCA9IGZ1bmN0aW9uIChwYXRoKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShwYXRoKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW5wdXQgbXVzdCBiZSBhbiBBcnJheScpXG4gIH1cbiAgaWYgKHBhdGgubGVuZ3RoID09PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdQYXRoIG11c3QgY29udGFpbiBhdCBsZWFzdCBvbmUgbGV2ZWwnKVxuICB9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgcGF0aFtpXSAhPT0gJ251bWJlcicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUGF0aCBlbGVtZW50IGlzIG5vdCBhIG51bWJlcicpXG4gICAgfVxuICB9XG4gIHRoaXMucGF0aCA9IHBhdGhcbn1cblxuQklQUGF0aC52YWxpZGF0ZVBhdGhBcnJheSA9IGZ1bmN0aW9uIChwYXRoKSB7XG4gIHRyeSB7XG4gICAgQklQUGF0aC5mcm9tUGF0aEFycmF5KHBhdGgpXG4gICAgcmV0dXJuIHRydWVcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG59XG5cbkJJUFBhdGgudmFsaWRhdGVTdHJpbmcgPSBmdW5jdGlvbiAodGV4dCwgcmVxUm9vdCkge1xuICB0cnkge1xuICAgIEJJUFBhdGguZnJvbVN0cmluZyh0ZXh0LCByZXFSb290KVxuICAgIHJldHVybiB0cnVlXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG5CSVBQYXRoLmZyb21QYXRoQXJyYXkgPSBmdW5jdGlvbiAocGF0aCkge1xuICByZXR1cm4gbmV3IEJJUFBhdGgocGF0aClcbn1cblxuQklQUGF0aC5mcm9tU3RyaW5nID0gZnVuY3Rpb24gKHRleHQsIHJlcVJvb3QpIHtcbiAgLy8gc2tpcCB0aGUgcm9vdFxuICBpZiAoL15tXFwvL2kudGVzdCh0ZXh0KSkge1xuICAgIHRleHQgPSB0ZXh0LnNsaWNlKDIpXG4gIH0gZWxzZSBpZiAocmVxUm9vdCkge1xuICAgIHRocm93IG5ldyBFcnJvcignUm9vdCBlbGVtZW50IGlzIHJlcXVpcmVkJylcbiAgfVxuXG4gIHZhciBwYXRoID0gdGV4dC5zcGxpdCgnLycpXG4gIHZhciByZXQgPSBuZXcgQXJyYXkocGF0aC5sZW5ndGgpXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0bXAgPSAvKFxcZCspKFtoSFxcJ10/KS8uZXhlYyhwYXRoW2ldKVxuICAgIGlmICh0bXAgPT09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBpbnB1dCcpXG4gICAgfVxuICAgIHJldFtpXSA9IHBhcnNlSW50KHRtcFsxXSwgMTApXG5cbiAgICBpZiAocmV0W2ldID49IEhBUkRFTkVEKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY2hpbGQgaW5kZXgnKVxuICAgIH1cblxuICAgIGlmICh0bXBbMl0gPT09ICdoJyB8fCB0bXBbMl0gPT09ICdIJyB8fCB0bXBbMl0gPT09ICdcXCcnKSB7XG4gICAgICByZXRbaV0gKz0gSEFSREVORURcbiAgICB9IGVsc2UgaWYgKHRtcFsyXS5sZW5ndGggIT0gMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIG1vZGlmaWVyJylcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG5ldyBCSVBQYXRoKHJldClcbn1cblxuQklQUGF0aC5wcm90b3R5cGUudG9QYXRoQXJyYXkgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLnBhdGhcbn1cblxuQklQUGF0aC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAobm9Sb290LCBvbGRTdHlsZSkge1xuICB2YXIgcmV0ID0gbmV3IEFycmF5KHRoaXMucGF0aC5sZW5ndGgpXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5wYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRtcCA9IHRoaXMucGF0aFtpXVxuICAgIGlmICh0bXAgJiBIQVJERU5FRCkge1xuICAgICAgcmV0W2ldID0gKHRtcCAmIH5IQVJERU5FRCkgKyAob2xkU3R5bGUgPyAnaCcgOiAnXFwnJylcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0W2ldID0gdG1wXG4gICAgfVxuICB9XG4gIHJldHVybiAobm9Sb290ID8gJycgOiAnbS8nKSArIHJldC5qb2luKCcvJylcbn1cblxuQklQUGF0aC5wcm90b3R5cGUuaW5zcGVjdCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuICdCSVBQYXRoIDwnICsgdGhpcy50b1N0cmluZygpICsgJz4nXG59XG5cbm1vZHVsZS5leHBvcnRzID0gQklQUGF0aFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/bip32-path/index.js\n");

/***/ })

};
;